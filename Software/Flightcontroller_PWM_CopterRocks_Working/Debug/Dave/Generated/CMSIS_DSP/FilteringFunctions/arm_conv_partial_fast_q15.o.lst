   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_partial_fast_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_partial_fast_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_partial_fast_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_partial_fast_q15:
  26              	.LFB139:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /* ----------------------------------------------------------------------   
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.   
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * Project: 	    CMSIS DSP Library   
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * Title:		arm_conv_partial_fast_q15.c   
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * Description:	Fast Q15 Partial convolution.   
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * Target Processor: Cortex-M4/Cortex-M3
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * POSSIBILITY OF SUCH DAMAGE.  
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**   
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @ingroup groupFilters   
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**   
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @addtogroup PartialConv   
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @{   
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** /**   
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.   
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       *pSrcA points to the first input sequence.   
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       srcALen length of the first input sequence.   
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       *pSrcB points to the second input sequence.   
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       srcBLen length of the second input sequence.   
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[out]      *pDst points to the location where the output result is written.   
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       firstIndex is the first output sample to start with.   
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @param[in]       numPoints is the number of output points to be computed.   
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * @return Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  *   
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  * See <code>arm_conv_partial_q15()</code> for a slower implementation of this function which uses 
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  */
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** arm_status arm_conv_partial_fast_q15(
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t * pSrcA,
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t srcALen,
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t * pSrcB,
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t srcBLen,
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t * pDst,
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t firstIndex,
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t numPoints)
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** {
  28              	 .loc 1 75 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 90B4     	 push {r4,r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 7,-4
  38 0002 ADF5247D 	 sub sp,sp,#656
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 664
  41 0006 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0008 07F10C04 	 add r4,r7,#12
  45 000c 2060     	 str r0,[r4]
  46 000e 07F10800 	 add r0,r7,#8
  47 0012 0160     	 str r1,[r0]
  48 0014 391D     	 adds r1,r7,#4
  49 0016 0A60     	 str r2,[r1]
  50 0018 3A46     	 mov r2,r7
  51 001a 1360     	 str r3,[r2]
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
  52              	 .loc 1 80 0
  53 001c 07F11803 	 add r3,r7,#24
  54 0020 D7F89822 	 ldr r2,[r7,#664]
  55 0024 1A60     	 str r2,[r3]
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator                  */
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers        */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t j, k, count, check, blkCnt;
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   int32_t blockSize1, blockSize2, blockSize3;    /* loop counters                 */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   arm_status status;                             /* status of Partial convolution */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Check for range of output samples to be calculated */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   if((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
  56              	 .loc 1 91 0
  57 0026 D7F89C22 	 ldr r2,[r7,#668]
  58 002a D7F8A032 	 ldr r3,[r7,#672]
  59 002e 1A44     	 add r2,r2,r3
  60 0030 3946     	 mov r1,r7
  61 0032 07F10803 	 add r3,r7,#8
  62 0036 0968     	 ldr r1,[r1]
  63 0038 1B68     	 ldr r3,[r3]
  64 003a 0B44     	 add r3,r3,r1
  65 003c 013B     	 subs r3,r3,#1
  66 003e 9A42     	 cmp r2,r3
  67 0040 04D9     	 bls .L2
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  68              	 .loc 1 94 0
  69 0042 FF23     	 movs r3,#255
  70 0044 87F84B32 	 strb r3,[r7,#587]
  71 0048 01F0FFB8 	 b .L3
  72              	.L2:
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   else
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* srcB is always made to slide across srcA. */
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if(srcALen >=srcBLen)
  73              	 .loc 1 102 0
  74 004c 07F10802 	 add r2,r7,#8
  75 0050 3B46     	 mov r3,r7
  76 0052 1268     	 ldr r2,[r2]
  77 0054 1B68     	 ldr r3,[r3]
  78 0056 9A42     	 cmp r2,r3
  79 0058 09D3     	 bcc .L4
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcA;
  80              	 .loc 1 105 0
  81 005a 07F10C03 	 add r3,r7,#12
  82 005e 1B68     	 ldr r3,[r3]
  83 0060 C7F88C32 	 str r3,[r7,#652]
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcB;
  84              	 .loc 1 108 0
  85 0064 3B1D     	 adds r3,r7,#4
  86 0066 1B68     	 ldr r3,[r3]
  87 0068 C7F88832 	 str r3,[r7,#648]
  88 006c 16E0     	 b .L5
  89              	.L4:
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcB;
  90              	 .loc 1 113 0
  91 006e 3B1D     	 adds r3,r7,#4
  92 0070 1B68     	 ldr r3,[r3]
  93 0072 C7F88C32 	 str r3,[r7,#652]
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcA;
  94              	 .loc 1 116 0
  95 0076 07F10C03 	 add r3,r7,#12
  96 007a 1B68     	 ldr r3,[r3]
  97 007c C7F88832 	 str r3,[r7,#648]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j = srcBLen;
  98              	 .loc 1 119 0
  99 0080 3B46     	 mov r3,r7
 100 0082 1B68     	 ldr r3,[r3]
 101 0084 C7F86032 	 str r3,[r7,#608]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcBLen = srcALen;
 102              	 .loc 1 120 0
 103 0088 3B46     	 mov r3,r7
 104 008a 07F10802 	 add r2,r7,#8
 105 008e 1268     	 ldr r2,[r2]
 106 0090 1A60     	 str r2,[r3]
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcALen = j;
 107              	 .loc 1 121 0
 108 0092 07F10803 	 add r3,r7,#8
 109 0096 D7F86022 	 ldr r2,[r7,#608]
 110 009a 1A60     	 str r2,[r3]
 111              	.L5:
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Conditions to check which loopCounter holds   
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * the first and last indices of the output samples to be calculated. */
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     check = firstIndex + numPoints;
 112              	 .loc 1 126 0
 113 009c D7F89C22 	 ldr r2,[r7,#668]
 114 00a0 D7F8A032 	 ldr r3,[r7,#672]
 115 00a4 1344     	 add r3,r3,r2
 116 00a6 C7F84432 	 str r3,[r7,#580]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 117              	 .loc 1 127 0
 118 00aa D7F84422 	 ldr r2,[r7,#580]
 119 00ae 07F10803 	 add r3,r7,#8
 120 00b2 1B68     	 ldr r3,[r3]
 121 00b4 9A42     	 cmp r2,r3
 122 00b6 06DD     	 ble .L6
 123              	 .loc 1 127 0 is_stmt 0 discriminator 1
 124 00b8 D7F84422 	 ldr r2,[r7,#580]
 125 00bc 07F10803 	 add r3,r7,#8
 126 00c0 1B68     	 ldr r3,[r3]
 127 00c2 D31A     	 subs r3,r2,r3
 128 00c4 00E0     	 b .L7
 129              	.L6:
 130              	 .loc 1 127 0 discriminator 2
 131 00c6 0023     	 movs r3,#0
 132              	.L7:
 133              	 .loc 1 127 0 discriminator 4
 134 00c8 C7F84C32 	 str r3,[r7,#588]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 135              	 .loc 1 128 0 is_stmt 1 discriminator 4
 136 00cc D7F89C22 	 ldr r2,[r7,#668]
 137 00d0 07F10803 	 add r3,r7,#8
 138 00d4 1B68     	 ldr r3,[r3]
 139 00d6 013B     	 subs r3,r3,#1
 140 00d8 9A42     	 cmp r2,r3
 141 00da 09DD     	 ble .L8
 142              	 .loc 1 128 0 is_stmt 0 discriminator 1
 143 00dc D7F89C32 	 ldr r3,[r7,#668]
 144 00e0 D7F84C22 	 ldr r2,[r7,#588]
 145 00e4 D21A     	 subs r2,r2,r3
 146 00e6 07F10803 	 add r3,r7,#8
 147 00ea 1B68     	 ldr r3,[r3]
 148 00ec 1344     	 add r3,r3,r2
 149 00ee 01E0     	 b .L9
 150              	.L8:
 151              	 .loc 1 128 0 discriminator 2
 152 00f0 D7F84C32 	 ldr r3,[r7,#588]
 153              	.L9:
 154              	 .loc 1 128 0 discriminator 4
 155 00f4 C7F84C32 	 str r3,[r7,#588]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (((int32_t) srcBLen - 1) - (int32_t) firstIndex);
 156              	 .loc 1 129 0 is_stmt 1 discriminator 4
 157 00f8 3B46     	 mov r3,r7
 158 00fa 1A68     	 ldr r2,[r3]
 159 00fc D7F89C32 	 ldr r3,[r7,#668]
 160 0100 D31A     	 subs r3,r2,r3
 161 0102 013B     	 subs r3,r3,#1
 162 0104 C7F85032 	 str r3,[r7,#592]
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****                                      (int32_t) numPoints) : 0;
 163              	 .loc 1 131 0 discriminator 4
 164 0108 D7F85032 	 ldr r3,[r7,#592]
 165 010c 002B     	 cmp r3,#0
 166 010e 0CDD     	 ble .L10
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 167              	 .loc 1 130 0
 168 0110 3B46     	 mov r3,r7
 169 0112 1B68     	 ldr r3,[r3]
 170 0114 5A1E     	 subs r2,r3,#1
 171 0116 D7F84432 	 ldr r3,[r7,#580]
 172 011a 9A42     	 cmp r2,r3
 173 011c 02D3     	 bcc .L11
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 174              	 .loc 1 130 0 is_stmt 0 discriminator 1
 175 011e D7F8A032 	 ldr r3,[r7,#672]
 176 0122 03E0     	 b .L13
 177              	.L11:
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 178              	 .loc 1 130 0 discriminator 2
 179 0124 D7F85032 	 ldr r3,[r7,#592]
 180 0128 00E0     	 b .L13
 181              	.L10:
 182              	 .loc 1 131 0 is_stmt 1 discriminator 1
 183 012a 0023     	 movs r3,#0
 184              	.L13:
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 185              	 .loc 1 130 0
 186 012c C7F85032 	 str r3,[r7,#592]
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) +
 187              	 .loc 1 132 0
 188 0130 D7F84422 	 ldr r2,[r7,#580]
 189 0134 D7F84C12 	 ldr r1,[r7,#588]
 190 0138 D7F85032 	 ldr r3,[r7,#592]
 191 013c 1944     	 add r1,r1,r3
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****                                     (int32_t) firstIndex);
 192              	 .loc 1 133 0
 193 013e D7F89C32 	 ldr r3,[r7,#668]
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) +
 194              	 .loc 1 132 0
 195 0142 0B44     	 add r3,r3,r1
 196 0144 D31A     	 subs r3,r2,r3
 197 0146 C7F84032 	 str r3,[r7,#576]
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 198              	 .loc 1 134 0
 199 014a D7F84032 	 ldr r3,[r7,#576]
 200 014e 23EAE373 	 bic r3,r3,r3,asr#31
 201 0152 C7F84032 	 str r3,[r7,#576]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The function is internally   
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * divided into three stages according to the number of multiplications that has to be   
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the   
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * algorithm, the multiplications increase by one for every iteration.   
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.   
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one   
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * for every iteration. */
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set the output pointer to point to the firstIndex   
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * of the output sample to be calculated. */
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pOut = pDst + firstIndex;
 202              	 .loc 1 147 0
 203 0156 D7F89C32 	 ldr r3,[r7,#668]
 204 015a 5B00     	 lsls r3,r3,#1
 205 015c D7F89822 	 ldr r2,[r7,#664]
 206 0160 1A44     	 add r2,r2,r3
 207 0162 07F11803 	 add r3,r7,#24
 208 0166 1A60     	 str r2,[r3]
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------   
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage1   
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[0]   
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]   
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....   
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]   
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.   
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed.   
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Since the partial convolution starts from firstIndex   
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 1u + firstIndex;
 209              	 .loc 1 163 0
 210 0168 D7F89C32 	 ldr r3,[r7,#668]
 211 016c 0133     	 adds r3,r3,#1
 212 016e C7F85832 	 str r3,[r7,#600]
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pIn1;
 213              	 .loc 1 166 0
 214 0172 07F11403 	 add r3,r7,#20
 215 0176 D7F88C22 	 ldr r2,[r7,#652]
 216 017a 1A60     	 str r2,[r3]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + firstIndex;
 217              	 .loc 1 169 0
 218 017c D7F89C32 	 ldr r3,[r7,#668]
 219 0180 5B00     	 lsls r3,r3,#1
 220 0182 D7F88822 	 ldr r2,[r7,#648]
 221 0186 1344     	 add r3,r3,r2
 222 0188 C7F86C32 	 str r3,[r7,#620]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 223              	 .loc 1 170 0
 224 018c 07F11003 	 add r3,r7,#16
 225 0190 D7F86C22 	 ldr r2,[r7,#620]
 226 0194 1A60     	 str r2,[r3]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* ------------------------   
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage1 process   
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ----------------------*/
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while((count < 4u) && (blockSize1 > 0))
 227              	 .loc 1 181 0
 228 0196 5DE0     	 b .L14
 229              	.L19:
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 230              	 .loc 1 184 0
 231 0198 0023     	 movs r3,#0
 232 019a C7F88432 	 str r3,[r7,#644]
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop over number of MAC operations between   
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * inputA samples and inputB samples */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 233              	 .loc 1 188 0
 234 019e D7F85832 	 ldr r3,[r7,#600]
 235 01a2 C7F85C32 	 str r3,[r7,#604]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 236              	 .loc 1 190 0
 237 01a6 2CE0     	 b .L15
 238              	.L17:
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 239              	 .loc 1 193 0
 240 01a8 07F11403 	 add r3,r7,#20
 241 01ac 1B68     	 ldr r3,[r3]
 242 01ae 991C     	 adds r1,r3,#2
 243 01b0 07F11402 	 add r2,r7,#20
 244 01b4 1160     	 str r1,[r2]
 245 01b6 1B88     	 ldrh r3,[r3]
 246 01b8 19B2     	 sxth r1,r3
 247 01ba 07F11003 	 add r3,r7,#16
 248 01be 1B68     	 ldr r3,[r3]
 249 01c0 981E     	 subs r0,r3,#2
 250 01c2 07F11002 	 add r2,r7,#16
 251 01c6 1060     	 str r0,[r2]
 252 01c8 1B88     	 ldrh r3,[r3]
 253 01ca 1AB2     	 sxth r2,r3
 254 01cc D7F88432 	 ldr r3,[r7,#644]
 255 01d0 C7F81812 	 str r1,[r7,#536]
 256 01d4 C7F81422 	 str r2,[r7,#532]
 257 01d8 C7F81032 	 str r3,[r7,#528]
 258              	.LBB68:
 259              	.LBB69:
 260              	 .file 2 "C:\\Workspaces\\DAVE-4.1\\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V4.30
   5:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     20. October 2015
   6:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
   9:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    All rights reserved.
  10:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      specific prior written permission.
  20:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    *
  21:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  35:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  38:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  45:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  46:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  47:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  51:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  52:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  53:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  54:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  58:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  60:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  62:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  63:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  64:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  65:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  69:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  71:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  73:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  74:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  75:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  76:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
  77:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
  79:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  80:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  82:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
  83:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  84:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
  86:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
  91:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 104:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 115:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 116:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 118:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 119:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 121:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 122:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 123:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 125:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 126:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 127:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 128:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 129:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 130:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 132:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     \return               xPSR Register value
 133:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 134:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 136:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 137:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 138:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 140:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 141:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 142:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 143:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 144:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 147:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 148:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 150:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 151:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 152:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 154:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 155:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 156:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 157:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 158:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 162:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 164:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 172:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 176:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 186:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 188:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 190:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 192:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 193:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 194:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 195:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 196:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 198:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 199:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 201:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 202:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 203:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 206:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 207:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 208:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 209:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 210:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 213:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 215:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 217:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 218:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 219:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 221:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 222:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 223:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 226:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 228:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 230:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 231:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 232:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 233:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 234:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 237:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 239:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 241:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 245:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 247:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 251:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 252:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 254:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 255:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 256:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 257:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 258:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 259:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 262:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 264:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 266:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 268:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 269:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 274:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 276:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 278:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 282:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 284:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 288:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 289:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 291:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 292:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 293:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 295:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 296:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 299:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 301:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 303:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 306:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 307:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 311:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 318:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 319:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 321:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 323:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 324:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 325:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0);
 326:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 327:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 328:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 329:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 330:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 331:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 332:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 335:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 337:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 340:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 342:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 343:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 344:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 347:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 348:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 351:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 352:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 355:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 356:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 357:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 365:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 368:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 369:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 370:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 371:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 373:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 375:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("nop");
 376:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 377:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 378:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 379:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 380:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 387:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 388:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 389:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 390:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 391:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 394:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 396:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 398:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 399:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 400:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 401:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 402:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 404:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 406:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sev");
 407:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 408:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 409:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 410:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 411:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 415:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 416:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 418:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 420:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 421:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 422:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 423:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 427:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 429:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 431:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 432:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 433:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 434:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 438:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 440:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 442:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 443:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 449:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 450:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 452:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 455:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 456:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 457:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 459:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 460:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 464:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 468:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 477:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 479:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 483:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 489:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 490:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 491:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 493:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 494:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 496:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 498:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 503:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 504:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 506:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 508:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 509:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Breakpoint
 512:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 517:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 519:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 520:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 521:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 525:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 526:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 528:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 529:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 530:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 532:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 533:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   {
 538:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     result <<= 1U;
 539:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     result |= value & 1U;
 540:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     s--;
 541:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 542:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 544:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 545:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 546:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 547:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 548:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 549:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Count leading zeros
 550:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 551:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 552:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             number of leading zeros in value
 553:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 554:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CLZ             __builtin_clz
 555:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 556:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 557:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 558:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 559:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 560:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 561:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 562:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 563:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 564:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 565:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDREXB(volatile uint8_t *addr)
 566:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 567:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 568:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 569:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 570:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 571:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 572:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 573:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 574:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 575:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 576:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 577:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 578:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 579:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 581:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 582:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 583:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 584:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 585:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 586:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 587:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDREXH(volatile uint16_t *addr)
 588:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 589:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 590:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 591:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 592:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 593:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 594:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 595:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 596:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 597:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 598:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 599:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 600:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 601:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 602:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 603:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 604:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 605:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 606:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 607:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 608:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 609:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDREXW(volatile uint32_t *addr)
 610:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 611:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 612:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 614:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 615:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 616:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 617:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 618:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 619:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 620:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 621:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 622:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 623:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 624:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 625:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 626:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *a
 627:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 628:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 629:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 630:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 631:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 632:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 633:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 634:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 635:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 636:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 637:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 638:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 639:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 640:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 641:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 642:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 643:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXH(uint16_t value, volatile uint16_t 
 644:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 645:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 646:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 648:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 649:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 650:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 651:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 652:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 653:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 654:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 655:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 656:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 657:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          0  Function succeeded
 658:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return          1  Function failed
 659:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 660:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t 
 661:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 662:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    uint32_t result;
 663:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 664:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 665:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 666:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 667:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 668:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 669:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 670:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Remove the exclusive lock
 671:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 672:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 673:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __CLREX(void)
 674:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 675:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 676:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 677:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 678:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 679:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 680:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Signed Saturate
 681:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates a signed value.
 682:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 683:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 684:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
 685:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 686:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT(ARG1,ARG2) \
 687:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
 688:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 689:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
 690:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
 691:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
 692:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 693:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 694:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 695:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Unsigned Saturate
 696:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Saturates an unsigned value.
 697:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 698:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 699:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             Saturated value
 700:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 701:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT(ARG1,ARG2) \
 702:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
 703:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 704:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
 705:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
 706:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
 707:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 708:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 709:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 710:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 711:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 712:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 713:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
 714:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 715:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 716:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RRX(uint32_t value)
 717:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 718:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 719:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 720:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 721:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 722:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 723:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 724:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 725:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 726:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 727:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 728:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 729:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 730:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 731:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint8_t __LDRBT(volatile uint8_t *addr)
 732:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 733:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 734:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 735:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 736:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*addr) );
 737:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 738:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 739:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 740:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 741:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 742:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 743:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 744:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 745:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 746:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 747:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 748:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 749:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 750:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 751:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 752:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 753:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint16_t __LDRHT(volatile uint16_t *addr)
 754:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 755:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 756:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 758:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*addr) );
 759:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 760:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 761:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 762:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     */
 763:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 764:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 765:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 766:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 767:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 768:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 769:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 770:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 771:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 772:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 773:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 774:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 775:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __LDRT(volatile uint32_t *addr)
 776:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 777:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t result;
 778:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 779:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*addr) );
 780:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(result);
 781:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 782:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 783:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 784:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 785:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 786:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 787:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 788:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 789:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 790:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRBT(uint8_t value, volatile uint8_t *addr)
 791:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 792:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*addr) : "r" ((uint32_t)value) );
 793:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 794:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 795:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 796:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 797:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 798:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 799:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 800:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 801:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 802:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRHT(uint16_t value, volatile uint16_t *addr
 803:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 804:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*addr) : "r" ((uint32_t)value) );
 805:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 806:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 807:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 808:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 809:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 810:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 811:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]  value  Value to store
 812:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 813:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 814:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __STRT(uint32_t value, volatile uint32_t *addr)
 815:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 816:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*addr) : "r" (value) );
 817:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 818:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 819:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U) */
 820:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 821:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 822:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 823:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 824:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 825:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_SIMD_intrinsics CMSIS SIMD Intrinsics
 826:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated SIMD instructions
 827:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 828:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 829:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 830:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__CORTEX_M >= 0x04U)  /* only for Cortex-M4 and above */
 831:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 832:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SADD8(uint32_t op1, uint32_t op2)
 833:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 834:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 835:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 836:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 837:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 838:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 839:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 840:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __QADD8(uint32_t op1, uint32_t op2)
 841:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 842:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 843:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 845:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 846:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 847:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 848:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SHADD8(uint32_t op1, uint32_t op2)
 849:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 850:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 851:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 852:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 853:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 854:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 855:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 856:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UADD8(uint32_t op1, uint32_t op2)
 857:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 858:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 859:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 860:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 861:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 862:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 863:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 864:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UQADD8(uint32_t op1, uint32_t op2)
 865:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 866:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 867:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 868:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 869:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 870:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 871:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 872:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UHADD8(uint32_t op1, uint32_t op2)
 873:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 874:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 875:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 876:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 877:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 878:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 879:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 880:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 881:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SSUB8(uint32_t op1, uint32_t op2)
 882:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 883:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 884:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 885:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 886:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 887:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 888:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 889:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __QSUB8(uint32_t op1, uint32_t op2)
 890:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 891:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 892:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 893:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 894:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 895:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 896:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 897:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
 898:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 899:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 900:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 901:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 902:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 903:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 904:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 905:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __USUB8(uint32_t op1, uint32_t op2)
 906:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 907:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 908:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 909:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 910:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 911:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 912:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 913:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
 914:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 915:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 916:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 917:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 918:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 919:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 920:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 921:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
 922:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 923:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 924:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 925:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 926:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 927:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 928:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 929:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 930:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SADD16(uint32_t op1, uint32_t op2)
 931:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 932:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 933:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 934:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 935:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 936:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 937:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 938:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __QADD16(uint32_t op1, uint32_t op2)
 939:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 940:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 941:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 942:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 943:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 944:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 945:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 946:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SHADD16(uint32_t op1, uint32_t op2)
 947:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 948:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 949:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 950:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 951:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 952:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 953:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 954:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UADD16(uint32_t op1, uint32_t op2)
 955:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 956:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 957:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 958:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 959:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 960:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 961:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 962:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UQADD16(uint32_t op1, uint32_t op2)
 963:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 964:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 965:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 966:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 967:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 968:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 969:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 970:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UHADD16(uint32_t op1, uint32_t op2)
 971:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 972:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 973:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 974:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 975:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 976:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 977:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 978:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SSUB16(uint32_t op1, uint32_t op2)
 979:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 980:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 981:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 982:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 983:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 984:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 985:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 986:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __QSUB16(uint32_t op1, uint32_t op2)
 987:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 988:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 989:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 990:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 991:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 992:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 993:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 994:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
 995:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 996:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 997:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 998:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
 999:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1000:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1001:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1002:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __USUB16(uint32_t op1, uint32_t op2)
1003:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1004:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1005:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1006:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1007:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1008:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1009:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1010:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
1011:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1012:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1013:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1014:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1015:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1016:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1017:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1018:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
1019:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1020:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1021:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1022:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1023:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1024:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1025:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1026:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SASX(uint32_t op1, uint32_t op2)
1027:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1028:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1029:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1030:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1031:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1032:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1033:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1034:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __QASX(uint32_t op1, uint32_t op2)
1035:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1036:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1037:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1038:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1039:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1040:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1041:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1042:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SHASX(uint32_t op1, uint32_t op2)
1043:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1044:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1045:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1046:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1047:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1048:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1049:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1050:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UASX(uint32_t op1, uint32_t op2)
1051:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1052:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1053:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1054:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1055:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1056:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1057:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1058:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UQASX(uint32_t op1, uint32_t op2)
1059:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1060:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1061:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1062:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1063:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1064:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1065:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1066:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UHASX(uint32_t op1, uint32_t op2)
1067:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1068:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1069:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1070:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1071:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1072:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1073:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1074:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SSAX(uint32_t op1, uint32_t op2)
1075:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1076:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1077:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1078:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1079:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1080:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1081:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1082:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __QSAX(uint32_t op1, uint32_t op2)
1083:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1084:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1085:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1086:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1087:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1088:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1089:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1090:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SHSAX(uint32_t op1, uint32_t op2)
1091:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1092:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1093:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1094:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1095:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1096:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1097:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1098:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __USAX(uint32_t op1, uint32_t op2)
1099:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1100:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1101:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1102:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1103:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1104:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1105:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1106:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UQSAX(uint32_t op1, uint32_t op2)
1107:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1108:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1109:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1110:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1111:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1112:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1113:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1114:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UHSAX(uint32_t op1, uint32_t op2)
1115:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1116:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1117:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1118:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1119:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1120:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1121:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1122:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __USAD8(uint32_t op1, uint32_t op2)
1123:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1124:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1125:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1126:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1127:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1128:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1129:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1130:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __USADA8(uint32_t op1, uint32_t op2, ui
1131:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1132:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1133:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1134:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
1135:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1136:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1137:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1138:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SSAT16(ARG1,ARG2) \
1139:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1140:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
1141:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("ssat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1142:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1143:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1144:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1145:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __USAT16(ARG1,ARG2) \
1146:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** ({                          \
1147:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
1148:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("usat16 %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) ); \
1149:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __RES; \
1150:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  })
1151:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1152:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UXTB16(uint32_t op1)
1153:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1154:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1155:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1156:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
1157:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1158:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1159:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1160:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
1161:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1162:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1163:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1164:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1165:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1166:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1167:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1168:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SXTB16(uint32_t op1)
1169:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1170:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1171:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1172:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
1173:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1174:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1175:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1176:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
1177:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1178:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1179:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1180:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1181:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1182:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1183:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1184:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SMUAD  (uint32_t op1, uint32_t op2)
1185:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1186:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1187:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1188:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1189:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1190:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1191:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1192:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SMUADX (uint32_t op1, uint32_t op2)
1193:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1194:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1195:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1196:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
1197:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
1198:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1199:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1200:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SMLAD (uint32_t op1, uint32_t op2, ui
1201:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1202:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1203:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 261              	 .loc 2 1204 0
 262 01dc D7F81832 	 ldr r3,[r7,#536]
 263 01e0 D7F81422 	 ldr r2,[r7,#532]
 264 01e4 D7F81012 	 ldr r1,[r7,#528]
 265              	
 266 01e8 23FB0213 	 smlad r3,r3,r2,r1
 267              	
 268              	 .thumb
 269 01ec C7F80C32 	 str r3,[r7,#524]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 270              	 .loc 2 1205 0
 271 01f0 D7F80C32 	 ldr r3,[r7,#524]
 272              	.LBE69:
 273              	.LBE68:
 274              	 .loc 1 193 0
 275 01f4 C7F88432 	 str r3,[r7,#644]
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 276              	 .loc 1 196 0
 277 01f8 D7F85C32 	 ldr r3,[r7,#604]
 278 01fc 013B     	 subs r3,r3,#1
 279 01fe C7F85C32 	 str r3,[r7,#604]
 280              	.L15:
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 281              	 .loc 1 190 0
 282 0202 D7F85C32 	 ldr r3,[r7,#604]
 283 0206 002B     	 cmp r3,#0
 284 0208 CED1     	 bne .L17
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 285              	 .loc 1 200 0
 286 020a 07F11803 	 add r3,r7,#24
 287 020e 1B68     	 ldr r3,[r3]
 288 0210 991C     	 adds r1,r3,#2
 289 0212 07F11802 	 add r2,r7,#24
 290 0216 1160     	 str r1,[r2]
 291 0218 D7F88422 	 ldr r2,[r7,#644]
 292 021c D213     	 asrs r2,r2,#15
 293 021e 92B2     	 uxth r2,r2
 294 0220 1A80     	 strh r2,[r3]
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2;
 295              	 .loc 1 203 0
 296 0222 D7F86C32 	 ldr r3,[r7,#620]
 297 0226 0233     	 adds r3,r3,#2
 298 0228 C7F86C32 	 str r3,[r7,#620]
 299 022c 07F11003 	 add r3,r7,#16
 300 0230 D7F86C22 	 ldr r2,[r7,#620]
 301 0234 1A60     	 str r2,[r3]
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 302              	 .loc 1 204 0
 303 0236 07F11403 	 add r3,r7,#20
 304 023a D7F88C22 	 ldr r2,[r7,#652]
 305 023e 1A60     	 str r2,[r3]
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 306              	 .loc 1 207 0
 307 0240 D7F85832 	 ldr r3,[r7,#600]
 308 0244 0133     	 adds r3,r3,#1
 309 0246 C7F85832 	 str r3,[r7,#600]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 310              	 .loc 1 210 0
 311 024a D7F85032 	 ldr r3,[r7,#592]
 312 024e 013B     	 subs r3,r3,#1
 313 0250 C7F85032 	 str r3,[r7,#592]
 314              	.L14:
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 315              	 .loc 1 181 0
 316 0254 D7F85832 	 ldr r3,[r7,#600]
 317 0258 032B     	 cmp r3,#3
 318 025a 03D8     	 bhi .L18
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 319              	 .loc 1 181 0 is_stmt 0 discriminator 1
 320 025c D7F85032 	 ldr r3,[r7,#592]
 321 0260 002B     	 cmp r3,#0
 322 0262 99DC     	 bgt .L19
 323              	.L18:
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* To, read the last two inputB samples using SIMD:   
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py - 1;
 324              	 .loc 1 217 0 is_stmt 1
 325 0264 07F11003 	 add r3,r7,#16
 326 0268 1B68     	 ldr r3,[r3]
 327 026a 9A1E     	 subs r2,r3,#2
 328 026c 07F11003 	 add r3,r7,#16
 329 0270 1A60     	 str r2,[r3]
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while(blockSize1 > 0)
 330              	 .loc 1 219 0
 331 0272 BEE0     	 b .L20
 332              	.L28:
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 333              	 .loc 1 222 0
 334 0274 0023     	 movs r3,#0
 335 0276 C7F88432 	 str r3,[r7,#644]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
 336              	 .loc 1 225 0
 337 027a D7F85832 	 ldr r3,[r7,#600]
 338 027e 9B08     	 lsrs r3,r3,#2
 339 0280 C7F85C32 	 str r3,[r7,#604]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 340              	 .loc 1 229 0
 341 0284 4CE0     	 b .L21
 342              	.L24:
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[0], x[1] are multiplied with y[srcBLen - 1], y[srcBLen - 2] respectively */
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 343              	 .loc 1 233 0
 344 0286 07F11402 	 add r2,r7,#20
 345 028a 1368     	 ldr r3,[r2]
 346 028c 191D     	 adds r1,r3,#4
 347 028e 1160     	 str r1,[r2]
 348 0290 1B68     	 ldr r3,[r3]
 349 0292 1846     	 mov r0,r3
 350 0294 07F11002 	 add r2,r7,#16
 351 0298 1368     	 ldr r3,[r2]
 352 029a 191F     	 subs r1,r3,#4
 353 029c 1160     	 str r1,[r2]
 354 029e 1B68     	 ldr r3,[r3]
 355 02a0 1A46     	 mov r2,r3
 356 02a2 D7F88432 	 ldr r3,[r7,#644]
 357 02a6 C7F80802 	 str r0,[r7,#520]
 358 02aa C7F80422 	 str r2,[r7,#516]
 359 02ae C7F80032 	 str r3,[r7,#512]
 360              	.LBB70:
 361              	.LBB71:
1206:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
1207:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1208:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __SMLADX (uint32_t op1, uint32_t op2, u
1209:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
1210:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
1211:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
 362              	 .loc 2 1212 0
 363 02b2 D7F80832 	 ldr r3,[r7,#520]
 364 02b6 D7F80422 	 ldr r2,[r7,#516]
 365 02ba D7F80012 	 ldr r1,[r7,#512]
 366              	
 367 02be 23FB1213 	 smladx r3,r3,r2,r1
 368              	
 369              	 .thumb
 370 02c2 C7F8FC31 	 str r3,[r7,#508]
1213:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 371              	 .loc 2 1213 0
 372 02c6 D7F8FC31 	 ldr r3,[r7,#508]
 373              	.LBE71:
 374              	.LBE70:
 375              	 .loc 1 233 0
 376 02ca C7F88432 	 str r3,[r7,#644]
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[2], x[3] are multiplied with y[srcBLen - 3], y[srcBLen - 4] respectively */
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 377              	 .loc 1 235 0
 378 02ce 07F11402 	 add r2,r7,#20
 379 02d2 1368     	 ldr r3,[r2]
 380 02d4 191D     	 adds r1,r3,#4
 381 02d6 1160     	 str r1,[r2]
 382 02d8 1B68     	 ldr r3,[r3]
 383 02da 1846     	 mov r0,r3
 384 02dc 07F11002 	 add r2,r7,#16
 385 02e0 1368     	 ldr r3,[r2]
 386 02e2 191F     	 subs r1,r3,#4
 387 02e4 1160     	 str r1,[r2]
 388 02e6 1B68     	 ldr r3,[r3]
 389 02e8 1A46     	 mov r2,r3
 390 02ea D7F88432 	 ldr r3,[r7,#644]
 391 02ee C7F8F801 	 str r0,[r7,#504]
 392 02f2 C7F8F421 	 str r2,[r7,#500]
 393 02f6 C7F8F031 	 str r3,[r7,#496]
 394              	.LBB72:
 395              	.LBB73:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 396              	 .loc 2 1212 0
 397 02fa D7F8F831 	 ldr r3,[r7,#504]
 398 02fe D7F8F421 	 ldr r2,[r7,#500]
 399 0302 D7F8F011 	 ldr r1,[r7,#496]
 400              	
 401 0306 23FB1213 	 smladx r3,r3,r2,r1
 402              	
 403              	 .thumb
 404 030a C7F8EC31 	 str r3,[r7,#492]
 405              	 .loc 2 1213 0
 406 030e D7F8EC31 	 ldr r3,[r7,#492]
 407              	.LBE73:
 408              	.LBE72:
 409              	 .loc 1 235 0
 410 0312 C7F88432 	 str r3,[r7,#644]
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 411              	 .loc 1 238 0
 412 0316 D7F85C32 	 ldr r3,[r7,#604]
 413 031a 013B     	 subs r3,r3,#1
 414 031c C7F85C32 	 str r3,[r7,#604]
 415              	.L21:
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 416              	 .loc 1 229 0
 417 0320 D7F85C32 	 ldr r3,[r7,#604]
 418 0324 002B     	 cmp r3,#0
 419 0326 AED1     	 bne .L24
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD   
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * So, py is incremented by 1 */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py + 1u;
 420              	 .loc 1 243 0
 421 0328 07F11003 	 add r3,r7,#16
 422 032c 1B68     	 ldr r3,[r3]
 423 032e 9A1C     	 adds r2,r3,#2
 424 0330 07F11003 	 add r3,r7,#16
 425 0334 1A60     	 str r2,[r3]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.   
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
 426              	 .loc 1 247 0
 427 0336 D7F85832 	 ldr r3,[r7,#600]
 428 033a 03F00303 	 and r3,r3,#3
 429 033e C7F85C32 	 str r3,[r7,#604]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 430              	 .loc 1 249 0
 431 0342 2CE0     	 b .L25
 432              	.L27:
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 433              	 .loc 1 252 0
 434 0344 07F11403 	 add r3,r7,#20
 435 0348 1B68     	 ldr r3,[r3]
 436 034a 991C     	 adds r1,r3,#2
 437 034c 07F11402 	 add r2,r7,#20
 438 0350 1160     	 str r1,[r2]
 439 0352 1B88     	 ldrh r3,[r3]
 440 0354 19B2     	 sxth r1,r3
 441 0356 07F11003 	 add r3,r7,#16
 442 035a 1B68     	 ldr r3,[r3]
 443 035c 981E     	 subs r0,r3,#2
 444 035e 07F11002 	 add r2,r7,#16
 445 0362 1060     	 str r0,[r2]
 446 0364 1B88     	 ldrh r3,[r3]
 447 0366 1AB2     	 sxth r2,r3
 448 0368 D7F88432 	 ldr r3,[r7,#644]
 449 036c C7F8E811 	 str r1,[r7,#488]
 450 0370 C7F8E421 	 str r2,[r7,#484]
 451 0374 C7F8E031 	 str r3,[r7,#480]
 452              	.LBB74:
 453              	.LBB75:
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 454              	 .loc 2 1204 0
 455 0378 D7F8E831 	 ldr r3,[r7,#488]
 456 037c D7F8E421 	 ldr r2,[r7,#484]
 457 0380 D7F8E011 	 ldr r1,[r7,#480]
 458              	
 459 0384 23FB0213 	 smlad r3,r3,r2,r1
 460              	
 461              	 .thumb
 462 0388 C7F8DC31 	 str r3,[r7,#476]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 463              	 .loc 2 1205 0
 464 038c D7F8DC31 	 ldr r3,[r7,#476]
 465              	.LBE75:
 466              	.LBE74:
 467              	 .loc 1 252 0
 468 0390 C7F88432 	 str r3,[r7,#644]
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 469              	 .loc 1 255 0
 470 0394 D7F85C32 	 ldr r3,[r7,#604]
 471 0398 013B     	 subs r3,r3,#1
 472 039a C7F85C32 	 str r3,[r7,#604]
 473              	.L25:
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 474              	 .loc 1 249 0
 475 039e D7F85C32 	 ldr r3,[r7,#604]
 476 03a2 002B     	 cmp r3,#0
 477 03a4 CED1     	 bne .L27
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 478              	 .loc 1 259 0
 479 03a6 07F11803 	 add r3,r7,#24
 480 03aa 1B68     	 ldr r3,[r3]
 481 03ac 991C     	 adds r1,r3,#2
 482 03ae 07F11802 	 add r2,r7,#24
 483 03b2 1160     	 str r1,[r2]
 484 03b4 D7F88422 	 ldr r2,[r7,#644]
 485 03b8 D213     	 asrs r2,r2,#15
 486 03ba 92B2     	 uxth r2,r2
 487 03bc 1A80     	 strh r2,[r3]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2 - 1u;
 488              	 .loc 1 262 0
 489 03be D7F86C32 	 ldr r3,[r7,#620]
 490 03c2 0233     	 adds r3,r3,#2
 491 03c4 C7F86C32 	 str r3,[r7,#620]
 492 03c8 D7F86C32 	 ldr r3,[r7,#620]
 493 03cc 9A1E     	 subs r2,r3,#2
 494 03ce 07F11003 	 add r3,r7,#16
 495 03d2 1A60     	 str r2,[r3]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 496              	 .loc 1 263 0
 497 03d4 07F11403 	 add r3,r7,#20
 498 03d8 D7F88C22 	 ldr r2,[r7,#652]
 499 03dc 1A60     	 str r2,[r3]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 500              	 .loc 1 266 0
 501 03de D7F85832 	 ldr r3,[r7,#600]
 502 03e2 0133     	 adds r3,r3,#1
 503 03e4 C7F85832 	 str r3,[r7,#600]
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 504              	 .loc 1 269 0
 505 03e8 D7F85032 	 ldr r3,[r7,#592]
 506 03ec 013B     	 subs r3,r3,#1
 507 03ee C7F85032 	 str r3,[r7,#592]
 508              	.L20:
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 509              	 .loc 1 219 0
 510 03f2 D7F85032 	 ldr r3,[r7,#592]
 511 03f6 002B     	 cmp r3,#0
 512 03f8 3FF73CAF 	 bgt .L28
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------   
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage2   
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------------*/
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]   
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]   
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....   
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 513              	 .loc 1 283 0
 514 03fc D7F89C22 	 ldr r2,[r7,#668]
 515 0400 3B46     	 mov r3,r7
 516 0402 1B68     	 ldr r3,[r3]
 517 0404 D31A     	 subs r3,r2,r3
 518 0406 0133     	 adds r3,r3,#1
 519 0408 002B     	 cmp r3,#0
 520 040a 0DDD     	 ble .L29
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1 + firstIndex - srcBLen + 1;
 521              	 .loc 1 285 0
 522 040c 3B46     	 mov r3,r7
 523 040e D7F89C22 	 ldr r2,[r7,#668]
 524 0412 1B68     	 ldr r3,[r3]
 525 0414 D31A     	 subs r3,r2,r3
 526 0416 0133     	 adds r3,r3,#1
 527 0418 5B00     	 lsls r3,r3,#1
 528 041a D7F88C22 	 ldr r2,[r7,#652]
 529 041e 1A44     	 add r2,r2,r3
 530 0420 07F11403 	 add r3,r7,#20
 531 0424 1A60     	 str r2,[r3]
 532 0426 04E0     	 b .L30
 533              	.L29:
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 534              	 .loc 1 289 0
 535 0428 07F11403 	 add r3,r7,#20
 536 042c D7F88C22 	 ldr r2,[r7,#652]
 537 0430 1A60     	 str r2,[r3]
 538              	.L30:
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 539              	 .loc 1 293 0
 540 0432 3B46     	 mov r3,r7
 541 0434 1B68     	 ldr r3,[r3]
 542 0436 03F10043 	 add r3,r3,#-2147483648
 543 043a 013B     	 subs r3,r3,#1
 544 043c 5B00     	 lsls r3,r3,#1
 545 043e D7F88822 	 ldr r2,[r7,#648]
 546 0442 1344     	 add r3,r3,r2
 547 0444 C7F86C32 	 str r3,[r7,#620]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 548              	 .loc 1 294 0
 549 0448 07F11003 	 add r3,r7,#16
 550 044c D7F86C22 	 ldr r2,[r7,#620]
 551 0450 1A60     	 str r2,[r3]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 0u;
 552              	 .loc 1 297 0
 553 0452 0023     	 movs r3,#0
 554 0454 C7F85832 	 str r3,[r7,#600]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------   
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage2 process   
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------*/
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.   
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * So, to loop unroll over blockSize2,   
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * srcBLen should be greater than or equal to 4 */
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if(srcBLen >= 4u)
 555              	 .loc 1 307 0
 556 0458 3B46     	 mov r3,r7
 557 045a 1B68     	 ldr r3,[r3]
 558 045c 032B     	 cmp r3,#3
 559 045e 40F21285 	 bls .L31
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop unroll over blockSize2, by 4 */
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = ((uint32_t) blockSize2 >> 2u);
 560              	 .loc 1 310 0
 561 0462 D7F84032 	 ldr r3,[r7,#576]
 562 0466 9B08     	 lsrs r3,r3,#2
 563 0468 C7F85432 	 str r3,[r7,#596]
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(blkCnt > 0u)
 564              	 .loc 1 312 0
 565 046c 00F036BC 	 b .L32
 566              	.L61:
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py - 1u;
 567              	 .loc 1 314 0
 568 0470 07F11003 	 add r3,r7,#16
 569 0474 1B68     	 ldr r3,[r3]
 570 0476 9A1E     	 subs r2,r3,#2
 571 0478 07F11003 	 add r3,r7,#16
 572 047c 1A60     	 str r2,[r3]
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Set all accumulators to zero */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = 0;
 573              	 .loc 1 317 0
 574 047e 0023     	 movs r3,#0
 575 0480 C7F88032 	 str r3,[r7,#640]
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = 0;
 576              	 .loc 1 318 0
 577 0484 0023     	 movs r3,#0
 578 0486 C7F87C32 	 str r3,[r7,#636]
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = 0;
 579              	 .loc 1 319 0
 580 048a 0023     	 movs r3,#0
 581 048c C7F87832 	 str r3,[r7,#632]
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = 0;
 582              	 .loc 1 320 0
 583 0490 0023     	 movs r3,#0
 584 0492 C7F87432 	 str r3,[r7,#628]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* read x[0], x[1] samples */
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       x0 = *__SIMD32(px);
 585              	 .loc 1 324 0
 586 0496 07F11403 	 add r3,r7,#20
 587 049a 1B68     	 ldr r3,[r3]
 588 049c 1B68     	 ldr r3,[r3]
 589 049e C7F86832 	 str r3,[r7,#616]
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* read x[1], x[2] samples */
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       x1 = _SIMD32_OFFSET(px+1);
 590              	 .loc 1 326 0
 591 04a2 07F11403 	 add r3,r7,#20
 592 04a6 1B68     	 ldr r3,[r3]
 593 04a8 D3F80230 	 ldr r3,[r3,#2]
 594 04ac C7F86432 	 str r3,[r7,#612]
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  px+= 2u;
 595              	 .loc 1 327 0
 596 04b0 07F11403 	 add r3,r7,#20
 597 04b4 1B68     	 ldr r3,[r3]
 598 04b6 1A1D     	 adds r2,r3,#4
 599 04b8 07F11403 	 add r3,r7,#20
 600 04bc 1A60     	 str r2,[r3]
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2u;
 601              	 .loc 1 331 0
 602 04be 3B46     	 mov r3,r7
 603 04c0 1B68     	 ldr r3,[r3]
 604 04c2 9B08     	 lsrs r3,r3,#2
 605 04c4 C7F85C32 	 str r3,[r7,#604]
 606              	.L41:
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         do
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read the last two inputB samples using SIMD:   
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****            * y[srcBLen - 1] and y[srcBLen - 2] */
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *__SIMD32(py)--;
 607              	 .loc 1 339 0 discriminator 1
 608 04c8 07F11002 	 add r2,r7,#16
 609 04cc 1368     	 ldr r3,[r2]
 610 04ce 191F     	 subs r1,r3,#4
 611 04d0 1160     	 str r1,[r2]
 612 04d2 1B68     	 ldr r3,[r3]
 613 04d4 C7F83C32 	 str r3,[r7,#572]
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 614              	 .loc 1 342 0 discriminator 1
 615 04d8 D7F86812 	 ldr r1,[r7,#616]
 616 04dc D7F83C22 	 ldr r2,[r7,#572]
 617 04e0 D7F88032 	 ldr r3,[r7,#640]
 618 04e4 C7F8D811 	 str r1,[r7,#472]
 619 04e8 C7F8D421 	 str r2,[r7,#468]
 620 04ec C7F8D031 	 str r3,[r7,#464]
 621              	.LBB76:
 622              	.LBB77:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 623              	 .loc 2 1212 0 discriminator 1
 624 04f0 D7F8D831 	 ldr r3,[r7,#472]
 625 04f4 D7F8D421 	 ldr r2,[r7,#468]
 626 04f8 D7F8D011 	 ldr r1,[r7,#464]
 627              	
 628 04fc 23FB1213 	 smladx r3,r3,r2,r1
 629              	
 630              	 .thumb
 631 0500 C7F8CC31 	 str r3,[r7,#460]
 632              	 .loc 2 1213 0 discriminator 1
 633 0504 D7F8CC31 	 ldr r3,[r7,#460]
 634              	.LBE77:
 635              	.LBE76:
 636              	 .loc 1 342 0 discriminator 1
 637 0508 C7F88032 	 str r3,[r7,#640]
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 638              	 .loc 1 345 0 discriminator 1
 639 050c D7F86412 	 ldr r1,[r7,#612]
 640 0510 D7F83C22 	 ldr r2,[r7,#572]
 641 0514 D7F87C32 	 ldr r3,[r7,#636]
 642 0518 C7F8C811 	 str r1,[r7,#456]
 643 051c C7F8C421 	 str r2,[r7,#452]
 644 0520 C7F8C031 	 str r3,[r7,#448]
 645              	.LBB78:
 646              	.LBB79:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 647              	 .loc 2 1212 0 discriminator 1
 648 0524 D7F8C831 	 ldr r3,[r7,#456]
 649 0528 D7F8C421 	 ldr r2,[r7,#452]
 650 052c D7F8C011 	 ldr r1,[r7,#448]
 651              	
 652 0530 23FB1213 	 smladx r3,r3,r2,r1
 653              	
 654              	 .thumb
 655 0534 C7F8BC31 	 str r3,[r7,#444]
 656              	 .loc 2 1213 0 discriminator 1
 657 0538 D7F8BC31 	 ldr r3,[r7,#444]
 658              	.LBE79:
 659              	.LBE78:
 660              	 .loc 1 345 0 discriminator 1
 661 053c C7F87C32 	 str r3,[r7,#636]
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[2], x[3] */
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x2 = *__SIMD32(px);
 662              	 .loc 1 348 0 discriminator 1
 663 0540 07F11403 	 add r3,r7,#20
 664 0544 1B68     	 ldr r3,[r3]
 665 0546 1B68     	 ldr r3,[r3]
 666 0548 C7F83832 	 str r3,[r7,#568]
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[3], x[4] */
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = _SIMD32_OFFSET(px+1);
 667              	 .loc 1 351 0 discriminator 1
 668 054c 07F11403 	 add r3,r7,#20
 669 0550 1B68     	 ldr r3,[r3]
 670 0552 D3F80230 	 ldr r3,[r3,#2]
 671 0556 C7F83432 	 str r3,[r7,#564]
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x2, c0, acc2);
 672              	 .loc 1 354 0 discriminator 1
 673 055a D7F83812 	 ldr r1,[r7,#568]
 674 055e D7F83C22 	 ldr r2,[r7,#572]
 675 0562 D7F87832 	 ldr r3,[r7,#632]
 676 0566 C7F8B811 	 str r1,[r7,#440]
 677 056a C7F8B421 	 str r2,[r7,#436]
 678 056e C7F8B031 	 str r3,[r7,#432]
 679              	.LBB80:
 680              	.LBB81:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 681              	 .loc 2 1212 0 discriminator 1
 682 0572 D7F8B831 	 ldr r3,[r7,#440]
 683 0576 D7F8B421 	 ldr r2,[r7,#436]
 684 057a D7F8B011 	 ldr r1,[r7,#432]
 685              	
 686 057e 23FB1213 	 smladx r3,r3,r2,r1
 687              	
 688              	 .thumb
 689 0582 C7F8AC31 	 str r3,[r7,#428]
 690              	 .loc 2 1213 0 discriminator 1
 691 0586 D7F8AC31 	 ldr r3,[r7,#428]
 692              	.LBE81:
 693              	.LBE80:
 694              	 .loc 1 354 0 discriminator 1
 695 058a C7F87832 	 str r3,[r7,#632]
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 696              	 .loc 1 357 0 discriminator 1
 697 058e D7F83412 	 ldr r1,[r7,#564]
 698 0592 D7F83C22 	 ldr r2,[r7,#572]
 699 0596 D7F87432 	 ldr r3,[r7,#628]
 700 059a C7F8A811 	 str r1,[r7,#424]
 701 059e C7F8A421 	 str r2,[r7,#420]
 702 05a2 C7F8A031 	 str r3,[r7,#416]
 703              	.LBB82:
 704              	.LBB83:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 705              	 .loc 2 1212 0 discriminator 1
 706 05a6 D7F8A831 	 ldr r3,[r7,#424]
 707 05aa D7F8A421 	 ldr r2,[r7,#420]
 708 05ae D7F8A011 	 ldr r1,[r7,#416]
 709              	
 710 05b2 23FB1213 	 smladx r3,r3,r2,r1
 711              	
 712              	 .thumb
 713 05b6 C7F89C31 	 str r3,[r7,#412]
 714              	 .loc 2 1213 0 discriminator 1
 715 05ba D7F89C31 	 ldr r3,[r7,#412]
 716              	.LBE83:
 717              	.LBE82:
 718              	 .loc 1 357 0 discriminator 1
 719 05be C7F87432 	 str r3,[r7,#628]
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 3] and y[srcBLen - 4] */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *__SIMD32(py)--;
 720              	 .loc 1 360 0 discriminator 1
 721 05c2 07F11002 	 add r2,r7,#16
 722 05c6 1368     	 ldr r3,[r2]
 723 05c8 191F     	 subs r1,r3,#4
 724 05ca 1160     	 str r1,[r2]
 725 05cc 1B68     	 ldr r3,[r3]
 726 05ce C7F83C32 	 str r3,[r7,#572]
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x2, c0, acc0);
 727              	 .loc 1 363 0 discriminator 1
 728 05d2 D7F83812 	 ldr r1,[r7,#568]
 729 05d6 D7F83C32 	 ldr r3,[r7,#572]
 730 05da D7F88022 	 ldr r2,[r7,#640]
 731 05de C7F89811 	 str r1,[r7,#408]
 732 05e2 C7F89431 	 str r3,[r7,#404]
 733 05e6 07F5C873 	 add r3,r7,#400
 734 05ea 1A60     	 str r2,[r3]
 735              	.LBB84:
 736              	.LBB85:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 737              	 .loc 2 1212 0 discriminator 1
 738 05ec D7F89831 	 ldr r3,[r7,#408]
 739 05f0 D7F89421 	 ldr r2,[r7,#404]
 740 05f4 07F5C871 	 add r1,r7,#400
 741 05f8 0968     	 ldr r1,[r1]
 742              	
 743 05fa 23FB1212 	 smladx r2,r3,r2,r1
 744              	
 745              	 .thumb
 746 05fe 07F5C673 	 add r3,r7,#396
 747 0602 1A60     	 str r2,[r3]
 748              	 .loc 2 1213 0 discriminator 1
 749 0604 07F5C673 	 add r3,r7,#396
 750 0608 1B68     	 ldr r3,[r3]
 751              	.LBE85:
 752              	.LBE84:
 753              	 .loc 1 363 0 discriminator 1
 754 060a C7F88032 	 str r3,[r7,#640]
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x3, c0, acc1);
 755              	 .loc 1 366 0 discriminator 1
 756 060e D7F83402 	 ldr r0,[r7,#564]
 757 0612 D7F83C12 	 ldr r1,[r7,#572]
 758 0616 D7F87C22 	 ldr r2,[r7,#636]
 759 061a 07F5C473 	 add r3,r7,#392
 760 061e 1860     	 str r0,[r3]
 761 0620 07F5C273 	 add r3,r7,#388
 762 0624 1960     	 str r1,[r3]
 763 0626 07F5C073 	 add r3,r7,#384
 764 062a 1A60     	 str r2,[r3]
 765              	.LBB86:
 766              	.LBB87:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 767              	 .loc 2 1212 0 discriminator 1
 768 062c 07F5C473 	 add r3,r7,#392
 769 0630 1B68     	 ldr r3,[r3]
 770 0632 07F5C272 	 add r2,r7,#388
 771 0636 1268     	 ldr r2,[r2]
 772 0638 07F5C071 	 add r1,r7,#384
 773 063c 0968     	 ldr r1,[r1]
 774              	
 775 063e 23FB1212 	 smladx r2,r3,r2,r1
 776              	
 777              	 .thumb
 778 0642 07F5BE73 	 add r3,r7,#380
 779 0646 1A60     	 str r2,[r3]
 780              	 .loc 2 1213 0 discriminator 1
 781 0648 07F5BE73 	 add r3,r7,#380
 782 064c 1B68     	 ldr r3,[r3]
 783              	.LBE87:
 784              	.LBE86:
 785              	 .loc 1 366 0 discriminator 1
 786 064e C7F87C32 	 str r3,[r7,#636]
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[4], x[5] */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x0 = _SIMD32_OFFSET(px+2);
 787              	 .loc 1 369 0 discriminator 1
 788 0652 07F11403 	 add r3,r7,#20
 789 0656 1B68     	 ldr r3,[r3]
 790 0658 5B68     	 ldr r3,[r3,#4]
 791 065a C7F86832 	 str r3,[r7,#616]
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[5], x[6] */
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x1 = _SIMD32_OFFSET(px+3);
 792              	 .loc 1 372 0 discriminator 1
 793 065e 07F11403 	 add r3,r7,#20
 794 0662 1B68     	 ldr r3,[r3]
 795 0664 D3F80630 	 ldr r3,[r3,#6]
 796 0668 C7F86432 	 str r3,[r7,#612]
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 4u;
 797              	 .loc 1 373 0 discriminator 1
 798 066c 07F11403 	 add r3,r7,#20
 799 0670 1B68     	 ldr r3,[r3]
 800 0672 03F10802 	 add r2,r3,#8
 801 0676 07F11403 	 add r3,r7,#20
 802 067a 1A60     	 str r2,[r3]
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x0, c0, acc2);
 803              	 .loc 1 376 0 discriminator 1
 804 067c D7F86802 	 ldr r0,[r7,#616]
 805 0680 D7F83C12 	 ldr r1,[r7,#572]
 806 0684 D7F87822 	 ldr r2,[r7,#632]
 807 0688 07F5BC73 	 add r3,r7,#376
 808 068c 1860     	 str r0,[r3]
 809 068e 07F5BA73 	 add r3,r7,#372
 810 0692 1960     	 str r1,[r3]
 811 0694 07F5B873 	 add r3,r7,#368
 812 0698 1A60     	 str r2,[r3]
 813              	.LBB88:
 814              	.LBB89:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 815              	 .loc 2 1212 0 discriminator 1
 816 069a 07F5BC73 	 add r3,r7,#376
 817 069e 1B68     	 ldr r3,[r3]
 818 06a0 07F5BA72 	 add r2,r7,#372
 819 06a4 1268     	 ldr r2,[r2]
 820 06a6 07F5B871 	 add r1,r7,#368
 821 06aa 0968     	 ldr r1,[r1]
 822              	
 823 06ac 23FB1212 	 smladx r2,r3,r2,r1
 824              	
 825              	 .thumb
 826 06b0 07F5B673 	 add r3,r7,#364
 827 06b4 1A60     	 str r2,[r3]
 828              	 .loc 2 1213 0 discriminator 1
 829 06b6 07F5B673 	 add r3,r7,#364
 830 06ba 1B68     	 ldr r3,[r3]
 831              	.LBE89:
 832              	.LBE88:
 833              	 .loc 1 376 0 discriminator 1
 834 06bc C7F87832 	 str r3,[r7,#632]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x1, c0, acc3);
 835              	 .loc 1 379 0 discriminator 1
 836 06c0 D7F86402 	 ldr r0,[r7,#612]
 837 06c4 D7F83C12 	 ldr r1,[r7,#572]
 838 06c8 D7F87422 	 ldr r2,[r7,#628]
 839 06cc 07F5B473 	 add r3,r7,#360
 840 06d0 1860     	 str r0,[r3]
 841 06d2 07F5B273 	 add r3,r7,#356
 842 06d6 1960     	 str r1,[r3]
 843 06d8 07F5B073 	 add r3,r7,#352
 844 06dc 1A60     	 str r2,[r3]
 845              	.LBB90:
 846              	.LBB91:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847              	 .loc 2 1212 0 discriminator 1
 848 06de 07F5B473 	 add r3,r7,#360
 849 06e2 1B68     	 ldr r3,[r3]
 850 06e4 07F5B272 	 add r2,r7,#356
 851 06e8 1268     	 ldr r2,[r2]
 852 06ea 07F5B071 	 add r1,r7,#352
 853 06ee 0968     	 ldr r1,[r1]
 854              	
 855 06f0 23FB1212 	 smladx r2,r3,r2,r1
 856              	
 857              	 .thumb
 858 06f4 07F5AE73 	 add r3,r7,#348
 859 06f8 1A60     	 str r2,[r3]
 860              	 .loc 2 1213 0 discriminator 1
 861 06fa 07F5AE73 	 add r3,r7,#348
 862 06fe 1B68     	 ldr r3,[r3]
 863              	.LBE91:
 864              	.LBE90:
 865              	 .loc 1 379 0 discriminator 1
 866 0700 C7F87432 	 str r3,[r7,#628]
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         } while(--k);
 867              	 .loc 1 381 0 discriminator 1
 868 0704 D7F85C32 	 ldr r3,[r7,#604]
 869 0708 013B     	 subs r3,r3,#1
 870 070a C7F85C32 	 str r3,[r7,#604]
 871 070e D7F85C32 	 ldr r3,[r7,#604]
 872 0712 002B     	 cmp r3,#0
 873 0714 7FF4D8AE 	 bne .L41
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* For the next MAC operations, SIMD is not used   
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * So, the 16 bit pointer if inputB, py is updated */
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.   
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4u;
 874              	 .loc 1 388 0
 875 0718 3B46     	 mov r3,r7
 876 071a 1B68     	 ldr r3,[r3]
 877 071c 03F00303 	 and r3,r3,#3
 878 0720 C7F85C32 	 str r3,[r7,#604]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if(k == 1u)
 879              	 .loc 1 390 0
 880 0724 D7F85C32 	 ldr r3,[r7,#604]
 881 0728 012B     	 cmp r3,#1
 882 072a 40F0A280 	 bne .L42
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5] */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *(py+1);
 883              	 .loc 1 393 0
 884 072e 07F11003 	 add r3,r7,#16
 885 0732 1B68     	 ldr r3,[r3]
 886 0734 0233     	 adds r3,r3,#2
 887 0736 1B88     	 ldrh r3,[r3]
 888 0738 1BB2     	 sxth r3,r3
 889 073a C7F83C32 	 str r3,[r7,#572]
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 890              	 .loc 1 400 0
 891 073e D7F83C32 	 ldr r3,[r7,#572]
 892 0742 9BB2     	 uxth r3,r3
 893 0744 C7F83C32 	 str r3,[r7,#572]
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7] */
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = *__SIMD32(px);
 894              	 .loc 1 405 0
 895 0748 07F11403 	 add r3,r7,#20
 896 074c 1B68     	 ldr r3,[r3]
 897 074e 1B68     	 ldr r3,[r3]
 898 0750 C7F83432 	 str r3,[r7,#564]
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px++;
 899              	 .loc 1 406 0
 900 0754 07F11403 	 add r3,r7,#20
 901 0758 1B68     	 ldr r3,[r3]
 902 075a 9A1C     	 adds r2,r3,#2
 903 075c 07F11403 	 add r3,r7,#20
 904 0760 1A60     	 str r2,[r3]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLAD(x0, c0, acc0);
 905              	 .loc 1 409 0
 906 0762 D7F86802 	 ldr r0,[r7,#616]
 907 0766 D7F83C12 	 ldr r1,[r7,#572]
 908 076a D7F88022 	 ldr r2,[r7,#640]
 909 076e 07F5AC73 	 add r3,r7,#344
 910 0772 1860     	 str r0,[r3]
 911 0774 07F5AA73 	 add r3,r7,#340
 912 0778 1960     	 str r1,[r3]
 913 077a 07F5A873 	 add r3,r7,#336
 914 077e 1A60     	 str r2,[r3]
 915              	.LBB92:
 916              	.LBB93:
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 917              	 .loc 2 1204 0
 918 0780 07F5AC73 	 add r3,r7,#344
 919 0784 1B68     	 ldr r3,[r3]
 920 0786 07F5AA72 	 add r2,r7,#340
 921 078a 1268     	 ldr r2,[r2]
 922 078c 07F5A871 	 add r1,r7,#336
 923 0790 0968     	 ldr r1,[r1]
 924              	
 925 0792 23FB0212 	 smlad r2,r3,r2,r1
 926              	
 927              	 .thumb
 928 0796 07F5A673 	 add r3,r7,#332
 929 079a 1A60     	 str r2,[r3]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 930              	 .loc 2 1205 0
 931 079c 07F5A673 	 add r3,r7,#332
 932 07a0 1B68     	 ldr r3,[r3]
 933              	.LBE93:
 934              	.LBE92:
 935              	 .loc 1 409 0
 936 07a2 C7F88032 	 str r3,[r7,#640]
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLAD(x1, c0, acc1);
 937              	 .loc 1 410 0
 938 07a6 D7F86402 	 ldr r0,[r7,#612]
 939 07aa D7F83C12 	 ldr r1,[r7,#572]
 940 07ae D7F87C22 	 ldr r2,[r7,#636]
 941 07b2 07F5A473 	 add r3,r7,#328
 942 07b6 1860     	 str r0,[r3]
 943 07b8 07F5A273 	 add r3,r7,#324
 944 07bc 1960     	 str r1,[r3]
 945 07be 07F5A073 	 add r3,r7,#320
 946 07c2 1A60     	 str r2,[r3]
 947              	.LBB94:
 948              	.LBB95:
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 949              	 .loc 2 1204 0
 950 07c4 07F5A473 	 add r3,r7,#328
 951 07c8 1B68     	 ldr r3,[r3]
 952 07ca 07F5A272 	 add r2,r7,#324
 953 07ce 1268     	 ldr r2,[r2]
 954 07d0 07F5A071 	 add r1,r7,#320
 955 07d4 0968     	 ldr r1,[r1]
 956              	
 957 07d6 23FB0212 	 smlad r2,r3,r2,r1
 958              	
 959              	 .thumb
 960 07da 07F59E73 	 add r3,r7,#316
 961 07de 1A60     	 str r2,[r3]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 962              	 .loc 2 1205 0
 963 07e0 07F59E73 	 add r3,r7,#316
 964 07e4 1B68     	 ldr r3,[r3]
 965              	.LBE95:
 966              	.LBE94:
 967              	 .loc 1 410 0
 968 07e6 C7F87C32 	 str r3,[r7,#636]
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x1, c0, acc2);
 969              	 .loc 1 411 0
 970 07ea D7F86402 	 ldr r0,[r7,#612]
 971 07ee D7F83C12 	 ldr r1,[r7,#572]
 972 07f2 D7F87822 	 ldr r2,[r7,#632]
 973 07f6 07F59C73 	 add r3,r7,#312
 974 07fa 1860     	 str r0,[r3]
 975 07fc 07F59A73 	 add r3,r7,#308
 976 0800 1960     	 str r1,[r3]
 977 0802 07F59873 	 add r3,r7,#304
 978 0806 1A60     	 str r2,[r3]
 979              	.LBB96:
 980              	.LBB97:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 981              	 .loc 2 1212 0
 982 0808 07F59C73 	 add r3,r7,#312
 983 080c 1B68     	 ldr r3,[r3]
 984 080e 07F59A72 	 add r2,r7,#308
 985 0812 1268     	 ldr r2,[r2]
 986 0814 07F59871 	 add r1,r7,#304
 987 0818 0968     	 ldr r1,[r1]
 988              	
 989 081a 23FB1212 	 smladx r2,r3,r2,r1
 990              	
 991              	 .thumb
 992 081e 07F59673 	 add r3,r7,#300
 993 0822 1A60     	 str r2,[r3]
 994              	 .loc 2 1213 0
 995 0824 07F59673 	 add r3,r7,#300
 996 0828 1B68     	 ldr r3,[r3]
 997              	.LBE97:
 998              	.LBE96:
 999              	 .loc 1 411 0
 1000 082a C7F87832 	 str r3,[r7,#632]
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 1001              	 .loc 1 412 0
 1002 082e D7F83402 	 ldr r0,[r7,#564]
 1003 0832 D7F83C12 	 ldr r1,[r7,#572]
 1004 0836 D7F87422 	 ldr r2,[r7,#628]
 1005 083a 07F59473 	 add r3,r7,#296
 1006 083e 1860     	 str r0,[r3]
 1007 0840 07F59273 	 add r3,r7,#292
 1008 0844 1960     	 str r1,[r3]
 1009 0846 07F59073 	 add r3,r7,#288
 1010 084a 1A60     	 str r2,[r3]
 1011              	.LBB98:
 1012              	.LBB99:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1013              	 .loc 2 1212 0
 1014 084c 07F59473 	 add r3,r7,#296
 1015 0850 1B68     	 ldr r3,[r3]
 1016 0852 07F59272 	 add r2,r7,#292
 1017 0856 1268     	 ldr r2,[r2]
 1018 0858 07F59071 	 add r1,r7,#288
 1019 085c 0968     	 ldr r1,[r1]
 1020              	
 1021 085e 23FB1212 	 smladx r2,r3,r2,r1
 1022              	
 1023              	 .thumb
 1024 0862 07F58E73 	 add r3,r7,#284
 1025 0866 1A60     	 str r2,[r3]
 1026              	 .loc 2 1213 0
 1027 0868 07F58E73 	 add r3,r7,#284
 1028 086c 1B68     	 ldr r3,[r3]
 1029              	.LBE99:
 1030              	.LBE98:
 1031              	 .loc 1 412 0
 1032 086e C7F87432 	 str r3,[r7,#628]
 1033              	.L42:
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if(k == 2u)
 1034              	 .loc 1 415 0
 1035 0872 D7F85C32 	 ldr r3,[r7,#604]
 1036 0876 022B     	 cmp r3,#2
 1037 0878 40F0A280 	 bne .L47
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1038              	 .loc 1 418 0
 1039 087c 07F11003 	 add r3,r7,#16
 1040 0880 1B68     	 ldr r3,[r3]
 1041 0882 1B68     	 ldr r3,[r3]
 1042 0884 C7F83C32 	 str r3,[r7,#572]
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7], x[8] */
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = *__SIMD32(px);
 1043              	 .loc 1 421 0
 1044 0888 07F11403 	 add r3,r7,#20
 1045 088c 1B68     	 ldr r3,[r3]
 1046 088e 1B68     	 ldr r3,[r3]
 1047 0890 C7F83432 	 str r3,[r7,#564]
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[9] */
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1048              	 .loc 1 424 0
 1049 0894 07F11403 	 add r3,r7,#20
 1050 0898 1B68     	 ldr r3,[r3]
 1051 089a D3F80230 	 ldr r3,[r3,#2]
 1052 089e C7F83832 	 str r3,[r7,#568]
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 2u;
 1053              	 .loc 1 425 0
 1054 08a2 07F11403 	 add r3,r7,#20
 1055 08a6 1B68     	 ldr r3,[r3]
 1056 08a8 1A1D     	 adds r2,r3,#4
 1057 08aa 07F11403 	 add r3,r7,#20
 1058 08ae 1A60     	 str r2,[r3]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 1059              	 .loc 1 428 0
 1060 08b0 D7F86802 	 ldr r0,[r7,#616]
 1061 08b4 D7F83C12 	 ldr r1,[r7,#572]
 1062 08b8 D7F88022 	 ldr r2,[r7,#640]
 1063 08bc 07F58C73 	 add r3,r7,#280
 1064 08c0 1860     	 str r0,[r3]
 1065 08c2 07F58A73 	 add r3,r7,#276
 1066 08c6 1960     	 str r1,[r3]
 1067 08c8 07F58873 	 add r3,r7,#272
 1068 08cc 1A60     	 str r2,[r3]
 1069              	.LBB100:
 1070              	.LBB101:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1071              	 .loc 2 1212 0
 1072 08ce 07F58C73 	 add r3,r7,#280
 1073 08d2 1B68     	 ldr r3,[r3]
 1074 08d4 07F58A72 	 add r2,r7,#276
 1075 08d8 1268     	 ldr r2,[r2]
 1076 08da 07F58871 	 add r1,r7,#272
 1077 08de 0968     	 ldr r1,[r1]
 1078              	
 1079 08e0 23FB1212 	 smladx r2,r3,r2,r1
 1080              	
 1081              	 .thumb
 1082 08e4 07F58673 	 add r3,r7,#268
 1083 08e8 1A60     	 str r2,[r3]
 1084              	 .loc 2 1213 0
 1085 08ea 07F58673 	 add r3,r7,#268
 1086 08ee 1B68     	 ldr r3,[r3]
 1087              	.LBE101:
 1088              	.LBE100:
 1089              	 .loc 1 428 0
 1090 08f0 C7F88032 	 str r3,[r7,#640]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 1091              	 .loc 1 429 0
 1092 08f4 D7F86402 	 ldr r0,[r7,#612]
 1093 08f8 D7F83C12 	 ldr r1,[r7,#572]
 1094 08fc D7F87C22 	 ldr r2,[r7,#636]
 1095 0900 07F58473 	 add r3,r7,#264
 1096 0904 1860     	 str r0,[r3]
 1097 0906 07F58273 	 add r3,r7,#260
 1098 090a 1960     	 str r1,[r3]
 1099 090c 07F58073 	 add r3,r7,#256
 1100 0910 1A60     	 str r2,[r3]
 1101              	.LBB102:
 1102              	.LBB103:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1103              	 .loc 2 1212 0
 1104 0912 07F58473 	 add r3,r7,#264
 1105 0916 1B68     	 ldr r3,[r3]
 1106 0918 07F58272 	 add r2,r7,#260
 1107 091c 1268     	 ldr r2,[r2]
 1108 091e 07F58071 	 add r1,r7,#256
 1109 0922 0968     	 ldr r1,[r1]
 1110              	
 1111 0924 23FB1212 	 smladx r2,r3,r2,r1
 1112              	
 1113              	 .thumb
 1114 0928 07F1FC03 	 add r3,r7,#252
 1115 092c 1A60     	 str r2,[r3]
 1116              	 .loc 2 1213 0
 1117 092e 07F1FC03 	 add r3,r7,#252
 1118 0932 1B68     	 ldr r3,[r3]
 1119              	.LBE103:
 1120              	.LBE102:
 1121              	 .loc 1 429 0
 1122 0934 C7F87C32 	 str r3,[r7,#636]
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x3, c0, acc2);
 1123              	 .loc 1 430 0
 1124 0938 D7F83402 	 ldr r0,[r7,#564]
 1125 093c D7F83C12 	 ldr r1,[r7,#572]
 1126 0940 D7F87822 	 ldr r2,[r7,#632]
 1127 0944 07F1F803 	 add r3,r7,#248
 1128 0948 1860     	 str r0,[r3]
 1129 094a 07F1F403 	 add r3,r7,#244
 1130 094e 1960     	 str r1,[r3]
 1131 0950 07F1F003 	 add r3,r7,#240
 1132 0954 1A60     	 str r2,[r3]
 1133              	.LBB104:
 1134              	.LBB105:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1135              	 .loc 2 1212 0
 1136 0956 07F1F803 	 add r3,r7,#248
 1137 095a 1B68     	 ldr r3,[r3]
 1138 095c 07F1F402 	 add r2,r7,#244
 1139 0960 1268     	 ldr r2,[r2]
 1140 0962 07F1F001 	 add r1,r7,#240
 1141 0966 0968     	 ldr r1,[r1]
 1142              	
 1143 0968 23FB1212 	 smladx r2,r3,r2,r1
 1144              	
 1145              	 .thumb
 1146 096c 07F1EC03 	 add r3,r7,#236
 1147 0970 1A60     	 str r2,[r3]
 1148              	 .loc 2 1213 0
 1149 0972 07F1EC03 	 add r3,r7,#236
 1150 0976 1B68     	 ldr r3,[r3]
 1151              	.LBE105:
 1152              	.LBE104:
 1153              	 .loc 1 430 0
 1154 0978 C7F87832 	 str r3,[r7,#632]
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x2, c0, acc3);
 1155              	 .loc 1 431 0
 1156 097c D7F83802 	 ldr r0,[r7,#568]
 1157 0980 D7F83C12 	 ldr r1,[r7,#572]
 1158 0984 D7F87422 	 ldr r2,[r7,#628]
 1159 0988 07F1E803 	 add r3,r7,#232
 1160 098c 1860     	 str r0,[r3]
 1161 098e 07F1E403 	 add r3,r7,#228
 1162 0992 1960     	 str r1,[r3]
 1163 0994 07F1E003 	 add r3,r7,#224
 1164 0998 1A60     	 str r2,[r3]
 1165              	.LBB106:
 1166              	.LBB107:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1167              	 .loc 2 1212 0
 1168 099a 07F1E803 	 add r3,r7,#232
 1169 099e 1B68     	 ldr r3,[r3]
 1170 09a0 07F1E402 	 add r2,r7,#228
 1171 09a4 1268     	 ldr r2,[r2]
 1172 09a6 07F1E001 	 add r1,r7,#224
 1173 09aa 0968     	 ldr r1,[r1]
 1174              	
 1175 09ac 23FB1212 	 smladx r2,r3,r2,r1
 1176              	
 1177              	 .thumb
 1178 09b0 07F1DC03 	 add r3,r7,#220
 1179 09b4 1A60     	 str r2,[r3]
 1180              	 .loc 2 1213 0
 1181 09b6 07F1DC03 	 add r3,r7,#220
 1182 09ba 1B68     	 ldr r3,[r3]
 1183              	.LBE107:
 1184              	.LBE106:
 1185              	 .loc 1 431 0
 1186 09bc C7F87432 	 str r3,[r7,#628]
 1187              	.L47:
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         if(k == 3u)
 1188              	 .loc 1 434 0
 1189 09c0 D7F85C32 	 ldr r3,[r7,#604]
 1190 09c4 032B     	 cmp r3,#3
 1191 09c6 40F03D81 	 bne .L52
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read y[srcBLen - 5], y[srcBLen - 6] */
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = _SIMD32_OFFSET(py);
 1192              	 .loc 1 437 0
 1193 09ca 07F11003 	 add r3,r7,#16
 1194 09ce 1B68     	 ldr r3,[r3]
 1195 09d0 1B68     	 ldr r3,[r3]
 1196 09d2 C7F83C32 	 str r3,[r7,#572]
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[7], x[8] */
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 = *__SIMD32(px);
 1197              	 .loc 1 440 0
 1198 09d6 07F11403 	 add r3,r7,#20
 1199 09da 1B68     	 ldr r3,[r3]
 1200 09dc 1B68     	 ldr r3,[r3]
 1201 09de C7F83432 	 str r3,[r7,#564]
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[9] */
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x2 = _SIMD32_OFFSET(px+1);
 1202              	 .loc 1 443 0
 1203 09e2 07F11403 	 add r3,r7,#20
 1204 09e6 1B68     	 ldr r3,[r3]
 1205 09e8 D3F80230 	 ldr r3,[r3,#2]
 1206 09ec C7F83832 	 str r3,[r7,#568]
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x0, c0, acc0);
 1207              	 .loc 1 446 0
 1208 09f0 D7F86802 	 ldr r0,[r7,#616]
 1209 09f4 D7F83C12 	 ldr r1,[r7,#572]
 1210 09f8 D7F88022 	 ldr r2,[r7,#640]
 1211 09fc 07F1D803 	 add r3,r7,#216
 1212 0a00 1860     	 str r0,[r3]
 1213 0a02 07F1D403 	 add r3,r7,#212
 1214 0a06 1960     	 str r1,[r3]
 1215 0a08 07F1D003 	 add r3,r7,#208
 1216 0a0c 1A60     	 str r2,[r3]
 1217              	.LBB108:
 1218              	.LBB109:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1219              	 .loc 2 1212 0
 1220 0a0e 07F1D803 	 add r3,r7,#216
 1221 0a12 1B68     	 ldr r3,[r3]
 1222 0a14 07F1D402 	 add r2,r7,#212
 1223 0a18 1268     	 ldr r2,[r2]
 1224 0a1a 07F1D001 	 add r1,r7,#208
 1225 0a1e 0968     	 ldr r1,[r1]
 1226              	
 1227 0a20 23FB1212 	 smladx r2,r3,r2,r1
 1228              	
 1229              	 .thumb
 1230 0a24 07F1CC03 	 add r3,r7,#204
 1231 0a28 1A60     	 str r2,[r3]
 1232              	 .loc 2 1213 0
 1233 0a2a 07F1CC03 	 add r3,r7,#204
 1234 0a2e 1B68     	 ldr r3,[r3]
 1235              	.LBE109:
 1236              	.LBE108:
 1237              	 .loc 1 446 0
 1238 0a30 C7F88032 	 str r3,[r7,#640]
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLADX(x1, c0, acc1);
 1239              	 .loc 1 447 0
 1240 0a34 D7F86402 	 ldr r0,[r7,#612]
 1241 0a38 D7F83C12 	 ldr r1,[r7,#572]
 1242 0a3c D7F87C22 	 ldr r2,[r7,#636]
 1243 0a40 07F1C803 	 add r3,r7,#200
 1244 0a44 1860     	 str r0,[r3]
 1245 0a46 07F1C403 	 add r3,r7,#196
 1246 0a4a 1960     	 str r1,[r3]
 1247 0a4c 07F1C003 	 add r3,r7,#192
 1248 0a50 1A60     	 str r2,[r3]
 1249              	.LBB110:
 1250              	.LBB111:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1251              	 .loc 2 1212 0
 1252 0a52 07F1C803 	 add r3,r7,#200
 1253 0a56 1B68     	 ldr r3,[r3]
 1254 0a58 07F1C402 	 add r2,r7,#196
 1255 0a5c 1268     	 ldr r2,[r2]
 1256 0a5e 07F1C001 	 add r1,r7,#192
 1257 0a62 0968     	 ldr r1,[r1]
 1258              	
 1259 0a64 23FB1212 	 smladx r2,r3,r2,r1
 1260              	
 1261              	 .thumb
 1262 0a68 07F1BC03 	 add r3,r7,#188
 1263 0a6c 1A60     	 str r2,[r3]
 1264              	 .loc 2 1213 0
 1265 0a6e 07F1BC03 	 add r3,r7,#188
 1266 0a72 1B68     	 ldr r3,[r3]
 1267              	.LBE111:
 1268              	.LBE110:
 1269              	 .loc 1 447 0
 1270 0a74 C7F87C32 	 str r3,[r7,#636]
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x3, c0, acc2);
 1271              	 .loc 1 448 0
 1272 0a78 D7F83402 	 ldr r0,[r7,#564]
 1273 0a7c D7F83C12 	 ldr r1,[r7,#572]
 1274 0a80 D7F87822 	 ldr r2,[r7,#632]
 1275 0a84 07F1B803 	 add r3,r7,#184
 1276 0a88 1860     	 str r0,[r3]
 1277 0a8a 07F1B403 	 add r3,r7,#180
 1278 0a8e 1960     	 str r1,[r3]
 1279 0a90 07F1B003 	 add r3,r7,#176
 1280 0a94 1A60     	 str r2,[r3]
 1281              	.LBB112:
 1282              	.LBB113:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1283              	 .loc 2 1212 0
 1284 0a96 07F1B803 	 add r3,r7,#184
 1285 0a9a 1B68     	 ldr r3,[r3]
 1286 0a9c 07F1B402 	 add r2,r7,#180
 1287 0aa0 1268     	 ldr r2,[r2]
 1288 0aa2 07F1B001 	 add r1,r7,#176
 1289 0aa6 0968     	 ldr r1,[r1]
 1290              	
 1291 0aa8 23FB1212 	 smladx r2,r3,r2,r1
 1292              	
 1293              	 .thumb
 1294 0aac 07F1AC03 	 add r3,r7,#172
 1295 0ab0 1A60     	 str r2,[r3]
 1296              	 .loc 2 1213 0
 1297 0ab2 07F1AC03 	 add r3,r7,#172
 1298 0ab6 1B68     	 ldr r3,[r3]
 1299              	.LBE113:
 1300              	.LBE112:
 1301              	 .loc 1 448 0
 1302 0ab8 C7F87832 	 str r3,[r7,#632]
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x2, c0, acc3);
 1303              	 .loc 1 449 0
 1304 0abc D7F83802 	 ldr r0,[r7,#568]
 1305 0ac0 D7F83C12 	 ldr r1,[r7,#572]
 1306 0ac4 D7F87422 	 ldr r2,[r7,#628]
 1307 0ac8 07F1A803 	 add r3,r7,#168
 1308 0acc 1860     	 str r0,[r3]
 1309 0ace 07F1A403 	 add r3,r7,#164
 1310 0ad2 1960     	 str r1,[r3]
 1311 0ad4 07F1A003 	 add r3,r7,#160
 1312 0ad8 1A60     	 str r2,[r3]
 1313              	.LBB114:
 1314              	.LBB115:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1315              	 .loc 2 1212 0
 1316 0ada 07F1A803 	 add r3,r7,#168
 1317 0ade 1B68     	 ldr r3,[r3]
 1318 0ae0 07F1A402 	 add r2,r7,#164
 1319 0ae4 1268     	 ldr r2,[r2]
 1320 0ae6 07F1A001 	 add r1,r7,#160
 1321 0aea 0968     	 ldr r1,[r1]
 1322              	
 1323 0aec 23FB1212 	 smladx r2,r3,r2,r1
 1324              	
 1325              	 .thumb
 1326 0af0 07F19C03 	 add r3,r7,#156
 1327 0af4 1A60     	 str r2,[r3]
 1328              	 .loc 2 1213 0
 1329 0af6 07F19C03 	 add r3,r7,#156
 1330 0afa 1B68     	 ldr r3,[r3]
 1331              	.LBE115:
 1332              	.LBE114:
 1333              	 .loc 1 449 0
 1334 0afc C7F87432 	 str r3,[r7,#628]
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = *(py-1);
 1335              	 .loc 1 451 0
 1336 0b00 07F11003 	 add r3,r7,#16
 1337 0b04 1B68     	 ldr r3,[r3]
 1338 0b06 023B     	 subs r3,r3,#2
 1339 0b08 1B88     	 ldrh r3,[r3]
 1340 0b0a 1BB2     	 sxth r3,r3
 1341 0b0c C7F83C32 	 str r3,[r7,#572]
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
 1342              	 .loc 1 457 0
 1343 0b10 D7F83C32 	 ldr r3,[r7,#572]
 1344 0b14 9BB2     	 uxth r3,r3
 1345 0b16 C7F83C32 	 str r3,[r7,#572]
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Read x[10] */
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         x3 =  _SIMD32_OFFSET(px+2);
 1346              	 .loc 1 461 0
 1347 0b1a 07F11403 	 add r3,r7,#20
 1348 0b1e 1B68     	 ldr r3,[r3]
 1349 0b20 5B68     	 ldr r3,[r3,#4]
 1350 0b22 C7F83432 	 str r3,[r7,#564]
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 3u;
 1351              	 .loc 1 462 0
 1352 0b26 07F11403 	 add r3,r7,#20
 1353 0b2a 1B68     	 ldr r3,[r3]
 1354 0b2c 9A1D     	 adds r2,r3,#6
 1355 0b2e 07F11403 	 add r3,r7,#20
 1356 0b32 1A60     	 str r2,[r3]
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc0 = __SMLADX(x1, c0, acc0);
 1357              	 .loc 1 465 0
 1358 0b34 D7F86402 	 ldr r0,[r7,#612]
 1359 0b38 D7F83C12 	 ldr r1,[r7,#572]
 1360 0b3c D7F88022 	 ldr r2,[r7,#640]
 1361 0b40 07F19803 	 add r3,r7,#152
 1362 0b44 1860     	 str r0,[r3]
 1363 0b46 07F19403 	 add r3,r7,#148
 1364 0b4a 1960     	 str r1,[r3]
 1365 0b4c 07F19003 	 add r3,r7,#144
 1366 0b50 1A60     	 str r2,[r3]
 1367              	.LBB116:
 1368              	.LBB117:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1369              	 .loc 2 1212 0
 1370 0b52 07F19803 	 add r3,r7,#152
 1371 0b56 1B68     	 ldr r3,[r3]
 1372 0b58 07F19402 	 add r2,r7,#148
 1373 0b5c 1268     	 ldr r2,[r2]
 1374 0b5e 07F19001 	 add r1,r7,#144
 1375 0b62 0968     	 ldr r1,[r1]
 1376              	
 1377 0b64 23FB1212 	 smladx r2,r3,r2,r1
 1378              	
 1379              	 .thumb
 1380 0b68 07F18C03 	 add r3,r7,#140
 1381 0b6c 1A60     	 str r2,[r3]
 1382              	 .loc 2 1213 0
 1383 0b6e 07F18C03 	 add r3,r7,#140
 1384 0b72 1B68     	 ldr r3,[r3]
 1385              	.LBE117:
 1386              	.LBE116:
 1387              	 .loc 1 465 0
 1388 0b74 C7F88032 	 str r3,[r7,#640]
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc1 = __SMLAD(x2, c0, acc1);
 1389              	 .loc 1 466 0
 1390 0b78 D7F83802 	 ldr r0,[r7,#568]
 1391 0b7c D7F83C12 	 ldr r1,[r7,#572]
 1392 0b80 D7F87C22 	 ldr r2,[r7,#636]
 1393 0b84 07F18803 	 add r3,r7,#136
 1394 0b88 1860     	 str r0,[r3]
 1395 0b8a 07F18403 	 add r3,r7,#132
 1396 0b8e 1960     	 str r1,[r3]
 1397 0b90 07F18003 	 add r3,r7,#128
 1398 0b94 1A60     	 str r2,[r3]
 1399              	.LBB118:
 1400              	.LBB119:
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1401              	 .loc 2 1204 0
 1402 0b96 07F18803 	 add r3,r7,#136
 1403 0b9a 1B68     	 ldr r3,[r3]
 1404 0b9c 07F18402 	 add r2,r7,#132
 1405 0ba0 1268     	 ldr r2,[r2]
 1406 0ba2 07F18001 	 add r1,r7,#128
 1407 0ba6 0968     	 ldr r1,[r1]
 1408              	
 1409 0ba8 23FB0212 	 smlad r2,r3,r2,r1
 1410              	
 1411              	 .thumb
 1412 0bac 07F17C03 	 add r3,r7,#124
 1413 0bb0 1A60     	 str r2,[r3]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1414              	 .loc 2 1205 0
 1415 0bb2 07F17C03 	 add r3,r7,#124
 1416 0bb6 1B68     	 ldr r3,[r3]
 1417              	.LBE119:
 1418              	.LBE118:
 1419              	 .loc 1 466 0
 1420 0bb8 C7F87C32 	 str r3,[r7,#636]
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc2 = __SMLADX(x2, c0, acc2);
 1421              	 .loc 1 467 0
 1422 0bbc D7F83802 	 ldr r0,[r7,#568]
 1423 0bc0 D7F83C12 	 ldr r1,[r7,#572]
 1424 0bc4 D7F87822 	 ldr r2,[r7,#632]
 1425 0bc8 07F17803 	 add r3,r7,#120
 1426 0bcc 1860     	 str r0,[r3]
 1427 0bce 07F17403 	 add r3,r7,#116
 1428 0bd2 1960     	 str r1,[r3]
 1429 0bd4 07F17003 	 add r3,r7,#112
 1430 0bd8 1A60     	 str r2,[r3]
 1431              	.LBB120:
 1432              	.LBB121:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1433              	 .loc 2 1212 0
 1434 0bda 07F17803 	 add r3,r7,#120
 1435 0bde 1B68     	 ldr r3,[r3]
 1436 0be0 07F17402 	 add r2,r7,#116
 1437 0be4 1268     	 ldr r2,[r2]
 1438 0be6 07F17001 	 add r1,r7,#112
 1439 0bea 0968     	 ldr r1,[r1]
 1440              	
 1441 0bec 23FB1212 	 smladx r2,r3,r2,r1
 1442              	
 1443              	 .thumb
 1444 0bf0 07F16C03 	 add r3,r7,#108
 1445 0bf4 1A60     	 str r2,[r3]
 1446              	 .loc 2 1213 0
 1447 0bf6 07F16C03 	 add r3,r7,#108
 1448 0bfa 1B68     	 ldr r3,[r3]
 1449              	.LBE121:
 1450              	.LBE120:
 1451              	 .loc 1 467 0
 1452 0bfc C7F87832 	 str r3,[r7,#632]
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           acc3 = __SMLADX(x3, c0, acc3);
 1453              	 .loc 1 468 0
 1454 0c00 D7F83402 	 ldr r0,[r7,#564]
 1455 0c04 D7F83C12 	 ldr r1,[r7,#572]
 1456 0c08 D7F87422 	 ldr r2,[r7,#628]
 1457 0c0c 07F16803 	 add r3,r7,#104
 1458 0c10 1860     	 str r0,[r3]
 1459 0c12 07F16403 	 add r3,r7,#100
 1460 0c16 1960     	 str r1,[r3]
 1461 0c18 07F16003 	 add r3,r7,#96
 1462 0c1c 1A60     	 str r2,[r3]
 1463              	.LBB122:
 1464              	.LBB123:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1465              	 .loc 2 1212 0
 1466 0c1e 07F16803 	 add r3,r7,#104
 1467 0c22 1B68     	 ldr r3,[r3]
 1468 0c24 07F16402 	 add r2,r7,#100
 1469 0c28 1268     	 ldr r2,[r2]
 1470 0c2a 07F16001 	 add r1,r7,#96
 1471 0c2e 0968     	 ldr r1,[r1]
 1472              	
 1473 0c30 23FB1212 	 smladx r2,r3,r2,r1
 1474              	
 1475              	 .thumb
 1476 0c34 07F15C03 	 add r3,r7,#92
 1477 0c38 1A60     	 str r2,[r3]
 1478              	 .loc 2 1213 0
 1479 0c3a 07F15C03 	 add r3,r7,#92
 1480 0c3e 1B68     	 ldr r3,[r3]
 1481              	.LBE123:
 1482              	.LBE122:
 1483              	 .loc 1 468 0
 1484 0c40 C7F87432 	 str r3,[r7,#628]
 1485              	.L52:
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the results in the accumulators in the destination buffer. */
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc0 >> 15, acc1 >> 15, 16);
 1486              	 .loc 1 474 0
 1487 0c44 07F11802 	 add r2,r7,#24
 1488 0c48 1368     	 ldr r3,[r2]
 1489 0c4a 191D     	 adds r1,r3,#4
 1490 0c4c 1160     	 str r1,[r2]
 1491              	.LBB124:
 1492 0c4e D7F88022 	 ldr r2,[r7,#640]
 1493 0c52 D213     	 asrs r2,r2,#15
 1494 0c54 C7F83022 	 str r2,[r7,#560]
 1495 0c58 D7F87C22 	 ldr r2,[r7,#636]
 1496 0c5c D213     	 asrs r2,r2,#15
 1497 0c5e C7F82C22 	 str r2,[r7,#556]
 1498 0c62 D7F83022 	 ldr r2,[r7,#560]
 1499 0c66 D7F82C12 	 ldr r1,[r7,#556]
 1500              	
 1501 0c6a C2EA0142 	 pkhbt r2,r2,r1,lsl#16
 1502              	
 1503              	 .thumb
 1504 0c6e C7F82822 	 str r2,[r7,#552]
 1505 0c72 D7F82822 	 ldr r2,[r7,#552]
 1506              	.LBE124:
 1507 0c76 1A60     	 str r2,[r3]
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc2 >> 15, acc3 >> 15, 16);
 1508              	 .loc 1 475 0
 1509 0c78 07F11802 	 add r2,r7,#24
 1510 0c7c 1368     	 ldr r3,[r2]
 1511 0c7e 191D     	 adds r1,r3,#4
 1512 0c80 1160     	 str r1,[r2]
 1513              	.LBB125:
 1514 0c82 D7F87822 	 ldr r2,[r7,#632]
 1515 0c86 D213     	 asrs r2,r2,#15
 1516 0c88 C7F82422 	 str r2,[r7,#548]
 1517 0c8c D7F87422 	 ldr r2,[r7,#628]
 1518 0c90 D213     	 asrs r2,r2,#15
 1519 0c92 C7F82022 	 str r2,[r7,#544]
 1520 0c96 D7F82422 	 ldr r2,[r7,#548]
 1521 0c9a D7F82012 	 ldr r1,[r7,#544]
 1522              	
 1523 0c9e C2EA0142 	 pkhbt r2,r2,r1,lsl#16
 1524              	
 1525              	 .thumb
 1526 0ca2 C7F81C22 	 str r2,[r7,#540]
 1527 0ca6 D7F81C22 	 ldr r2,[r7,#540]
 1528              	.LBE125:
 1529 0caa 1A60     	 str r2,[r3]
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc1 >> 15, acc0 >> 15, 16);
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *__SIMD32(pOut)++ = __PKHBT(acc3 >> 15, acc2 >> 15, 16);
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifndef  ARM_MATH_BIG_ENDIAN    */
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 4 */
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count += 4u;
 1530              	 .loc 1 485 0
 1531 0cac D7F85832 	 ldr r3,[r7,#600]
 1532 0cb0 0433     	 adds r3,r3,#4
 1533 0cb2 C7F85832 	 str r3,[r7,#600]
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
 1534              	 .loc 1 488 0
 1535 0cb6 D7F85832 	 ldr r3,[r7,#600]
 1536 0cba 5B00     	 lsls r3,r3,#1
 1537 0cbc D7F88C22 	 ldr r2,[r7,#652]
 1538 0cc0 1A44     	 add r2,r2,r3
 1539 0cc2 07F11403 	 add r3,r7,#20
 1540 0cc6 1A60     	 str r2,[r3]
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 1541              	 .loc 1 489 0
 1542 0cc8 07F11003 	 add r3,r7,#16
 1543 0ccc D7F86C22 	 ldr r2,[r7,#620]
 1544 0cd0 1A60     	 str r2,[r3]
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 1545              	 .loc 1 492 0
 1546 0cd2 D7F85432 	 ldr r3,[r7,#596]
 1547 0cd6 013B     	 subs r3,r3,#1
 1548 0cd8 C7F85432 	 str r3,[r7,#596]
 1549              	.L32:
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1550              	 .loc 1 312 0
 1551 0cdc D7F85432 	 ldr r3,[r7,#596]
 1552 0ce0 002B     	 cmp r3,#0
 1553 0ce2 7FF4C5AB 	 bne .L61
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.   
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4u;
 1554              	 .loc 1 497 0
 1555 0ce6 D7F84032 	 ldr r3,[r7,#576]
 1556 0cea 03F00303 	 and r3,r3,#3
 1557 0cee C7F85432 	 str r3,[r7,#596]
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(blkCnt > 0u)
 1558              	 .loc 1 499 0
 1559 0cf2 C2E0     	 b .L62
 1560              	.L67:
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
 1561              	 .loc 1 502 0
 1562 0cf4 0023     	 movs r3,#0
 1563 0cf6 C7F88432 	 str r3,[r7,#644]
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2u;
 1564              	 .loc 1 505 0
 1565 0cfa 3B46     	 mov r3,r7
 1566 0cfc 1B68     	 ldr r3,[r3]
 1567 0cfe 9B08     	 lsrs r3,r3,#2
 1568 0d00 C7F85C32 	 str r3,[r7,#604]
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while(k > 0u)
 1569              	 .loc 1 509 0
 1570 0d04 68E0     	 b .L63
 1571              	.L64:
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1572              	 .loc 1 512 0
 1573 0d06 07F11403 	 add r3,r7,#20
 1574 0d0a 1B68     	 ldr r3,[r3]
 1575 0d0c 991C     	 adds r1,r3,#2
 1576 0d0e 07F11402 	 add r2,r7,#20
 1577 0d12 1160     	 str r1,[r2]
 1578 0d14 1B88     	 ldrh r3,[r3]
 1579 0d16 1AB2     	 sxth r2,r3
 1580 0d18 07F11003 	 add r3,r7,#16
 1581 0d1c 1B68     	 ldr r3,[r3]
 1582 0d1e 981E     	 subs r0,r3,#2
 1583 0d20 07F11001 	 add r1,r7,#16
 1584 0d24 0860     	 str r0,[r1]
 1585 0d26 1B88     	 ldrh r3,[r3]
 1586 0d28 1BB2     	 sxth r3,r3
 1587 0d2a 03FB02F3 	 mul r3,r3,r2
 1588 0d2e D7F88422 	 ldr r2,[r7,#644]
 1589 0d32 1344     	 add r3,r3,r2
 1590 0d34 C7F88432 	 str r3,[r7,#644]
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1591              	 .loc 1 513 0
 1592 0d38 07F11403 	 add r3,r7,#20
 1593 0d3c 1B68     	 ldr r3,[r3]
 1594 0d3e 991C     	 adds r1,r3,#2
 1595 0d40 07F11402 	 add r2,r7,#20
 1596 0d44 1160     	 str r1,[r2]
 1597 0d46 1B88     	 ldrh r3,[r3]
 1598 0d48 1AB2     	 sxth r2,r3
 1599 0d4a 07F11003 	 add r3,r7,#16
 1600 0d4e 1B68     	 ldr r3,[r3]
 1601 0d50 981E     	 subs r0,r3,#2
 1602 0d52 07F11001 	 add r1,r7,#16
 1603 0d56 0860     	 str r0,[r1]
 1604 0d58 1B88     	 ldrh r3,[r3]
 1605 0d5a 1BB2     	 sxth r3,r3
 1606 0d5c 03FB02F3 	 mul r3,r3,r2
 1607 0d60 D7F88422 	 ldr r2,[r7,#644]
 1608 0d64 1344     	 add r3,r3,r2
 1609 0d66 C7F88432 	 str r3,[r7,#644]
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1610              	 .loc 1 514 0
 1611 0d6a 07F11403 	 add r3,r7,#20
 1612 0d6e 1B68     	 ldr r3,[r3]
 1613 0d70 991C     	 adds r1,r3,#2
 1614 0d72 07F11402 	 add r2,r7,#20
 1615 0d76 1160     	 str r1,[r2]
 1616 0d78 1B88     	 ldrh r3,[r3]
 1617 0d7a 1AB2     	 sxth r2,r3
 1618 0d7c 07F11003 	 add r3,r7,#16
 1619 0d80 1B68     	 ldr r3,[r3]
 1620 0d82 981E     	 subs r0,r3,#2
 1621 0d84 07F11001 	 add r1,r7,#16
 1622 0d88 0860     	 str r0,[r1]
 1623 0d8a 1B88     	 ldrh r3,[r3]
 1624 0d8c 1BB2     	 sxth r3,r3
 1625 0d8e 03FB02F3 	 mul r3,r3,r2
 1626 0d92 D7F88422 	 ldr r2,[r7,#644]
 1627 0d96 1344     	 add r3,r3,r2
 1628 0d98 C7F88432 	 str r3,[r7,#644]
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1629              	 .loc 1 515 0
 1630 0d9c 07F11403 	 add r3,r7,#20
 1631 0da0 1B68     	 ldr r3,[r3]
 1632 0da2 991C     	 adds r1,r3,#2
 1633 0da4 07F11402 	 add r2,r7,#20
 1634 0da8 1160     	 str r1,[r2]
 1635 0daa 1B88     	 ldrh r3,[r3]
 1636 0dac 1AB2     	 sxth r2,r3
 1637 0dae 07F11003 	 add r3,r7,#16
 1638 0db2 1B68     	 ldr r3,[r3]
 1639 0db4 981E     	 subs r0,r3,#2
 1640 0db6 07F11001 	 add r1,r7,#16
 1641 0dba 0860     	 str r0,[r1]
 1642 0dbc 1B88     	 ldrh r3,[r3]
 1643 0dbe 1BB2     	 sxth r3,r3
 1644 0dc0 03FB02F3 	 mul r3,r3,r2
 1645 0dc4 D7F88422 	 ldr r2,[r7,#644]
 1646 0dc8 1344     	 add r3,r3,r2
 1647 0dca C7F88432 	 str r3,[r7,#644]
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 1648              	 .loc 1 518 0
 1649 0dce D7F85C32 	 ldr r3,[r7,#604]
 1650 0dd2 013B     	 subs r3,r3,#1
 1651 0dd4 C7F85C32 	 str r3,[r7,#604]
 1652              	.L63:
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 1653              	 .loc 1 509 0
 1654 0dd8 D7F85C32 	 ldr r3,[r7,#604]
 1655 0ddc 002B     	 cmp r3,#0
 1656 0dde 92D1     	 bne .L64
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.   
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4u;
 1657              	 .loc 1 523 0
 1658 0de0 3B46     	 mov r3,r7
 1659 0de2 1B68     	 ldr r3,[r3]
 1660 0de4 03F00303 	 and r3,r3,#3
 1661 0de8 C7F85C32 	 str r3,[r7,#604]
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while(k > 0u)
 1662              	 .loc 1 525 0
 1663 0dec 1DE0     	 b .L65
 1664              	.L66:
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1665              	 .loc 1 528 0
 1666 0dee 07F11403 	 add r3,r7,#20
 1667 0df2 1B68     	 ldr r3,[r3]
 1668 0df4 991C     	 adds r1,r3,#2
 1669 0df6 07F11402 	 add r2,r7,#20
 1670 0dfa 1160     	 str r1,[r2]
 1671 0dfc 1B88     	 ldrh r3,[r3]
 1672 0dfe 1AB2     	 sxth r2,r3
 1673 0e00 07F11003 	 add r3,r7,#16
 1674 0e04 1B68     	 ldr r3,[r3]
 1675 0e06 981E     	 subs r0,r3,#2
 1676 0e08 07F11001 	 add r1,r7,#16
 1677 0e0c 0860     	 str r0,[r1]
 1678 0e0e 1B88     	 ldrh r3,[r3]
 1679 0e10 1BB2     	 sxth r3,r3
 1680 0e12 03FB02F3 	 mul r3,r3,r2
 1681 0e16 D7F88422 	 ldr r2,[r7,#644]
 1682 0e1a 1344     	 add r3,r3,r2
 1683 0e1c C7F88432 	 str r3,[r7,#644]
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 1684              	 .loc 1 531 0
 1685 0e20 D7F85C32 	 ldr r3,[r7,#604]
 1686 0e24 013B     	 subs r3,r3,#1
 1687 0e26 C7F85C32 	 str r3,[r7,#604]
 1688              	.L65:
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 1689              	 .loc 1 525 0
 1690 0e2a D7F85C32 	 ldr r3,[r7,#604]
 1691 0e2e 002B     	 cmp r3,#0
 1692 0e30 DDD1     	 bne .L66
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
 1693              	 .loc 1 535 0
 1694 0e32 07F11803 	 add r3,r7,#24
 1695 0e36 1B68     	 ldr r3,[r3]
 1696 0e38 991C     	 adds r1,r3,#2
 1697 0e3a 07F11802 	 add r2,r7,#24
 1698 0e3e 1160     	 str r1,[r2]
 1699 0e40 D7F88422 	 ldr r2,[r7,#644]
 1700 0e44 D213     	 asrs r2,r2,#15
 1701 0e46 92B2     	 uxth r2,r2
 1702 0e48 1A80     	 strh r2,[r3]
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
 1703              	 .loc 1 538 0
 1704 0e4a D7F85832 	 ldr r3,[r7,#600]
 1705 0e4e 0133     	 adds r3,r3,#1
 1706 0e50 C7F85832 	 str r3,[r7,#600]
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
 1707              	 .loc 1 541 0
 1708 0e54 D7F85832 	 ldr r3,[r7,#600]
 1709 0e58 5B00     	 lsls r3,r3,#1
 1710 0e5a D7F88C22 	 ldr r2,[r7,#652]
 1711 0e5e 1A44     	 add r2,r2,r3
 1712 0e60 07F11403 	 add r3,r7,#20
 1713 0e64 1A60     	 str r2,[r3]
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 1714              	 .loc 1 542 0
 1715 0e66 07F11003 	 add r3,r7,#16
 1716 0e6a D7F86C22 	 ldr r2,[r7,#620]
 1717 0e6e 1A60     	 str r2,[r3]
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 1718              	 .loc 1 545 0
 1719 0e70 D7F85432 	 ldr r3,[r7,#596]
 1720 0e74 013B     	 subs r3,r3,#1
 1721 0e76 C7F85432 	 str r3,[r7,#596]
 1722              	.L62:
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1723              	 .loc 1 499 0
 1724 0e7a D7F85432 	 ldr r3,[r7,#596]
 1725 0e7e 002B     	 cmp r3,#0
 1726 0e80 7FF438AF 	 bne .L67
 1727 0e84 56E0     	 b .L68
 1728              	.L31:
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4,   
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2;
 1729              	 .loc 1 552 0
 1730 0e86 D7F84032 	 ldr r3,[r7,#576]
 1731 0e8a C7F85432 	 str r3,[r7,#596]
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(blkCnt > 0u)
 1732              	 .loc 1 554 0
 1733 0e8e 4DE0     	 b .L69
 1734              	.L72:
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
 1735              	 .loc 1 557 0
 1736 0e90 0023     	 movs r3,#0
 1737 0e92 C7F88432 	 str r3,[r7,#644]
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* srcBLen number of MACS should be performed */
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen;
 1738              	 .loc 1 560 0
 1739 0e96 3B46     	 mov r3,r7
 1740 0e98 1B68     	 ldr r3,[r3]
 1741 0e9a C7F85C32 	 str r3,[r7,#604]
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while(k > 0u)
 1742              	 .loc 1 562 0
 1743 0e9e 1DE0     	 b .L70
 1744              	.L71:
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
 1745              	 .loc 1 565 0
 1746 0ea0 07F11403 	 add r3,r7,#20
 1747 0ea4 1B68     	 ldr r3,[r3]
 1748 0ea6 991C     	 adds r1,r3,#2
 1749 0ea8 07F11402 	 add r2,r7,#20
 1750 0eac 1160     	 str r1,[r2]
 1751 0eae 1B88     	 ldrh r3,[r3]
 1752 0eb0 1AB2     	 sxth r2,r3
 1753 0eb2 07F11003 	 add r3,r7,#16
 1754 0eb6 1B68     	 ldr r3,[r3]
 1755 0eb8 981E     	 subs r0,r3,#2
 1756 0eba 07F11001 	 add r1,r7,#16
 1757 0ebe 0860     	 str r0,[r1]
 1758 0ec0 1B88     	 ldrh r3,[r3]
 1759 0ec2 1BB2     	 sxth r3,r3
 1760 0ec4 03FB02F3 	 mul r3,r3,r2
 1761 0ec8 D7F88422 	 ldr r2,[r7,#644]
 1762 0ecc 1344     	 add r3,r3,r2
 1763 0ece C7F88432 	 str r3,[r7,#644]
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
 1764              	 .loc 1 568 0
 1765 0ed2 D7F85C32 	 ldr r3,[r7,#604]
 1766 0ed6 013B     	 subs r3,r3,#1
 1767 0ed8 C7F85C32 	 str r3,[r7,#604]
 1768              	.L70:
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
 1769              	 .loc 1 562 0
 1770 0edc D7F85C32 	 ldr r3,[r7,#604]
 1771 0ee0 002B     	 cmp r3,#0
 1772 0ee2 DDD1     	 bne .L71
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
 1773              	 .loc 1 572 0
 1774 0ee4 07F11803 	 add r3,r7,#24
 1775 0ee8 1B68     	 ldr r3,[r3]
 1776 0eea 991C     	 adds r1,r3,#2
 1777 0eec 07F11802 	 add r2,r7,#24
 1778 0ef0 1160     	 str r1,[r2]
 1779 0ef2 D7F88422 	 ldr r2,[r7,#644]
 1780 0ef6 D213     	 asrs r2,r2,#15
 1781 0ef8 92B2     	 uxth r2,r2
 1782 0efa 1A80     	 strh r2,[r3]
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the MAC count */
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
 1783              	 .loc 1 575 0
 1784 0efc D7F85832 	 ldr r3,[r7,#600]
 1785 0f00 0133     	 adds r3,r3,#1
 1786 0f02 C7F85832 	 str r3,[r7,#600]
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
 1787              	 .loc 1 578 0
 1788 0f06 D7F85832 	 ldr r3,[r7,#600]
 1789 0f0a 5B00     	 lsls r3,r3,#1
 1790 0f0c D7F88C22 	 ldr r2,[r7,#652]
 1791 0f10 1A44     	 add r2,r2,r3
 1792 0f12 07F11403 	 add r3,r7,#20
 1793 0f16 1A60     	 str r2,[r3]
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
 1794              	 .loc 1 579 0
 1795 0f18 07F11003 	 add r3,r7,#16
 1796 0f1c D7F86C22 	 ldr r2,[r7,#620]
 1797 0f20 1A60     	 str r2,[r3]
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
 1798              	 .loc 1 582 0
 1799 0f22 D7F85432 	 ldr r3,[r7,#596]
 1800 0f26 013B     	 subs r3,r3,#1
 1801 0f28 C7F85432 	 str r3,[r7,#596]
 1802              	.L69:
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1803              	 .loc 1 554 0
 1804 0f2c D7F85432 	 ldr r3,[r7,#596]
 1805 0f30 002B     	 cmp r3,#0
 1806 0f32 ADD1     	 bne .L72
 1807              	.L68:
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------   
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage3   
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....   
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]   
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]   
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.   
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed */
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = srcBLen - 1u;
 1808              	 .loc 1 600 0
 1809 0f34 3B46     	 mov r3,r7
 1810 0f36 1B68     	 ldr r3,[r3]
 1811 0f38 013B     	 subs r3,r3,#1
 1812 0f3a C7F85832 	 str r3,[r7,#600]
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 1813              	 .loc 1 603 0
 1814 0f3e 07F10802 	 add r2,r7,#8
 1815 0f42 3B46     	 mov r3,r7
 1816 0f44 1268     	 ldr r2,[r2]
 1817 0f46 1B68     	 ldr r3,[r3]
 1818 0f48 D31A     	 subs r3,r2,r3
 1819 0f4a 0133     	 adds r3,r3,#1
 1820 0f4c 5B00     	 lsls r3,r3,#1
 1821 0f4e D7F88C22 	 ldr r2,[r7,#652]
 1822 0f52 1344     	 add r3,r3,r2
 1823 0f54 C7F87032 	 str r3,[r7,#624]
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pSrc1;
 1824              	 .loc 1 604 0
 1825 0f58 07F11403 	 add r3,r7,#20
 1826 0f5c D7F87022 	 ldr r2,[r7,#624]
 1827 0f60 1A60     	 str r2,[r3]
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 1828              	 .loc 1 607 0
 1829 0f62 3B46     	 mov r3,r7
 1830 0f64 1B68     	 ldr r3,[r3]
 1831 0f66 03F10043 	 add r3,r3,#-2147483648
 1832 0f6a 013B     	 subs r3,r3,#1
 1833 0f6c 5B00     	 lsls r3,r3,#1
 1834 0f6e D7F88822 	 ldr r2,[r7,#648]
 1835 0f72 1344     	 add r3,r3,r2
 1836 0f74 C7F86C32 	 str r3,[r7,#620]
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pIn2 = pSrc2 - 1u;
 1837              	 .loc 1 608 0
 1838 0f78 D7F86C32 	 ldr r3,[r7,#620]
 1839 0f7c 023B     	 subs r3,r3,#2
 1840 0f7e C7F88832 	 str r3,[r7,#648]
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pIn2;
 1841              	 .loc 1 609 0
 1842 0f82 07F11003 	 add r3,r7,#16
 1843 0f86 D7F88822 	 ldr r2,[r7,#648]
 1844 0f8a 1A60     	 str r2,[r3]
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* -------------------   
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage3 process   
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------*/
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     j = count >> 2u;
 1845              	 .loc 1 620 0
 1846 0f8c D7F85832 	 ldr r3,[r7,#600]
 1847 0f90 9B08     	 lsrs r3,r3,#2
 1848 0f92 C7F86032 	 str r3,[r7,#608]
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while((j > 0u) && (blockSize3 > 0))
 1849              	 .loc 1 622 0
 1850 0f96 DAE0     	 b .L73
 1851              	.L82:
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 1852              	 .loc 1 625 0
 1853 0f98 0023     	 movs r3,#0
 1854 0f9a C7F88432 	 str r3,[r7,#644]
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
 1855              	 .loc 1 628 0
 1856 0f9e D7F85832 	 ldr r3,[r7,#600]
 1857 0fa2 9B08     	 lsrs r3,r3,#2
 1858 0fa4 C7F85C32 	 str r3,[r7,#604]
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 1859              	 .loc 1 632 0
 1860 0fa8 5CE0     	 b .L74
 1861              	.L77:
 633:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 634:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[srcALen - srcBLen + 1], x[srcALen - srcBLen + 2] are multiplied   
 635:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * with y[srcBLen - 1], y[srcBLen - 2] respectively */
 636:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 1862              	 .loc 1 636 0
 1863 0faa 07F11402 	 add r2,r7,#20
 1864 0fae 1368     	 ldr r3,[r2]
 1865 0fb0 191D     	 adds r1,r3,#4
 1866 0fb2 1160     	 str r1,[r2]
 1867 0fb4 1B68     	 ldr r3,[r3]
 1868 0fb6 1846     	 mov r0,r3
 1869 0fb8 07F11002 	 add r2,r7,#16
 1870 0fbc 1368     	 ldr r3,[r2]
 1871 0fbe 191F     	 subs r1,r3,#4
 1872 0fc0 1160     	 str r1,[r2]
 1873 0fc2 1B68     	 ldr r3,[r3]
 1874 0fc4 1946     	 mov r1,r3
 1875 0fc6 D7F88422 	 ldr r2,[r7,#644]
 1876 0fca 07F15803 	 add r3,r7,#88
 1877 0fce 1860     	 str r0,[r3]
 1878 0fd0 07F15403 	 add r3,r7,#84
 1879 0fd4 1960     	 str r1,[r3]
 1880 0fd6 07F15003 	 add r3,r7,#80
 1881 0fda 1A60     	 str r2,[r3]
 1882              	.LBB126:
 1883              	.LBB127:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1884              	 .loc 2 1212 0
 1885 0fdc 07F15803 	 add r3,r7,#88
 1886 0fe0 1B68     	 ldr r3,[r3]
 1887 0fe2 07F15402 	 add r2,r7,#84
 1888 0fe6 1268     	 ldr r2,[r2]
 1889 0fe8 07F15001 	 add r1,r7,#80
 1890 0fec 0968     	 ldr r1,[r1]
 1891              	
 1892 0fee 23FB1212 	 smladx r2,r3,r2,r1
 1893              	
 1894              	 .thumb
 1895 0ff2 07F14C03 	 add r3,r7,#76
 1896 0ff6 1A60     	 str r2,[r3]
 1897              	 .loc 2 1213 0
 1898 0ff8 07F14C03 	 add r3,r7,#76
 1899 0ffc 1B68     	 ldr r3,[r3]
 1900              	.LBE127:
 1901              	.LBE126:
 1902              	 .loc 1 636 0
 1903 0ffe C7F88432 	 str r3,[r7,#644]
 637:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* x[srcALen - srcBLen + 3], x[srcALen - srcBLen + 4] are multiplied   
 638:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * with y[srcBLen - 3], y[srcBLen - 4] respectively */
 639:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLADX(*__SIMD32(px)++, *__SIMD32(py)--, sum);
 1904              	 .loc 1 639 0
 1905 1002 07F11402 	 add r2,r7,#20
 1906 1006 1368     	 ldr r3,[r2]
 1907 1008 191D     	 adds r1,r3,#4
 1908 100a 1160     	 str r1,[r2]
 1909 100c 1B68     	 ldr r3,[r3]
 1910 100e 1846     	 mov r0,r3
 1911 1010 07F11002 	 add r2,r7,#16
 1912 1014 1368     	 ldr r3,[r2]
 1913 1016 191F     	 subs r1,r3,#4
 1914 1018 1160     	 str r1,[r2]
 1915 101a 1B68     	 ldr r3,[r3]
 1916 101c 1946     	 mov r1,r3
 1917 101e D7F88422 	 ldr r2,[r7,#644]
 1918 1022 07F14803 	 add r3,r7,#72
 1919 1026 1860     	 str r0,[r3]
 1920 1028 07F14403 	 add r3,r7,#68
 1921 102c 1960     	 str r1,[r3]
 1922 102e 07F14003 	 add r3,r7,#64
 1923 1032 1A60     	 str r2,[r3]
 1924              	.LBB128:
 1925              	.LBB129:
1212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1926              	 .loc 2 1212 0
 1927 1034 07F14803 	 add r3,r7,#72
 1928 1038 1B68     	 ldr r3,[r3]
 1929 103a 07F14402 	 add r2,r7,#68
 1930 103e 1268     	 ldr r2,[r2]
 1931 1040 07F14001 	 add r1,r7,#64
 1932 1044 0968     	 ldr r1,[r1]
 1933              	
 1934 1046 23FB1212 	 smladx r2,r3,r2,r1
 1935              	
 1936              	 .thumb
 1937 104a 07F13C03 	 add r3,r7,#60
 1938 104e 1A60     	 str r2,[r3]
 1939              	 .loc 2 1213 0
 1940 1050 07F13C03 	 add r3,r7,#60
 1941 1054 1B68     	 ldr r3,[r3]
 1942              	.LBE129:
 1943              	.LBE128:
 1944              	 .loc 1 639 0
 1945 1056 C7F88432 	 str r3,[r7,#644]
 640:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 641:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 642:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 1946              	 .loc 1 642 0
 1947 105a D7F85C32 	 ldr r3,[r7,#604]
 1948 105e 013B     	 subs r3,r3,#1
 1949 1060 C7F85C32 	 str r3,[r7,#604]
 1950              	.L74:
 632:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 1951              	 .loc 1 632 0
 1952 1064 D7F85C32 	 ldr r3,[r7,#604]
 1953 1068 002B     	 cmp r3,#0
 1954 106a 9ED1     	 bne .L77
 643:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 644:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 645:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, the pointer py is used without SIMD   
 646:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * So, py is incremented by 1 */
 647:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py + 1u;
 1955              	 .loc 1 647 0
 1956 106c 07F11003 	 add r3,r7,#16
 1957 1070 1B68     	 ldr r3,[r3]
 1958 1072 9A1C     	 adds r2,r3,#2
 1959 1074 07F11003 	 add r3,r7,#16
 1960 1078 1A60     	 str r2,[r3]
 648:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 649:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.   
 650:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 651:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
 1961              	 .loc 1 651 0
 1962 107a D7F85832 	 ldr r3,[r7,#600]
 1963 107e 03F00303 	 and r3,r3,#3
 1964 1082 C7F85C32 	 str r3,[r7,#604]
 652:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 1965              	 .loc 1 653 0
 1966 1086 34E0     	 b .L78
 1967              	.L80:
 654:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 655:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum += x[srcALen - srcBLen + 5] * y[srcBLen - 5] */
 656:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 1968              	 .loc 1 656 0
 1969 1088 07F11403 	 add r3,r7,#20
 1970 108c 1B68     	 ldr r3,[r3]
 1971 108e 991C     	 adds r1,r3,#2
 1972 1090 07F11402 	 add r2,r7,#20
 1973 1094 1160     	 str r1,[r2]
 1974 1096 1B88     	 ldrh r3,[r3]
 1975 1098 18B2     	 sxth r0,r3
 1976 109a 07F11003 	 add r3,r7,#16
 1977 109e 1B68     	 ldr r3,[r3]
 1978 10a0 991E     	 subs r1,r3,#2
 1979 10a2 07F11002 	 add r2,r7,#16
 1980 10a6 1160     	 str r1,[r2]
 1981 10a8 1B88     	 ldrh r3,[r3]
 1982 10aa 19B2     	 sxth r1,r3
 1983 10ac D7F88422 	 ldr r2,[r7,#644]
 1984 10b0 07F13803 	 add r3,r7,#56
 1985 10b4 1860     	 str r0,[r3]
 1986 10b6 07F13403 	 add r3,r7,#52
 1987 10ba 1960     	 str r1,[r3]
 1988 10bc 07F13003 	 add r3,r7,#48
 1989 10c0 1A60     	 str r2,[r3]
 1990              	.LBB130:
 1991              	.LBB131:
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 1992              	 .loc 2 1204 0
 1993 10c2 07F13803 	 add r3,r7,#56
 1994 10c6 1B68     	 ldr r3,[r3]
 1995 10c8 07F13402 	 add r2,r7,#52
 1996 10cc 1268     	 ldr r2,[r2]
 1997 10ce 07F13001 	 add r1,r7,#48
 1998 10d2 0968     	 ldr r1,[r1]
 1999              	
 2000 10d4 23FB0212 	 smlad r2,r3,r2,r1
 2001              	
 2002              	 .thumb
 2003 10d8 07F12C03 	 add r3,r7,#44
 2004 10dc 1A60     	 str r2,[r3]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2005              	 .loc 2 1205 0
 2006 10de 07F12C03 	 add r3,r7,#44
 2007 10e2 1B68     	 ldr r3,[r3]
 2008              	.LBE131:
 2009              	.LBE130:
 2010              	 .loc 1 656 0
 2011 10e4 C7F88432 	 str r3,[r7,#644]
 657:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 658:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 659:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 2012              	 .loc 1 659 0
 2013 10e8 D7F85C32 	 ldr r3,[r7,#604]
 2014 10ec 013B     	 subs r3,r3,#1
 2015 10ee C7F85C32 	 str r3,[r7,#604]
 2016              	.L78:
 653:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2017              	 .loc 1 653 0
 2018 10f2 D7F85C32 	 ldr r3,[r7,#604]
 2019 10f6 002B     	 cmp r3,#0
 2020 10f8 C6D1     	 bne .L80
 660:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 661:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 662:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 663:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2021              	 .loc 1 663 0
 2022 10fa 07F11803 	 add r3,r7,#24
 2023 10fe 1B68     	 ldr r3,[r3]
 2024 1100 991C     	 adds r1,r3,#2
 2025 1102 07F11802 	 add r2,r7,#24
 2026 1106 1160     	 str r1,[r2]
 2027 1108 D7F88422 	 ldr r2,[r7,#644]
 2028 110c D213     	 asrs r2,r2,#15
 2029 110e 92B2     	 uxth r2,r2
 2030 1110 1A80     	 strh r2,[r3]
 664:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 665:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 666:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
 2031              	 .loc 1 666 0
 2032 1112 D7F87032 	 ldr r3,[r7,#624]
 2033 1116 0233     	 adds r3,r3,#2
 2034 1118 C7F87032 	 str r3,[r7,#624]
 2035 111c 07F11403 	 add r3,r7,#20
 2036 1120 D7F87022 	 ldr r2,[r7,#624]
 2037 1124 1A60     	 str r2,[r3]
 667:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pIn2;
 2038              	 .loc 1 667 0
 2039 1126 07F11003 	 add r3,r7,#16
 2040 112a D7F88822 	 ldr r2,[r7,#648]
 2041 112e 1A60     	 str r2,[r3]
 668:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 669:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
 670:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
 2042              	 .loc 1 670 0
 2043 1130 D7F85832 	 ldr r3,[r7,#600]
 2044 1134 013B     	 subs r3,r3,#1
 2045 1136 C7F85832 	 str r3,[r7,#600]
 671:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 672:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 673:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
 2046              	 .loc 1 673 0
 2047 113a D7F84C32 	 ldr r3,[r7,#588]
 2048 113e 013B     	 subs r3,r3,#1
 2049 1140 C7F84C32 	 str r3,[r7,#588]
 674:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 675:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j--;
 2050              	 .loc 1 675 0
 2051 1144 D7F86032 	 ldr r3,[r7,#608]
 2052 1148 013B     	 subs r3,r3,#1
 2053 114a C7F86032 	 str r3,[r7,#608]
 2054              	.L73:
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2055              	 .loc 1 622 0
 2056 114e D7F86032 	 ldr r3,[r7,#608]
 2057 1152 002B     	 cmp r3,#0
 2058 1154 04D0     	 beq .L81
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2059              	 .loc 1 622 0 is_stmt 0 discriminator 1
 2060 1156 D7F84C32 	 ldr r3,[r7,#588]
 2061 115a 002B     	 cmp r3,#0
 2062 115c 3FF71CAF 	 bgt .L82
 2063              	.L81:
 676:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 677:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 678:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 679:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* SIMD is not used for the next MAC operations,   
 680:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * so pointer py is updated to read only one sample at a time */
 681:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py + 1u;
 2064              	 .loc 1 681 0 is_stmt 1
 2065 1160 07F11003 	 add r3,r7,#16
 2066 1164 1B68     	 ldr r3,[r3]
 2067 1166 9A1C     	 adds r2,r3,#2
 2068 1168 07F11003 	 add r3,r7,#16
 2069 116c 1A60     	 str r2,[r3]
 682:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 683:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while(blockSize3 > 0)
 2070              	 .loc 1 683 0
 2071 116e 65E0     	 b .L83
 2072              	.L87:
 684:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 685:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 686:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 2073              	 .loc 1 686 0
 2074 1170 0023     	 movs r3,#0
 2075 1172 C7F88432 	 str r3,[r7,#644]
 687:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 688:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 689:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 2076              	 .loc 1 689 0
 2077 1176 D7F85832 	 ldr r3,[r7,#600]
 2078 117a C7F85C32 	 str r3,[r7,#604]
 690:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 691:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 2079              	 .loc 1 691 0
 2080 117e 34E0     	 b .L84
 2081              	.L86:
 692:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 693:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 694:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 695:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = __SMLAD(*px++, *py--, sum);
 2082              	 .loc 1 695 0
 2083 1180 07F11403 	 add r3,r7,#20
 2084 1184 1B68     	 ldr r3,[r3]
 2085 1186 991C     	 adds r1,r3,#2
 2086 1188 07F11402 	 add r2,r7,#20
 2087 118c 1160     	 str r1,[r2]
 2088 118e 1B88     	 ldrh r3,[r3]
 2089 1190 18B2     	 sxth r0,r3
 2090 1192 07F11003 	 add r3,r7,#16
 2091 1196 1B68     	 ldr r3,[r3]
 2092 1198 991E     	 subs r1,r3,#2
 2093 119a 07F11002 	 add r2,r7,#16
 2094 119e 1160     	 str r1,[r2]
 2095 11a0 1B88     	 ldrh r3,[r3]
 2096 11a2 19B2     	 sxth r1,r3
 2097 11a4 D7F88422 	 ldr r2,[r7,#644]
 2098 11a8 07F12803 	 add r3,r7,#40
 2099 11ac 1860     	 str r0,[r3]
 2100 11ae 07F12403 	 add r3,r7,#36
 2101 11b2 1960     	 str r1,[r3]
 2102 11b4 07F12003 	 add r3,r7,#32
 2103 11b8 1A60     	 str r2,[r3]
 2104              	.LBB132:
 2105              	.LBB133:
1204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 2106              	 .loc 2 1204 0
 2107 11ba 07F12803 	 add r3,r7,#40
 2108 11be 1B68     	 ldr r3,[r3]
 2109 11c0 07F12402 	 add r2,r7,#36
 2110 11c4 1268     	 ldr r2,[r2]
 2111 11c6 07F12001 	 add r1,r7,#32
 2112 11ca 0968     	 ldr r1,[r1]
 2113              	
 2114 11cc 23FB0212 	 smlad r2,r3,r2,r1
 2115              	
 2116              	 .thumb
 2117 11d0 07F11C03 	 add r3,r7,#28
 2118 11d4 1A60     	 str r2,[r3]
1205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2119              	 .loc 2 1205 0
 2120 11d6 07F11C03 	 add r3,r7,#28
 2121 11da 1B68     	 ldr r3,[r3]
 2122              	.LBE133:
 2123              	.LBE132:
 2124              	 .loc 1 695 0
 2125 11dc C7F88432 	 str r3,[r7,#644]
 696:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 697:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 698:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 2126              	 .loc 1 698 0
 2127 11e0 D7F85C32 	 ldr r3,[r7,#604]
 2128 11e4 013B     	 subs r3,r3,#1
 2129 11e6 C7F85C32 	 str r3,[r7,#604]
 2130              	.L84:
 691:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 2131              	 .loc 1 691 0
 2132 11ea D7F85C32 	 ldr r3,[r7,#604]
 2133 11ee 002B     	 cmp r3,#0
 2134 11f0 C6D1     	 bne .L86
 699:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 700:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 701:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 702:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 2135              	 .loc 1 702 0
 2136 11f2 07F11803 	 add r3,r7,#24
 2137 11f6 1B68     	 ldr r3,[r3]
 2138 11f8 991C     	 adds r1,r3,#2
 2139 11fa 07F11802 	 add r2,r7,#24
 2140 11fe 1160     	 str r1,[r2]
 2141 1200 D7F88422 	 ldr r2,[r7,#644]
 2142 1204 D213     	 asrs r2,r2,#15
 2143 1206 92B2     	 uxth r2,r2
 2144 1208 1A80     	 strh r2,[r3]
 703:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 704:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 705:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
 2145              	 .loc 1 705 0
 2146 120a D7F87032 	 ldr r3,[r7,#624]
 2147 120e 0233     	 adds r3,r3,#2
 2148 1210 C7F87032 	 str r3,[r7,#624]
 2149 1214 07F11403 	 add r3,r7,#20
 2150 1218 D7F87022 	 ldr r2,[r7,#624]
 2151 121c 1A60     	 str r2,[r3]
 706:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pSrc2;
 2152              	 .loc 1 706 0
 2153 121e 07F11003 	 add r3,r7,#16
 2154 1222 D7F86C22 	 ldr r2,[r7,#620]
 2155 1226 1A60     	 str r2,[r3]
 707:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 708:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
 709:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
 2156              	 .loc 1 709 0
 2157 1228 D7F85832 	 ldr r3,[r7,#600]
 2158 122c 013B     	 subs r3,r3,#1
 2159 122e C7F85832 	 str r3,[r7,#600]
 710:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 711:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 712:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
 2160              	 .loc 1 712 0
 2161 1232 D7F84C32 	 ldr r3,[r7,#588]
 2162 1236 013B     	 subs r3,r3,#1
 2163 1238 C7F84C32 	 str r3,[r7,#588]
 2164              	.L83:
 683:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 2165              	 .loc 1 683 0
 2166 123c D7F84C32 	 ldr r3,[r7,#588]
 2167 1240 002B     	 cmp r3,#0
 2168 1242 95DC     	 bgt .L87
 713:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 714:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 715:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* set status as ARM_MATH_SUCCESS */
 716:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_SUCCESS;
 2169              	 .loc 1 716 0
 2170 1244 0023     	 movs r3,#0
 2171 1246 87F84B32 	 strb r3,[r7,#587]
 2172              	.L3:
 717:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
 718:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 719:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Return to application */
 720:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   return (status);
 2173              	 .loc 1 720 0
 2174 124a 97F84B32 	 ldrb r3,[r7,#587]
 2175 124e 5BB2     	 sxtb r3,r3
 721:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 722:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 723:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 724:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn1;                                   /* inputA pointer               */
 725:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pIn2;                                   /* inputB pointer               */
 726:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pOut = pDst;                            /* output pointer               */
 727:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t sum, acc0, acc1, acc2, acc3;             /* Accumulator                  */
 728:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *px;                                     /* Intermediate inputA pointer  */
 729:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *py;                                     /* Intermediate inputB pointer  */
 730:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t *pSrc1, *pSrc2;                          /* Intermediate pointers        */
 731:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q31_t x0, x1, x2, x3, c0;
 732:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   uint32_t j, k, count, check, blkCnt;
 733:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   int32_t blockSize1, blockSize2, blockSize3;    /* loop counters                 */
 734:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   arm_status status;                             /* status of Partial convolution */
 735:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   q15_t a, b;
 736:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 737:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Check for range of output samples to be calculated */
 738:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   if((firstIndex + numPoints) > ((srcALen + (srcBLen - 1u))))
 739:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
 740:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 741:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 742:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
 743:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   else
 744:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   {
 745:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 746:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
 747:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* srcB is always made to slide across srcA. */
 748:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
 749:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if(srcALen >=srcBLen)
 750:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 751:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 752:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcA;
 753:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 754:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 755:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcB;
 756:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 757:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 758:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 759:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputA pointer */
 760:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn1 = pSrcB;
 761:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 762:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Initialization of inputB pointer */
 763:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       pIn2 = pSrcA;
 764:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 765:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 766:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j = srcBLen;
 767:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcBLen = srcALen;
 768:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       srcALen = j;
 769:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 770:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 771:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Conditions to check which loopCounter holds   
 772:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * the first and last indices of the output samples to be calculated. */
 773:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     check = firstIndex + numPoints;
 774:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 775:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 776:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 777:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1u)) ? blockSize1 :
 778:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****                                      (int32_t) numPoints) : 0;
 779:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = ((int32_t) check - blockSize3) -
 780:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       (blockSize1 + (int32_t) firstIndex);
 781:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 782:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 783:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 784:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The function is internally   
 785:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * divided into three stages according to the number of multiplications that has to be   
 786:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * taken place between inputA samples and inputB samples. In the first stage of the   
 787:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * algorithm, the multiplications increase by one for every iteration.   
 788:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.   
 789:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * In the third stage of the algorithm, the multiplications decrease by one   
 790:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * for every iteration. */
 791:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 792:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Set the output pointer to point to the firstIndex   
 793:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * of the output sample to be calculated. */
 794:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pOut = pDst + firstIndex;
 795:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 796:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------   
 797:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage1   
 798:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
 799:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 800:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[0]   
 801:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[1] + x[1] * y[0]   
 802:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....   
 803:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]   
 804:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 805:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 806:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.   
 807:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed.   
 808:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Since the partial convolution starts from firstIndex   
 809:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        Number of Macs to be performed is firstIndex + 1 */
 810:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 1u + firstIndex;
 811:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 812:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 813:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pIn1;
 814:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 815:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 816:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + firstIndex;
 817:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 818:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 819:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* ------------------------   
 820:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage1 process   
 821:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ----------------------*/
 822:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 823:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
 824:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations less than 4 */
 825:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations greater than or equal to 4 */
 826:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 827:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
 828:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   while((count < 4u) && (blockSize1 > 0))
 829:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 830:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 831:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 832:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 833:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop over number of MAC operations between   
 834:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * inputA samples and inputB samples */
 835:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
 836:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 837:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 838:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 839:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 840:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum += ((q31_t) * px++ * *py--);
 841:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 842:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 843:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 844:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 845:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 846:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 847:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 848:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 849:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 850:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2;
 851:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 852:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 853:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 854:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 855:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 856:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 857:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 858:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 859:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 860:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
 861:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The internal loop, over count, is unrolled by 4 */
 862:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* To, read the last two inputB samples using SIMD:   
 863:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * y[srcBLen] and y[srcBLen-1] coefficients, py is decremented by 1 */
 864:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py - 1;
 865:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 866:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   while(blockSize1 > 0)
 867:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 868:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
 869:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
 870:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 871:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 872:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
 873:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 874:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
 875:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 876:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	py++;
 877:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 878:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while(k > 0u)
 879:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 880:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Perform the multiply-accumulates */
 881:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 882:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 883:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 884:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
 885:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 886:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 887:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k--;
 888:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 889:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 890:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.   
 891:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
 892:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
 893:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 894:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
 895:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 896:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
 897:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum += ((q31_t) * px++ * *py--);
 898:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 899:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
 900:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
 901:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
 902:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 903:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
 904:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
 905:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 906:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 907:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = ++pSrc2 - 1u;
 908:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 909:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 910:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Increment the MAC count */
 911:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count++;
 912:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 913:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
 914:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize1--;
 915:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 916:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 917:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------   
 918:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage2   
 919:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------------*/
 920:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 921:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]   
 922:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]   
 923:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....   
 924:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 925:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
 926:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 927:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
 928:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 929:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 930:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1 + firstIndex - srcBLen + 1;
 931:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 932:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
 933:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 934:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = pIn1;
 935:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
 936:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 937:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
 938:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
 939:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pSrc2;
 940:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 941:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 942:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = 0u;
 943:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 944:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 945:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------   
 946:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage2 process   
 947:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------*/
 948:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 949:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.   
 950:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * So, to loop unroll over blockSize2,   
 951:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * srcBLen should be greater than or equal to 4 */
 952:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     if(srcBLen >= 4u)
 953:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
 954:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Loop unroll over blockSize2, by 4 */
 955:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = ((uint32_t) blockSize2 >> 2u);
 956:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 957:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(blkCnt > 0u)
 958:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 959:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = py - 1u;
 960:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 961:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Set all accumulators to zero */
 962:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = 0;
 963:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = 0;
 964:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = 0;
 965:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = 0;
 966:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 967:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* read x[0], x[1] samples */
 968:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px++;
 969:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *px++;
 970:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 971:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 972:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	
 973:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
 974:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
 975:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
 976:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 977:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
 978:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 979:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
 980:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
 981:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
 982:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 983:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
 984:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 985:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 986:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = srcBLen >> 2u;
 987:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 988:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
 989:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 990:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       do
 991:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
 992:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read the last two inputB samples using SIMD:   
 993:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          * y[srcBLen - 1] and y[srcBLen - 2] */
 994:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
 995:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
 996:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		py -= 2;
 997:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
 998:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 999:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1000:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1001:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1002:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1003:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1004:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1005:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1006:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1007:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1008:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2] */
1009:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1010:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1011:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2] */
1012:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1013:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1014:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
1015:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 1);
1016:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1017:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1018:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	
1019:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1020:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1021:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1022:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1023:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1024:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1025:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1026:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1027:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1028:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1029:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1030:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1031:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2] */
1032:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
1033:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1034:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2] */
1035:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1036:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1037:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 3] and y[srcBLen - 4] */
1038:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
1039:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
1040:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		py -= 2;
1041:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1042:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1043:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1044:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1045:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1046:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1047:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1048:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1049:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1050:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1051:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1052:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4] */
1053:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x2, c0, acc0);
1054:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1055:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc1 +=  x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4] */
1056:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x3, c0, acc1);
1057:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1058:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[4], x[5], x[6] */
1059:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1060:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 3);
1061:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1062:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1063:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	
1064:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(a, b, 16);
1065:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 4);
1066:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(b, a, 16);
1067:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1068:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1069:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1070:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x0 = __PKHBT(b, a, 16);
1071:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 4);
1072:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x1 = __PKHBT(a, b, 16);
1073:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1074:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1075:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1076:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 4u;
1077:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1078:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc2 +=  x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4] */
1079:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x0, c0, acc2);
1080:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1081:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* acc3 +=  x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4] */
1082:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x1, c0, acc3);
1083:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1084:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       } while(--k);
1085:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1086:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* For the next MAC operations, SIMD is not used   
1087:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * So, the 16 bit pointer if inputB, py is updated */
1088:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1089:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.   
1090:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
1091:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = srcBLen % 0x4u;
1092:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1093:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       if(k == 1u)
1094:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1095:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 5] */
1096:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = *(py+1);
1097:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1098:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1099:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
1101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[7] */
1109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *px;
1110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(px+1);
1111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px++;
1112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		x3 = __PKHBT(b, a, 16);;
1120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLAD(x0, c0, acc0);
1126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLAD(x1, c0, acc1);
1127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x1, c0, acc2);
1128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       if(k == 2u)
1132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
1134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
1135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
1136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
1149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 1);
1150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	
1153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 2u;
1165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
1170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
1171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       if(k == 3u)
1174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 5], y[srcBLen - 6] */
1176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *py;
1177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(py+1);
1178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = __PKHBT(a, b, 16);
1182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		c0 = __PKHBT(b, a, 16);;
1186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[7], x[8], x[9] */
1190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *px;
1191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  b = *(px + 1);
1192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	
1195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(a, b, 16);
1196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(b, a, 16);
1198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x3 = __PKHBT(b, a, 16);
1202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  a = *(px + 2);
1203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  x2 = __PKHBT(a, b, 16);
1204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	   */
1206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x0, c0, acc0);
1209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLADX(x1, c0, acc1);
1210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x3, c0, acc2);
1211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x2, c0, acc3);
1212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read y[srcBLen - 7] */
1214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		c0 = *(py-1);
1215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifdef  ARM_MATH_BIG_ENDIAN
1216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 << 16u;
1218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         c0 = c0 & 0x0000FFFF;
1221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*      #ifdef  ARM_MATH_BIG_ENDIAN     */
1222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Read x[10] */
1224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		a = *(px+2);
1225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		b = *(px+3);
1226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
1228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		x3 = __PKHBT(a, b, 16);
1230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #else
1232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****  		x3 = __PKHBT(b, a, 16);;
1234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif	/*	#ifndef ARM_MATH_BIG_ENDIAN	*/
1236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 		px += 3u;
1238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc0 = __SMLADX(x1, c0, acc0);
1241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc1 = __SMLAD(x2, c0, acc1);
1242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc2 = __SMLADX(x2, c0, acc2);
1243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         acc3 = __SMLADX(x3, c0, acc3);
1244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the results in the accumulators in the destination buffer. */
1247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc0 >> 15);
1248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc1 >> 15);
1249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc2 >> 15);
1250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	  *pOut++ = (q15_t)(acc3 >> 15);
1251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 4 */
1253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count += 4u;
1254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
1256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
1257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
1258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
1261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.   
1264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
1265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2 % 0x4u;
1266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(blkCnt > 0u)
1268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
1270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
1271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
1273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen >> 2u;
1274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
1276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while(k > 0u)
1278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
1279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
1280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
1286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
1287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
1288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.   
1290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****          ** No loop unrolling is used. */
1291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen % 0x4u;
1292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while(k > 0u)
1294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
1295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulates */
1296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
1299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
1300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
1301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
1303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
1304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the pointer pIn1 index, count by 1 */
1306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
1307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
1309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
1310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
1311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
1314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     else
1317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the srcBLen is not a multiple of 4,   
1319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        * the blockSize2 loop cannot be unrolled by 4 */
1320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blkCnt = (uint32_t) blockSize2;
1321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(blkCnt > 0u)
1323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Accumulator is made zero for every iteration */
1325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum = 0;
1326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* srcBLen number of MACS should be performed */
1328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k = srcBLen;
1329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         while(k > 0u)
1331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         {
1332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Perform the multiply-accumulate */
1333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           sum += ((q31_t) * px++ * *py--);
1334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           /* Decrement the loop counter */
1336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****           k--;
1337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         }
1338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Store the result in the accumulator in the destination buffer. */
1340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         *pOut++ = (q15_t) (sum >> 15);
1341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Increment the MAC count */
1343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         count++;
1344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
1346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         px = pIn1 + count;
1347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         py = pSrc2;
1348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         blkCnt--;
1351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* --------------------------   
1356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Initializations of stage3   
1357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * -------------------------*/
1358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
1360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
1361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ....   
1362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]   
1363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]   
1364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      */
1365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.   
1367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        The count variable holds the number of MAC operations performed */
1368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     count = srcBLen - 1u;
1369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputA */
1371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
1372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     px = pSrc1;
1373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Working pointer of inputB */
1375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pSrc2 = pIn2 + (srcBLen - 1u);
1376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     pIn2 = pSrc2 - 1u;
1377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = pIn2;
1378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* -------------------   
1380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * Stage3 process   
1381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * ------------------*/
1382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* For loop unrolling by 4, this stage is divided into two. */
1384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* First part of this stage computes the MAC operations greater than 4 */
1385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* Second part of this stage computes the MAC operations less than or equal to 4 */
1386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The first part of the stage starts here */
1388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     j = count >> 2u;
1389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while((j > 0u) && (blockSize3 > 0))
1391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
1394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
1396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count >> 2u;
1397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.   
1399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
1400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 	py++;
1401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     while(k > 0u)
1403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {	
1404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Perform the multiply-accumulates */
1405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
1410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k--;
1411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* If the count is not a multiple of 4, compute any remaining MACs here.   
1415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****        ** No loop unrolling is used. */
1416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count % 0x4u;
1417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
1419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Perform the multiply-accumulates */
1421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
1425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
1429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
1432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pIn2;
1433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
1435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
1436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
1438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
1439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       j--;
1441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* The second part of the stage starts here */
1444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* SIMD is not used for the next MAC operations,   
1445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****      * so pointer py is updated to read only one sample at a time */
1446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     py = py + 1u;
1447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   while(blockSize3 > 0)
1449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     {
1450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Accumulator is made zero for every iteration */
1451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       sum = 0;
1452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
1454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       k = count;
1455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       while(k > 0u)
1457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       {
1458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Perform the multiply-accumulates */
1459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
1460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         sum += ((q31_t) * px++ * *py--);
1461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         /* Decrement the loop counter */
1463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****         k--;
1464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       }
1465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Store the result in the accumulator in the destination buffer. */
1467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       *pOut++ = (q15_t) (sum >> 15);
1468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
1470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       px = ++pSrc1;
1471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       py = pSrc2;
1472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the MAC count */
1474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       count--;
1475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       /* Decrement the loop counter */
1477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****       blockSize3--;
1478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     }
1479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     /* set status as ARM_MATH_SUCCESS */
1481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****     status = ARM_MATH_SUCCESS;
1482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   }
1483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   /* Return to application */
1485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c ****   return (status);
1486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** 
1487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** #endif /*     #ifndef UNALIGNED_SUPPORT_DISABLE      */
1488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_partial_fast_q15.c **** }
 2176              	 .loc 1 1488 0
 2177 1250 1846     	 mov r0,r3
 2178 1252 07F52477 	 add r7,r7,#656
 2179              	.LCFI3:
 2180              	 .cfi_def_cfa_offset 8
 2181 1256 BD46     	 mov sp,r7
 2182              	.LCFI4:
 2183              	 .cfi_def_cfa_register 13
 2184              	 
 2185 1258 90BC     	 pop {r4,r7}
 2186              	.LCFI5:
 2187              	 .cfi_restore 7
 2188              	 .cfi_restore 4
 2189              	 .cfi_def_cfa_offset 0
 2190 125a 7047     	 bx lr
 2191              	 .cfi_endproc
 2192              	.LFE139:
 2194              	 .text
 2195              	.Letext0:
 2196              	 .file 3 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2197              	 .file 4 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2198              	 .file 5 "C:\\Workspaces\\DAVE-4.1\\Flightcontroller_PWM_CopterRocks_Working\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_partial_fast_q15.c
    {standard input}:20     .text.arm_conv_partial_fast_q15:00000000 $t
    {standard input}:25     .text.arm_conv_partial_fast_q15:00000000 arm_conv_partial_fast_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
