   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_lms_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.clip_q63_to_q31,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	clip_q63_to_q31:
  25              	.LFB106:
  26              	 .file 1 "C:\\Workspaces\\DAVE-4.1\\Flightcontroller_PWM_CopterRocks_Working\\Dave\\Generated/CMSIS_DSP/arm_math.h"
   1:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
   3:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   4:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Date:        20. October 2015
   5:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Revision:    V1.4.5 b
   6:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   7:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * Project:      CMSIS DSP Library
   8:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * Title:        arm_math.h
   9:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  10:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * Description:  Public header file for CMSIS DSP Library
  11:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  12:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  14:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * modification, are permitted provided that the following conditions
  16:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * are met:
  17:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *     the documentation and/or other materials provided with the
  22:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *     distribution.
  23:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *     may be used to endorse or promote products derived from this
  25:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *     software without specific prior written permission.
  26:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  27:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  40:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
  41:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
  42:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  44:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  45:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  46:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  47:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  52:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  53:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  54:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  55:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  56:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  57:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  58:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  59:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  60:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  61:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  62:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  65:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  66:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  67:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  68:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  84:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  90:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Examples
  91:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * --------
  92:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  93:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  95:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  96:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  97:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  98:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  99:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 101:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
 102:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 103:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvprojx
 106:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 107:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 108:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 109:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 110:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 111:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 112:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 114:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 131:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 132:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 136:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 137:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 138:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 139:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 140:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 141:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 142:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 143:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 144:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 145:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 146:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 147:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 148:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 149:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 150:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 151:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 152:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 153:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 154:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 155:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 156:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 157:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 158:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 159:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 160:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 161:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 162:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 163:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 164:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 165:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 166:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 167:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 168:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 169:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 170:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 171:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 172:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 173:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 174:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 175:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 176:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 177:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 178:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 179:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 180:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 181:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 182:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 183:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 184:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 185:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * real values.
 186:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 187:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 188:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 189:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 190:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 191:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 192:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 193:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 194:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 195:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 196:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 197:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * the type
 198:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 199:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * below:
 200:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 201:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 202:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     {
 203:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 206:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 207:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 208:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 209:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 210:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 211:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 213:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 214:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 215:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 216:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 217:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 218:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 219:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 220:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 221:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 222:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 223:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 224:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 225:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par
 226:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 227:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 228:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 229:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 230:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 231:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 232:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 233:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 234:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 235:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 236:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 237:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data array.
 238:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 239:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 240:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 241:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 242:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 243:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 244:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 245:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 246:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 247:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 248:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 249:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 250:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 251:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 252:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 253:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 254:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 255:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 256:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 257:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 258:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 259:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 260:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 261:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 262:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 263:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 264:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 265:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 266:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 267:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 268:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 269:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 270:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 271:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 272:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 273:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 274:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 275:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 276:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 277:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 278:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 279:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 280:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 281:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 282:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 283:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 284:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 285:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 286:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 287:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 288:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 289:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 290:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 291:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** /* ignore some GCC warnings */
 292:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined ( __GNUC__ )
 293:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic push
 294:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 295:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 296:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 297:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 298:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 299:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 300:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 301:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 302:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 303:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 304:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 305:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 306:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 307:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 308:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 309:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 310:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 311:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0plus.h"
 312:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 313:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 314:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 315:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 316:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 317:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 318:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 319:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 320:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifdef   __cplusplus
 321:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** extern "C"
 322:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** {
 323:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 324:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 325:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 326:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 327:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 328:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 329:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 330:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31          (0x100)
 331:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15          0x5
 332:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK         0x0000003F
 333:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 334:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define PI                 3.14159265358979f
 335:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 336:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 337:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 338:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 339:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 340:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 341:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 342:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 343:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 344:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 345:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SIZE  256
 346:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 347:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 348:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 349:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 350:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 351:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 352:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 353:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 354:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING         0xB60B61
 355:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 356:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 357:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 358:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 359:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 360:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 361:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 362:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 363:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 364:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #else
 365:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 366:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #endif
 367:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 368:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 369:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 370:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 371:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 372:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 373:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 374:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 375:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 376:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 377:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 378:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 379:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 380:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 381:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 382:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 383:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 384:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 385:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 386:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 387:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 388:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 389:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 390:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 391:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 392:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 393:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 394:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 395:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 396:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 397:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 398:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 399:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 400:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 401:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 402:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 403:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 404:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 405:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 406:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 407:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 408:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 409:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 410:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 411:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 412:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 413:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 414:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 415:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 416:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 417:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined __CC_ARM
 418:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 419:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 420:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 421:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 422:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 423:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 424:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 425:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __GNUC__
 426:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 428:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 429:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __ICCARM__
 430:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 431:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 432:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 433:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __CSMC__
 434:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE int32_t
 435:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 436:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 437:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __TASKING__
 438:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 439:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define CMSIS_UNUSED
 440:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 441:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 442:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   #error Unknown compiler
 443:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 444:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 445:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 446:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 447:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 448:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 449:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 450:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 451:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 452:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 453:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 454:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 455:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 456:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 457:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 458:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 459:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 460:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 461:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 462:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    /**
 463:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 464:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 465:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 466:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 467:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 468:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 469:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 470:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 471:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 472:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 473:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 474:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 475:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 476:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 477:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 478:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 479:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 480:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 481:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 482:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 483:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 484:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 485:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 486:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
  27              	 .loc 1 486 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B003 	 push {r4,r5,r7,r8,r9}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 20
  35              	 .cfi_offset 4,-20
  36              	 .cfi_offset 5,-16
  37              	 .cfi_offset 7,-12
  38              	 .cfi_offset 8,-8
  39              	 .cfi_offset 9,-4
  40 0004 83B0     	 sub sp,sp,#12
  41              	.LCFI1:
  42              	 .cfi_def_cfa_offset 32
  43 0006 00AF     	 add r7,sp,#0
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 7
  46 0008 C7E90001 	 strd r0,[r7]
 487:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
  47              	 .loc 1 487 0
  48 000c D7E90023 	 ldrd r2,[r7]
  49 0010 9846     	 mov r8,r3
  50 0012 4FEAE379 	 asr r9,r3,#31
  51 0016 4246     	 mov r2,r8
  52 0018 3B68     	 ldr r3,[r7]
  53 001a DB17     	 asrs r3,r3,#31
 488:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  54              	 .loc 1 488 0
  55 001c 9A42     	 cmp r2,r3
  56 001e 08D0     	 beq .L2
  57              	 .loc 1 488 0 is_stmt 0 discriminator 1
  58 0020 D7E90023 	 ldrd r2,[r7]
  59 0024 DC17     	 asrs r4,r3,#31
  60 0026 DD17     	 asrs r5,r3,#31
  61 0028 2346     	 mov r3,r4
  62 002a 83F00043 	 eor r3,r3,#-2147483648
  63 002e DB43     	 mvns r3,r3
  64 0030 00E0     	 b .L3
  65              	.L2:
  66              	 .loc 1 488 0 discriminator 2
  67 0032 3B68     	 ldr r3,[r7]
  68              	.L3:
 489:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
  69              	 .loc 1 489 0 is_stmt 1
  70 0034 1846     	 mov r0,r3
  71 0036 0C37     	 adds r7,r7,#12
  72              	.LCFI3:
  73              	 .cfi_def_cfa_offset 20
  74 0038 BD46     	 mov sp,r7
  75              	.LCFI4:
  76              	 .cfi_def_cfa_register 13
  77              	 
  78 003a BDE8B003 	 pop {r4,r5,r7,r8,r9}
  79              	.LCFI5:
  80              	 .cfi_restore 9
  81              	 .cfi_restore 8
  82              	 .cfi_restore 7
  83              	 .cfi_restore 5
  84              	 .cfi_restore 4
  85              	 .cfi_def_cfa_offset 0
  86 003e 7047     	 bx lr
  87              	 .cfi_endproc
  88              	.LFE106:
  90              	 .section .text.arm_lms_q31,"ax",%progbits
  91              	 .align 2
  92              	 .global arm_lms_q31
  93              	 .thumb
  94              	 .thumb_func
  96              	arm_lms_q31:
  97              	.LFB139:
  98              	 .file 2 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Title:	    arm_lms_q31.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Description:	Processing function for the Q31 LMS filter.    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** /**    
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @ingroup groupFilters    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  */
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** /**    
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @addtogroup LMS    
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @{    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  */
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  /**    
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @brief Processing function for Q31 LMS filter.    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  *S points to an instance of the Q15 LMS filter structure.    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  *pSrc points to the block of input data.    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  *pRef points to the block of reference data.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[out] *pOut points to the block of output data.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[out] *pErr points to the block of error data.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  blockSize number of samples to process.    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @return     none.    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * \par Scaling and Overflow Behavior:     
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The function is implemented using an internal 64-bit accumulator.     
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * multiplication results but provides only a single guard bit.     
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * Thus, if the accumulator result overflows it wraps around rather than clips.     
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * log2(numTaps) bits.     
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The reference signal should not be scaled down.     
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * After all multiply-accumulates are performed, the 2.62 accumulator is shifted    
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * and saturated to 1.31 format to yield the final result.     
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The output signal and error signal are in 1.31 format.     
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  *    
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * \par    
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * 	In this filter, filter coefficients are updated for each sample and the updation of filter coff
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  */
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** void arm_lms_q31(
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   const arm_lms_instance_q31 * S,
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pSrc,
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pRef,
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pOut,
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pErr,
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t blockSize)
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** {
  99              	 .loc 2 84 0
 100              	 .cfi_startproc
 101              	 
 102              	 
 103 0000 2DE9B04F 	 push {r4,r5,r7,r8,r9,r10,fp,lr}
 104              	.LCFI6:
 105              	 .cfi_def_cfa_offset 32
 106              	 .cfi_offset 4,-32
 107              	 .cfi_offset 5,-28
 108              	 .cfi_offset 7,-24
 109              	 .cfi_offset 8,-20
 110              	 .cfi_offset 9,-16
 111              	 .cfi_offset 10,-12
 112              	 .cfi_offset 11,-8
 113              	 .cfi_offset 14,-4
 114 0004 A0B0     	 sub sp,sp,#128
 115              	.LCFI7:
 116              	 .cfi_def_cfa_offset 160
 117 0006 00AF     	 add r7,sp,#0
 118              	.LCFI8:
 119              	 .cfi_def_cfa_register 7
 120 0008 7863     	 str r0,[r7,#52]
 121 000a 3963     	 str r1,[r7,#48]
 122 000c FA62     	 str r2,[r7,#44]
 123 000e BB62     	 str r3,[r7,#40]
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pState = S->pState;                     /* State pointer */
 124              	 .loc 2 85 0
 125 0010 7B6B     	 ldr r3,[r7,#52]
 126 0012 5B68     	 ldr r3,[r3,#4]
 127 0014 FB67     	 str r3,[r7,#124]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
 128              	 .loc 2 86 0
 129 0016 7B6B     	 ldr r3,[r7,#52]
 130 0018 1B88     	 ldrh r3,[r3]
 131 001a FB65     	 str r3,[r7,#92]
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
 132              	 .loc 2 87 0
 133 001c 7B6B     	 ldr r3,[r7,#52]
 134 001e 9B68     	 ldr r3,[r3,#8]
 135 0020 BB65     	 str r3,[r7,#88]
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pStateCurnt;                            /* Points to the current sample of the state */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t mu = S->mu;                              /* Adaptive factor */
 136              	 .loc 2 89 0
 137 0022 7B6B     	 ldr r3,[r7,#52]
 138 0024 DB68     	 ldr r3,[r3,#12]
 139 0026 7B65     	 str r3,[r7,#84]
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *px;                                     /* Temporary pointer for state */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pb;                                     /* Temporary pointer for coefficient buffer */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t tapCnt, blkCnt;                       /* Loop counters */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q63_t acc;                                     /* Accumulator */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t e = 0;                                   /* error of data sample */
 140              	 .loc 2 94 0
 141 0028 0023     	 movs r3,#0
 142 002a 3B65     	 str r3,[r7,#80]
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t alpha;                                   /* Intermediate constant for taps update */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t coef;                                    /* Temporary variable for coef */
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t acc_l, acc_h;                            /*  temporary input */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t uShift = ((uint32_t) S->postShift + 1u);
 143              	 .loc 2 98 0
 144 002c 7B6B     	 ldr r3,[r7,#52]
 145 002e 1B69     	 ldr r3,[r3,#16]
 146 0030 0133     	 adds r3,r3,#1
 147 0032 FB64     	 str r3,[r7,#76]
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t lShift = 32u - uShift;                /*  Shift to be applied to the output */
 148              	 .loc 2 99 0
 149 0034 FB6C     	 ldr r3,[r7,#76]
 150 0036 C3F12003 	 rsb r3,r3,#32
 151 003a BB64     	 str r3,[r7,#72]
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* pStateCurnt points to the location where the new input data should be written */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   pStateCurnt = &(S->pState[(numTaps - 1u)]);
 152              	 .loc 2 103 0
 153 003c 7B6B     	 ldr r3,[r7,#52]
 154 003e 5A68     	 ldr r2,[r3,#4]
 155 0040 FB6D     	 ldr r3,[r7,#92]
 156 0042 03F18043 	 add r3,r3,#1073741824
 157 0046 013B     	 subs r3,r3,#1
 158 0048 9B00     	 lsls r3,r3,#2
 159 004a 1344     	 add r3,r3,r2
 160 004c BB67     	 str r3,[r7,#120]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Initializing blkCnt with blockSize */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   blkCnt = blockSize;
 161              	 .loc 2 106 0
 162 004e D7F8A430 	 ldr r3,[r7,#164]
 163 0052 BB66     	 str r3,[r7,#104]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(blkCnt > 0u)
 164              	 .loc 2 113 0
 165 0054 12E2     	 b .L6
 166              	.L15:
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Copy the new input sample into the state buffer */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pSrc++;
 167              	 .loc 2 116 0
 168 0056 B96F     	 ldr r1,[r7,#120]
 169 0058 0B1D     	 adds r3,r1,#4
 170 005a BB67     	 str r3,[r7,#120]
 171 005c 3A6B     	 ldr r2,[r7,#48]
 172 005e 131D     	 adds r3,r2,#4
 173 0060 3B63     	 str r3,[r7,#48]
 174 0062 1368     	 ldr r3,[r2]
 175 0064 0B60     	 str r3,[r1]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize state pointer */
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState;
 176              	 .loc 2 119 0
 177 0066 FB6F     	 ldr r3,[r7,#124]
 178 0068 7B67     	 str r3,[r7,#116]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize coefficient pointer */
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 179              	 .loc 2 122 0
 180 006a BB6D     	 ldr r3,[r7,#88]
 181 006c 3B67     	 str r3,[r7,#112]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Set the accumulator to zero */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = 0;
 182              	 .loc 2 125 0
 183 006e 4FF00002 	 mov r2,#0
 184 0072 4FF00003 	 mov r3,#0
 185 0076 C7E91823 	 strd r2,[r7,#96]
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps >> 2;
 186              	 .loc 2 128 0
 187 007a FB6D     	 ldr r3,[r7,#92]
 188 007c 9B08     	 lsrs r3,r3,#2
 189 007e FB66     	 str r3,[r7,#108]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 190              	 .loc 2 130 0
 191 0080 7AE0     	 b .L7
 192              	.L8:
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N] * x[n-N] */
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 193              	 .loc 2 134 0
 194 0082 7A6F     	 ldr r2,[r7,#116]
 195 0084 131D     	 adds r3,r2,#4
 196 0086 7B67     	 str r3,[r7,#116]
 197 0088 1368     	 ldr r3,[r2]
 198 008a 1C46     	 mov r4,r3
 199 008c 4FEAE475 	 asr r5,r4,#31
 200 0090 3A6F     	 ldr r2,[r7,#112]
 201 0092 131D     	 adds r3,r2,#4
 202 0094 3B67     	 str r3,[r7,#112]
 203 0096 1368     	 ldr r3,[r2]
 204 0098 1A46     	 mov r2,r3
 205 009a 4FEAE273 	 asr r3,r2,#31
 206 009e 02FB05F0 	 mul r0,r2,r5
 207 00a2 04FB03F1 	 mul r1,r4,r3
 208 00a6 0144     	 add r1,r1,r0
 209 00a8 A4FB0245 	 umull r4,r5,r4,r2
 210 00ac 4B19     	 adds r3,r1,r5
 211 00ae 1D46     	 mov r5,r3
 212 00b0 D7E91823 	 ldrd r2,[r7,#96]
 213 00b4 1219     	 adds r2,r2,r4
 214 00b6 43EB0503 	 adc r3,r3,r5
 215 00ba C7E91823 	 strd r2,[r7,#96]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N-1] * x[n-N-1] */
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 216              	 .loc 2 137 0
 217 00be 7A6F     	 ldr r2,[r7,#116]
 218 00c0 131D     	 adds r3,r2,#4
 219 00c2 7B67     	 str r3,[r7,#116]
 220 00c4 1368     	 ldr r3,[r2]
 221 00c6 1C46     	 mov r4,r3
 222 00c8 4FEAE475 	 asr r5,r4,#31
 223 00cc 3A6F     	 ldr r2,[r7,#112]
 224 00ce 131D     	 adds r3,r2,#4
 225 00d0 3B67     	 str r3,[r7,#112]
 226 00d2 1368     	 ldr r3,[r2]
 227 00d4 1A46     	 mov r2,r3
 228 00d6 4FEAE273 	 asr r3,r2,#31
 229 00da 02FB05F0 	 mul r0,r2,r5
 230 00de 04FB03F1 	 mul r1,r4,r3
 231 00e2 0144     	 add r1,r1,r0
 232 00e4 A4FB0245 	 umull r4,r5,r4,r2
 233 00e8 4B19     	 adds r3,r1,r5
 234 00ea 1D46     	 mov r5,r3
 235 00ec D7E91823 	 ldrd r2,[r7,#96]
 236 00f0 1219     	 adds r2,r2,r4
 237 00f2 43EB0503 	 adc r3,r3,r5
 238 00f6 C7E91823 	 strd r2,[r7,#96]
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N-2] * x[n-N-2] */
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 239              	 .loc 2 140 0
 240 00fa 7A6F     	 ldr r2,[r7,#116]
 241 00fc 131D     	 adds r3,r2,#4
 242 00fe 7B67     	 str r3,[r7,#116]
 243 0100 1368     	 ldr r3,[r2]
 244 0102 1C46     	 mov r4,r3
 245 0104 4FEAE475 	 asr r5,r4,#31
 246 0108 3A6F     	 ldr r2,[r7,#112]
 247 010a 131D     	 adds r3,r2,#4
 248 010c 3B67     	 str r3,[r7,#112]
 249 010e 1368     	 ldr r3,[r2]
 250 0110 1A46     	 mov r2,r3
 251 0112 4FEAE273 	 asr r3,r2,#31
 252 0116 02FB05F0 	 mul r0,r2,r5
 253 011a 04FB03F1 	 mul r1,r4,r3
 254 011e 0144     	 add r1,r1,r0
 255 0120 A4FB0245 	 umull r4,r5,r4,r2
 256 0124 4B19     	 adds r3,r1,r5
 257 0126 1D46     	 mov r5,r3
 258 0128 D7E91823 	 ldrd r2,[r7,#96]
 259 012c 1219     	 adds r2,r2,r4
 260 012e 43EB0503 	 adc r3,r3,r5
 261 0132 C7E91823 	 strd r2,[r7,#96]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N-3] * x[n-N-3] */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 262              	 .loc 2 143 0
 263 0136 7A6F     	 ldr r2,[r7,#116]
 264 0138 131D     	 adds r3,r2,#4
 265 013a 7B67     	 str r3,[r7,#116]
 266 013c 1368     	 ldr r3,[r2]
 267 013e 1C46     	 mov r4,r3
 268 0140 4FEAE475 	 asr r5,r4,#31
 269 0144 3A6F     	 ldr r2,[r7,#112]
 270 0146 131D     	 adds r3,r2,#4
 271 0148 3B67     	 str r3,[r7,#112]
 272 014a 1368     	 ldr r3,[r2]
 273 014c 1A46     	 mov r2,r3
 274 014e 4FEAE273 	 asr r3,r2,#31
 275 0152 02FB05F0 	 mul r0,r2,r5
 276 0156 04FB03F1 	 mul r1,r4,r3
 277 015a 0144     	 add r1,r1,r0
 278 015c A4FB0245 	 umull r4,r5,r4,r2
 279 0160 4B19     	 adds r3,r1,r5
 280 0162 1D46     	 mov r5,r3
 281 0164 D7E91823 	 ldrd r2,[r7,#96]
 282 0168 1219     	 adds r2,r2,r4
 283 016a 43EB0503 	 adc r3,r3,r5
 284 016e C7E91823 	 strd r2,[r7,#96]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 285              	 .loc 2 146 0
 286 0172 FB6E     	 ldr r3,[r7,#108]
 287 0174 013B     	 subs r3,r3,#1
 288 0176 FB66     	 str r3,[r7,#108]
 289              	.L7:
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 290              	 .loc 2 130 0
 291 0178 FB6E     	 ldr r3,[r7,#108]
 292 017a 002B     	 cmp r3,#0
 293 017c 81D1     	 bne .L8
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps % 0x4u;
 294              	 .loc 2 150 0
 295 017e FB6D     	 ldr r3,[r7,#92]
 296 0180 03F00303 	 and r3,r3,#3
 297 0184 FB66     	 str r3,[r7,#108]
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 298              	 .loc 2 152 0
 299 0186 20E0     	 b .L9
 300              	.L10:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 301              	 .loc 2 155 0
 302 0188 7A6F     	 ldr r2,[r7,#116]
 303 018a 131D     	 adds r3,r2,#4
 304 018c 7B67     	 str r3,[r7,#116]
 305 018e 1368     	 ldr r3,[r2]
 306 0190 1C46     	 mov r4,r3
 307 0192 4FEAE475 	 asr r5,r4,#31
 308 0196 3A6F     	 ldr r2,[r7,#112]
 309 0198 131D     	 adds r3,r2,#4
 310 019a 3B67     	 str r3,[r7,#112]
 311 019c 1368     	 ldr r3,[r2]
 312 019e 1A46     	 mov r2,r3
 313 01a0 4FEAE273 	 asr r3,r2,#31
 314 01a4 02FB05F0 	 mul r0,r2,r5
 315 01a8 04FB03F1 	 mul r1,r4,r3
 316 01ac 0144     	 add r1,r1,r0
 317 01ae A4FB0245 	 umull r4,r5,r4,r2
 318 01b2 4B19     	 adds r3,r1,r5
 319 01b4 1D46     	 mov r5,r3
 320 01b6 D7E91823 	 ldrd r2,[r7,#96]
 321 01ba 1219     	 adds r2,r2,r4
 322 01bc 43EB0503 	 adc r3,r3,r5
 323 01c0 C7E91823 	 strd r2,[r7,#96]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 324              	 .loc 2 158 0
 325 01c4 FB6E     	 ldr r3,[r7,#108]
 326 01c6 013B     	 subs r3,r3,#1
 327 01c8 FB66     	 str r3,[r7,#108]
 328              	.L9:
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 329              	 .loc 2 152 0
 330 01ca FB6E     	 ldr r3,[r7,#108]
 331 01cc 002B     	 cmp r3,#0
 332 01ce DBD1     	 bne .L10
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Converting the result to 1.31 format */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc lower part of acc */
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_l = acc & 0xffffffff;
 333              	 .loc 2 163 0
 334 01d0 3B6E     	 ldr r3,[r7,#96]
 335 01d2 7B64     	 str r3,[r7,#68]
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc upper part of acc */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 336              	 .loc 2 166 0
 337 01d4 D7E91823 	 ldrd r2,[r7,#96]
 338 01d8 1B00     	 movs r3,r3
 339 01da 3B62     	 str r3,[r7,#32]
 340 01dc 0023     	 movs r3,#0
 341 01de 7B62     	 str r3,[r7,#36]
 342 01e0 3B6A     	 ldr r3,[r7,#32]
 343 01e2 3B64     	 str r3,[r7,#64]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 344              	 .loc 2 168 0
 345 01e4 7A6C     	 ldr r2,[r7,#68]
 346 01e6 BB6C     	 ldr r3,[r7,#72]
 347 01e8 22FA03F1 	 lsr r1,r2,r3
 348 01ec FA6C     	 ldr r2,[r7,#76]
 349 01ee 3B6C     	 ldr r3,[r7,#64]
 350 01f0 9340     	 lsls r3,r3,r2
 351 01f2 0B43     	 orrs r3,r3,r1
 352 01f4 1A46     	 mov r2,r3
 353 01f6 4FF00003 	 mov r3,#0
 354 01fa C7E91823 	 strd r2,[r7,#96]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pOut++ = (q31_t) acc;
 355              	 .loc 2 171 0
 356 01fe BA6A     	 ldr r2,[r7,#40]
 357 0200 131D     	 adds r3,r2,#4
 358 0202 BB62     	 str r3,[r7,#40]
 359 0204 3B6E     	 ldr r3,[r7,#96]
 360 0206 1360     	 str r3,[r2]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Compute and store error */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     e = *pRef++ - (q31_t) acc;
 361              	 .loc 2 174 0
 362 0208 FA6A     	 ldr r2,[r7,#44]
 363 020a 131D     	 adds r3,r2,#4
 364 020c FB62     	 str r3,[r7,#44]
 365 020e 1268     	 ldr r2,[r2]
 366 0210 3B6E     	 ldr r3,[r7,#96]
 367 0212 D31A     	 subs r3,r2,r3
 368 0214 3B65     	 str r3,[r7,#80]
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pErr++ = (q31_t) e;
 369              	 .loc 2 176 0
 370 0216 D7F8A020 	 ldr r2,[r7,#160]
 371 021a 131D     	 adds r3,r2,#4
 372 021c C7F8A030 	 str r3,[r7,#160]
 373 0220 3B6D     	 ldr r3,[r7,#80]
 374 0222 1360     	 str r3,[r2]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Compute alpha i.e. intermediate constant for taps update */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     alpha = (q31_t) (((q63_t) e * mu) >> 31);
 375              	 .loc 2 179 0
 376 0224 3B6D     	 ldr r3,[r7,#80]
 377 0226 1846     	 mov r0,r3
 378 0228 4FEAE071 	 asr r1,r0,#31
 379 022c 7B6D     	 ldr r3,[r7,#84]
 380 022e 1A46     	 mov r2,r3
 381 0230 4FEAE273 	 asr r3,r2,#31
 382 0234 02FB01F5 	 mul r5,r2,r1
 383 0238 00FB03F4 	 mul r4,r0,r3
 384 023c 2C44     	 add r4,r4,r5
 385 023e A0FB0223 	 umull r2,r3,r0,r2
 386 0242 E118     	 adds r1,r4,r3
 387 0244 0B46     	 mov r3,r1
 388 0246 4FEAD278 	 lsr r8,r2,#31
 389 024a 48EA4308 	 orr r8,r8,r3,lsl#1
 390 024e 4FEAE379 	 asr r9,r3,#31
 391 0252 4346     	 mov r3,r8
 392 0254 FB63     	 str r3,[r7,#60]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize state pointer */
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Advance state pointer by 1 for the next sample */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState++;
 393              	 .loc 2 183 0
 394 0256 FA6F     	 ldr r2,[r7,#124]
 395 0258 131D     	 adds r3,r2,#4
 396 025a FB67     	 str r3,[r7,#124]
 397 025c 7A67     	 str r2,[r7,#116]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize coefficient pointer */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 398              	 .loc 2 186 0
 399 025e BB6D     	 ldr r3,[r7,#88]
 400 0260 3B67     	 str r3,[r7,#112]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps >> 2;
 401              	 .loc 2 189 0
 402 0262 FB6D     	 ldr r3,[r7,#92]
 403 0264 9B08     	 lsrs r3,r3,#2
 404 0266 FB66     	 str r3,[r7,#108]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Update filter coefficients */
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 405              	 .loc 2 192 0
 406 0268 C5E0     	 b .L11
 407              	.L12:
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* coef is in 2.30 format */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 408              	 .loc 2 195 0
 409 026a FB6B     	 ldr r3,[r7,#60]
 410 026c 1C46     	 mov r4,r3
 411 026e 4FEAE475 	 asr r5,r4,#31
 412 0272 7A6F     	 ldr r2,[r7,#116]
 413 0274 131D     	 adds r3,r2,#4
 414 0276 7B67     	 str r3,[r7,#116]
 415 0278 1368     	 ldr r3,[r2]
 416 027a 1A46     	 mov r2,r3
 417 027c 4FEAE273 	 asr r3,r2,#31
 418 0280 02FB05F0 	 mul r0,r2,r5
 419 0284 04FB03F1 	 mul r1,r4,r3
 420 0288 0144     	 add r1,r1,r0
 421 028a A4FB0223 	 umull r2,r3,r4,r2
 422 028e 1944     	 add r1,r1,r3
 423 0290 0B46     	 mov r3,r1
 424 0292 9A46     	 mov r10,r3
 425 0294 4FEAE37B 	 asr fp,r3,#31
 426 0298 5346     	 mov r3,r10
 427 029a BB63     	 str r3,[r7,#56]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* get coef in 1.31 format by left shifting */
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 428              	 .loc 2 197 0
 429 029c 3B6F     	 ldr r3,[r7,#112]
 430 029e 1B68     	 ldr r3,[r3]
 431 02a0 1846     	 mov r0,r3
 432 02a2 4FEAE071 	 asr r1,r0,#31
 433 02a6 BB6B     	 ldr r3,[r7,#56]
 434 02a8 5B00     	 lsls r3,r3,#1
 435 02aa 1A46     	 mov r2,r3
 436 02ac 4FEAE273 	 asr r3,r2,#31
 437 02b0 1218     	 adds r2,r2,r0
 438 02b2 43EB0103 	 adc r3,r3,r1
 439 02b6 1046     	 mov r0,r2
 440 02b8 1946     	 mov r1,r3
 441 02ba FFF7FEFF 	 bl clip_q63_to_q31
 442 02be 0246     	 mov r2,r0
 443 02c0 3B6F     	 ldr r3,[r7,#112]
 444 02c2 1A60     	 str r2,[r3]
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* update coefficient buffer to next coefficient */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 445              	 .loc 2 199 0
 446 02c4 3B6F     	 ldr r3,[r7,#112]
 447 02c6 0433     	 adds r3,r3,#4
 448 02c8 3B67     	 str r3,[r7,#112]
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 449              	 .loc 2 201 0
 450 02ca FB6B     	 ldr r3,[r7,#60]
 451 02cc 1C46     	 mov r4,r3
 452 02ce 4FEAE475 	 asr r5,r4,#31
 453 02d2 7A6F     	 ldr r2,[r7,#116]
 454 02d4 131D     	 adds r3,r2,#4
 455 02d6 7B67     	 str r3,[r7,#116]
 456 02d8 1368     	 ldr r3,[r2]
 457 02da 1A46     	 mov r2,r3
 458 02dc 4FEAE273 	 asr r3,r2,#31
 459 02e0 02FB05F0 	 mul r0,r2,r5
 460 02e4 04FB03F1 	 mul r1,r4,r3
 461 02e8 0144     	 add r1,r1,r0
 462 02ea A4FB0223 	 umull r2,r3,r4,r2
 463 02ee 1944     	 add r1,r1,r3
 464 02f0 0B46     	 mov r3,r1
 465 02f2 1900     	 movs r1,r3
 466 02f4 B961     	 str r1,[r7,#24]
 467 02f6 DB17     	 asrs r3,r3,#31
 468 02f8 FB61     	 str r3,[r7,#28]
 469 02fa BB69     	 ldr r3,[r7,#24]
 470 02fc BB63     	 str r3,[r7,#56]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 471              	 .loc 2 202 0
 472 02fe 3B6F     	 ldr r3,[r7,#112]
 473 0300 1B68     	 ldr r3,[r3]
 474 0302 1846     	 mov r0,r3
 475 0304 4FEAE071 	 asr r1,r0,#31
 476 0308 BB6B     	 ldr r3,[r7,#56]
 477 030a 5B00     	 lsls r3,r3,#1
 478 030c 1A46     	 mov r2,r3
 479 030e 4FEAE273 	 asr r3,r2,#31
 480 0312 1218     	 adds r2,r2,r0
 481 0314 43EB0103 	 adc r3,r3,r1
 482 0318 1046     	 mov r0,r2
 483 031a 1946     	 mov r1,r3
 484 031c FFF7FEFF 	 bl clip_q63_to_q31
 485 0320 0246     	 mov r2,r0
 486 0322 3B6F     	 ldr r3,[r7,#112]
 487 0324 1A60     	 str r2,[r3]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 488              	 .loc 2 203 0
 489 0326 3B6F     	 ldr r3,[r7,#112]
 490 0328 0433     	 adds r3,r3,#4
 491 032a 3B67     	 str r3,[r7,#112]
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 492              	 .loc 2 205 0
 493 032c FB6B     	 ldr r3,[r7,#60]
 494 032e 1C46     	 mov r4,r3
 495 0330 4FEAE475 	 asr r5,r4,#31
 496 0334 7A6F     	 ldr r2,[r7,#116]
 497 0336 131D     	 adds r3,r2,#4
 498 0338 7B67     	 str r3,[r7,#116]
 499 033a 1368     	 ldr r3,[r2]
 500 033c 1A46     	 mov r2,r3
 501 033e 4FEAE273 	 asr r3,r2,#31
 502 0342 02FB05F0 	 mul r0,r2,r5
 503 0346 04FB03F1 	 mul r1,r4,r3
 504 034a 0144     	 add r1,r1,r0
 505 034c A4FB0223 	 umull r2,r3,r4,r2
 506 0350 1944     	 add r1,r1,r3
 507 0352 0B46     	 mov r3,r1
 508 0354 1900     	 movs r1,r3
 509 0356 3961     	 str r1,[r7,#16]
 510 0358 DB17     	 asrs r3,r3,#31
 511 035a 7B61     	 str r3,[r7,#20]
 512 035c 3B69     	 ldr r3,[r7,#16]
 513 035e BB63     	 str r3,[r7,#56]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 514              	 .loc 2 206 0
 515 0360 3B6F     	 ldr r3,[r7,#112]
 516 0362 1B68     	 ldr r3,[r3]
 517 0364 1846     	 mov r0,r3
 518 0366 4FEAE071 	 asr r1,r0,#31
 519 036a BB6B     	 ldr r3,[r7,#56]
 520 036c 5B00     	 lsls r3,r3,#1
 521 036e 1A46     	 mov r2,r3
 522 0370 4FEAE273 	 asr r3,r2,#31
 523 0374 1218     	 adds r2,r2,r0
 524 0376 43EB0103 	 adc r3,r3,r1
 525 037a 1046     	 mov r0,r2
 526 037c 1946     	 mov r1,r3
 527 037e FFF7FEFF 	 bl clip_q63_to_q31
 528 0382 0246     	 mov r2,r0
 529 0384 3B6F     	 ldr r3,[r7,#112]
 530 0386 1A60     	 str r2,[r3]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 531              	 .loc 2 207 0
 532 0388 3B6F     	 ldr r3,[r7,#112]
 533 038a 0433     	 adds r3,r3,#4
 534 038c 3B67     	 str r3,[r7,#112]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 535              	 .loc 2 209 0
 536 038e FB6B     	 ldr r3,[r7,#60]
 537 0390 1C46     	 mov r4,r3
 538 0392 4FEAE475 	 asr r5,r4,#31
 539 0396 7A6F     	 ldr r2,[r7,#116]
 540 0398 131D     	 adds r3,r2,#4
 541 039a 7B67     	 str r3,[r7,#116]
 542 039c 1368     	 ldr r3,[r2]
 543 039e 1A46     	 mov r2,r3
 544 03a0 4FEAE273 	 asr r3,r2,#31
 545 03a4 02FB05F0 	 mul r0,r2,r5
 546 03a8 04FB03F1 	 mul r1,r4,r3
 547 03ac 0144     	 add r1,r1,r0
 548 03ae A4FB0223 	 umull r2,r3,r4,r2
 549 03b2 1944     	 add r1,r1,r3
 550 03b4 0B46     	 mov r3,r1
 551 03b6 1900     	 movs r1,r3
 552 03b8 B960     	 str r1,[r7,#8]
 553 03ba DB17     	 asrs r3,r3,#31
 554 03bc FB60     	 str r3,[r7,#12]
 555 03be BB68     	 ldr r3,[r7,#8]
 556 03c0 BB63     	 str r3,[r7,#56]
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 557              	 .loc 2 210 0
 558 03c2 3B6F     	 ldr r3,[r7,#112]
 559 03c4 1B68     	 ldr r3,[r3]
 560 03c6 1846     	 mov r0,r3
 561 03c8 4FEAE071 	 asr r1,r0,#31
 562 03cc BB6B     	 ldr r3,[r7,#56]
 563 03ce 5B00     	 lsls r3,r3,#1
 564 03d0 1A46     	 mov r2,r3
 565 03d2 4FEAE273 	 asr r3,r2,#31
 566 03d6 1218     	 adds r2,r2,r0
 567 03d8 43EB0103 	 adc r3,r3,r1
 568 03dc 1046     	 mov r0,r2
 569 03de 1946     	 mov r1,r3
 570 03e0 FFF7FEFF 	 bl clip_q63_to_q31
 571 03e4 0246     	 mov r2,r0
 572 03e6 3B6F     	 ldr r3,[r7,#112]
 573 03e8 1A60     	 str r2,[r3]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 574              	 .loc 2 211 0
 575 03ea 3B6F     	 ldr r3,[r7,#112]
 576 03ec 0433     	 adds r3,r3,#4
 577 03ee 3B67     	 str r3,[r7,#112]
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 578              	 .loc 2 214 0
 579 03f0 FB6E     	 ldr r3,[r7,#108]
 580 03f2 013B     	 subs r3,r3,#1
 581 03f4 FB66     	 str r3,[r7,#108]
 582              	.L11:
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 583              	 .loc 2 192 0
 584 03f6 FB6E     	 ldr r3,[r7,#108]
 585 03f8 002B     	 cmp r3,#0
 586 03fa 7FF436AF 	 bne .L12
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps % 0x4u;
 587              	 .loc 2 218 0
 588 03fe FB6D     	 ldr r3,[r7,#92]
 589 0400 03F00303 	 and r3,r3,#3
 590 0404 FB66     	 str r3,[r7,#108]
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 591              	 .loc 2 220 0
 592 0406 33E0     	 b .L13
 593              	.L14:
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 594              	 .loc 2 223 0
 595 0408 FB6B     	 ldr r3,[r7,#60]
 596 040a 1C46     	 mov r4,r3
 597 040c 4FEAE475 	 asr r5,r4,#31
 598 0410 7A6F     	 ldr r2,[r7,#116]
 599 0412 131D     	 adds r3,r2,#4
 600 0414 7B67     	 str r3,[r7,#116]
 601 0416 1368     	 ldr r3,[r2]
 602 0418 1A46     	 mov r2,r3
 603 041a 4FEAE273 	 asr r3,r2,#31
 604 041e 02FB05F0 	 mul r0,r2,r5
 605 0422 04FB03F1 	 mul r1,r4,r3
 606 0426 0144     	 add r1,r1,r0
 607 0428 A4FB0223 	 umull r2,r3,r4,r2
 608 042c 1944     	 add r1,r1,r3
 609 042e 0B46     	 mov r3,r1
 610 0430 1900     	 movs r1,r3
 611 0432 3960     	 str r1,[r7]
 612 0434 DB17     	 asrs r3,r3,#31
 613 0436 7B60     	 str r3,[r7,#4]
 614 0438 3B68     	 ldr r3,[r7]
 615 043a BB63     	 str r3,[r7,#56]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 616              	 .loc 2 224 0
 617 043c 3B6F     	 ldr r3,[r7,#112]
 618 043e 1B68     	 ldr r3,[r3]
 619 0440 1846     	 mov r0,r3
 620 0442 4FEAE071 	 asr r1,r0,#31
 621 0446 BB6B     	 ldr r3,[r7,#56]
 622 0448 5B00     	 lsls r3,r3,#1
 623 044a 1A46     	 mov r2,r3
 624 044c 4FEAE273 	 asr r3,r2,#31
 625 0450 1218     	 adds r2,r2,r0
 626 0452 43EB0103 	 adc r3,r3,r1
 627 0456 1046     	 mov r0,r2
 628 0458 1946     	 mov r1,r3
 629 045a FFF7FEFF 	 bl clip_q63_to_q31
 630 045e 0246     	 mov r2,r0
 631 0460 3B6F     	 ldr r3,[r7,#112]
 632 0462 1A60     	 str r2,[r3]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 633              	 .loc 2 225 0
 634 0464 3B6F     	 ldr r3,[r7,#112]
 635 0466 0433     	 adds r3,r3,#4
 636 0468 3B67     	 str r3,[r7,#112]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 637              	 .loc 2 228 0
 638 046a FB6E     	 ldr r3,[r7,#108]
 639 046c 013B     	 subs r3,r3,#1
 640 046e FB66     	 str r3,[r7,#108]
 641              	.L13:
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 642              	 .loc 2 220 0
 643 0470 FB6E     	 ldr r3,[r7,#108]
 644 0472 002B     	 cmp r3,#0
 645 0474 C8D1     	 bne .L14
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     blkCnt--;
 646              	 .loc 2 232 0
 647 0476 BB6E     	 ldr r3,[r7,#104]
 648 0478 013B     	 subs r3,r3,#1
 649 047a BB66     	 str r3,[r7,#104]
 650              	.L6:
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 651              	 .loc 2 113 0
 652 047c BB6E     	 ldr r3,[r7,#104]
 653 047e 002B     	 cmp r3,#0
 654 0480 7FF4E9AD 	 bne .L15
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the    
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      satrt of the state buffer. This prepares the state buffer for the    
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      next function call. */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Points to the start of the pState buffer */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   pStateCurnt = S->pState;
 655              	 .loc 2 240 0
 656 0484 7B6B     	 ldr r3,[r7,#52]
 657 0486 5B68     	 ldr r3,[r3,#4]
 658 0488 BB67     	 str r3,[r7,#120]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Loop unrolling for (numTaps - 1u) samples copy */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   tapCnt = (numTaps - 1u) >> 2u;
 659              	 .loc 2 243 0
 660 048a FB6D     	 ldr r3,[r7,#92]
 661 048c 013B     	 subs r3,r3,#1
 662 048e 9B08     	 lsrs r3,r3,#2
 663 0490 FB66     	 str r3,[r7,#108]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* copy data */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(tapCnt > 0u)
 664              	 .loc 2 246 0
 665 0492 22E0     	 b .L16
 666              	.L17:
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 667              	 .loc 2 248 0
 668 0494 BB6F     	 ldr r3,[r7,#120]
 669 0496 1A1D     	 adds r2,r3,#4
 670 0498 BA67     	 str r2,[r7,#120]
 671 049a FA6F     	 ldr r2,[r7,#124]
 672 049c 111D     	 adds r1,r2,#4
 673 049e F967     	 str r1,[r7,#124]
 674 04a0 1268     	 ldr r2,[r2]
 675 04a2 1A60     	 str r2,[r3]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 676              	 .loc 2 249 0
 677 04a4 BB6F     	 ldr r3,[r7,#120]
 678 04a6 1A1D     	 adds r2,r3,#4
 679 04a8 BA67     	 str r2,[r7,#120]
 680 04aa FA6F     	 ldr r2,[r7,#124]
 681 04ac 111D     	 adds r1,r2,#4
 682 04ae F967     	 str r1,[r7,#124]
 683 04b0 1268     	 ldr r2,[r2]
 684 04b2 1A60     	 str r2,[r3]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 685              	 .loc 2 250 0
 686 04b4 BB6F     	 ldr r3,[r7,#120]
 687 04b6 1A1D     	 adds r2,r3,#4
 688 04b8 BA67     	 str r2,[r7,#120]
 689 04ba FA6F     	 ldr r2,[r7,#124]
 690 04bc 111D     	 adds r1,r2,#4
 691 04be F967     	 str r1,[r7,#124]
 692 04c0 1268     	 ldr r2,[r2]
 693 04c2 1A60     	 str r2,[r3]
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 694              	 .loc 2 251 0
 695 04c4 BB6F     	 ldr r3,[r7,#120]
 696 04c6 1A1D     	 adds r2,r3,#4
 697 04c8 BA67     	 str r2,[r7,#120]
 698 04ca FA6F     	 ldr r2,[r7,#124]
 699 04cc 111D     	 adds r1,r2,#4
 700 04ce F967     	 str r1,[r7,#124]
 701 04d0 1268     	 ldr r2,[r2]
 702 04d2 1A60     	 str r2,[r3]
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt--;
 703              	 .loc 2 254 0
 704 04d4 FB6E     	 ldr r3,[r7,#108]
 705 04d6 013B     	 subs r3,r3,#1
 706 04d8 FB66     	 str r3,[r7,#108]
 707              	.L16:
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 708              	 .loc 2 246 0
 709 04da FB6E     	 ldr r3,[r7,#108]
 710 04dc 002B     	 cmp r3,#0
 711 04de D9D1     	 bne .L17
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Calculate remaining number of copies */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   tapCnt = (numTaps - 1u) % 0x4u;
 712              	 .loc 2 258 0
 713 04e0 FB6D     	 ldr r3,[r7,#92]
 714 04e2 013B     	 subs r3,r3,#1
 715 04e4 03F00303 	 and r3,r3,#3
 716 04e8 FB66     	 str r3,[r7,#108]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Copy the remaining q31_t data */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(tapCnt > 0u)
 717              	 .loc 2 261 0
 718 04ea 0AE0     	 b .L18
 719              	.L19:
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 720              	 .loc 2 263 0
 721 04ec BB6F     	 ldr r3,[r7,#120]
 722 04ee 1A1D     	 adds r2,r3,#4
 723 04f0 BA67     	 str r2,[r7,#120]
 724 04f2 FA6F     	 ldr r2,[r7,#124]
 725 04f4 111D     	 adds r1,r2,#4
 726 04f6 F967     	 str r1,[r7,#124]
 727 04f8 1268     	 ldr r2,[r2]
 728 04fa 1A60     	 str r2,[r3]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt--;
 729              	 .loc 2 266 0
 730 04fc FB6E     	 ldr r3,[r7,#108]
 731 04fe 013B     	 subs r3,r3,#1
 732 0500 FB66     	 str r3,[r7,#108]
 733              	.L18:
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 734              	 .loc 2 261 0
 735 0502 FB6E     	 ldr r3,[r7,#108]
 736 0504 002B     	 cmp r3,#0
 737 0506 F1D1     	 bne .L19
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #else
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Run the below code for Cortex-M0 */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(blkCnt > 0u)
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Copy the new input sample into the state buffer */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pSrc++;
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pState pointer */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState;
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pCoeffs pointer */
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Set the accumulator to zero */
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = 0;
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop over numTaps number of values */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps;
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Converting the result to 1.31 format */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc lower part of acc */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_l = acc & 0xffffffff;
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc upper part of acc */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pOut++ = (q31_t) acc;
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Compute and store error */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     e = *pRef++ - (q31_t) acc;
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pErr++ = (q31_t) e;
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Weighting factor for the LMS version */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     alpha = (q31_t) (((q63_t) e * mu) >> 31);
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pState pointer */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Advance state pointer by 1 for the next sample */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState++;
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pCoeffs pointer */
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop over numTaps number of values */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps;
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     blkCnt--;
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the     
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      start of the state buffer. This prepares the state buffer for the   
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      next function call. */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Points to the start of the pState buffer */
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   pStateCurnt = S->pState;
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /*  Copy (numTaps - 1u) samples  */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   tapCnt = (numTaps - 1u);
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Copy the data */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(tapCnt > 0u)
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt--;
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #endif /*   #ifndef ARM_MATH_CM0_FAMILY */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** }
 738              	 .loc 2 365 0
 739 0508 8037     	 adds r7,r7,#128
 740              	.LCFI9:
 741              	 .cfi_def_cfa_offset 32
 742 050a BD46     	 mov sp,r7
 743              	.LCFI10:
 744              	 .cfi_def_cfa_register 13
 745              	 
 746 050c BDE8B08F 	 pop {r4,r5,r7,r8,r9,r10,fp,pc}
 747              	 .cfi_endproc
 748              	.LFE139:
 750              	 .text
 751              	.Letext0:
 752              	 .file 3 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 753              	 .file 4 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_lms_q31.c
    {standard input}:20     .text.clip_q63_to_q31:00000000 $t
    {standard input}:24     .text.clip_q63_to_q31:00000000 clip_q63_to_q31
    {standard input}:91     .text.arm_lms_q31:00000000 $t
    {standard input}:96     .text.arm_lms_q31:00000000 arm_lms_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
