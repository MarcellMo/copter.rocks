   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "AttitudeController.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.NVIC_EnableIRQ,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	NVIC_EnableIRQ:
  25              	.LFB108:
  26              	 .file 1 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V4.30
   5:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  * @date     20. October 2015
   6:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
   9:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    All rights reserved.
  10:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      to endorse or promote products derived from this software without
  19:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      specific prior written permission.
  20:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    *
  21:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  35:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  36:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
  40:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  41:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  45:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  46:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  47:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  48:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
  49:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
  51:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  57:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  59:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  60:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
  63:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  64:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  66:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  67:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  68:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
  69:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  70:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
  71:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
  72:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*  CMSIS CM4 definitions */
  74:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  79:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  81:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  82:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __CC_ARM )
  83:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  87:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  92:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
  93:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
  97:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
  98:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 102:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 103:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 106:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 107:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 111:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 112:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __packed
 113:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 117:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #else
 118:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #error Unknown compiler
 119:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
 120:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 121:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** */
 124:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
 125:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 149:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 161:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 162:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 164:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 165:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 167:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 168:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 169:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 170:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 171:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 172:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 173:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 176:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 177:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 179:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 180:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 181:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 182:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 183:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 184:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 185:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 186:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 188:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 189:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 191:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 192:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 193:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 194:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 195:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 196:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 197:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 200:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #else
 201:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 203:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 204:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #else
 205:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 206:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 207:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 208:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
 209:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 210:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 214:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 215:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** }
 216:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
 217:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 218:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 220:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 222:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 225:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 226:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 227:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
 228:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 230:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 232:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 233:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 235:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 236:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 237:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 238:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 240:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 241:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 242:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 243:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 245:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 246:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 250:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 251:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 255:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
 256:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 257:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 259:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 261:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 263:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** */
 265:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 266:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #else
 268:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
 270:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 273:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 274:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 278:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 279:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 280:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 281:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 282:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 283:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 284:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 285:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 286:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 287:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 288:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 289:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 290:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 291:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 292:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 293:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 294:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** */
 297:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 298:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 299:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 300:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 302:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 303:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 304:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 305:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 306:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 308:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 309:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 310:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   struct
 311:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   {
 312:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 323:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 324:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 325:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 328:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 331:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 334:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 337:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 340:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 343:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 344:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 345:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 347:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 348:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 349:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   struct
 350:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   {
 351:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 356:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 357:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 358:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 361:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 362:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 363:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 365:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 366:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 367:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   struct
 368:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   {
 369:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 383:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 384:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 385:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 388:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 391:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 394:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 397:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 400:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 403:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 406:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 409:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 412:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 413:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 414:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 416:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 417:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 418:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   struct
 419:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   {
 420:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 427:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 428:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 429:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 432:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 435:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 438:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 440:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 441:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 442:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 443:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 446:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 447:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 448:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 449:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 451:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 452:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 453:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 455:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RSERVED1[24U];
 457:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 459:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 461:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 463:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 465:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 467:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 468:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 472:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 474:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 475:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 476:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 477:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 480:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 481:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 482:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 483:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 485:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 486:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 487:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 507:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 509:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 510:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 511:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 514:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 517:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 520:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 523:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 526:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 530:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 533:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 536:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 539:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 542:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 545:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 548:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 551:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 554:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 557:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 561:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 565:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 568:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 571:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 574:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 577:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 580:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 583:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 584:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 587:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 590:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 593:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 597:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 600:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 603:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 606:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 609:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 612:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 616:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 619:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 622:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 625:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 628:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 631:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 634:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 637:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 640:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 643:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 646:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 649:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 652:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 655:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 659:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 662:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 665:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 669:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 672:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 675:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 679:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 682:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 685:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 688:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 691:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 693:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 694:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 695:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 696:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 699:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 700:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 701:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 702:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 704:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 705:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 706:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 707:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 710:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 711:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 715:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 719:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 722:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 725:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 728:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 731:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 733:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 734:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 735:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 736:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 739:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 740:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 741:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 742:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 744:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 745:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 746:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 751:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 752:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 756:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 759:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 762:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 765:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 766:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 769:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 770:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 773:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 777:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 780:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 783:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 785:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 786:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 787:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 788:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 791:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 792:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 793:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 794:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 796:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 797:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 798:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 799:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   {
 800:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 805:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 807:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 809:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[29U];
 811:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 815:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 818:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 831:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 832:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 836:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 840:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 843:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 846:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 849:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 852:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 855:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 858:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 861:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 864:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 868:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 872:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 876:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 880:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 883:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 886:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 888:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 889:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 890:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
 894:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 895:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 896:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
 897:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
 899:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 900:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
 901:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 926:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 930:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 933:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 936:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 939:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 942:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 945:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 948:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 951:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 954:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 957:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 960:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 963:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 966:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 969:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 972:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 975:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 978:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 981:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 985:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 989:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 993:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
 997:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1001:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1005:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1009:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1012:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1015:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1018:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1021:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1024:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1027:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1030:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1033:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1035:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1036:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1037:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1041:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1042:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1043:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1044:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1046:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1047:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
1048:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1074:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1078:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1082:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1086:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1089:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1092:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1095:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1099:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1102:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1106:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1110:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1113:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1116:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1119:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1122:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1125:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1128:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1132:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1136:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1139:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1142:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1145:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1148:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1151:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1154:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1158:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1162:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1163:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1166:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1169:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1172:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1175:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1178:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1181:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1185:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1188:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1190:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1191:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1193:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1194:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1197:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1198:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1199:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1200:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1202:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1203:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
1204:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1216:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1217:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1218:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1221:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1224:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1227:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1228:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1231:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1234:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1237:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1238:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1241:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1245:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1248:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1251:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1255:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1258:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1261:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1264:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1267:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1270:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1273:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1276:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1279:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1282:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
1284:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1285:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1286:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1288:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1289:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1292:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1293:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1294:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1295:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1297:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1298:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
1299:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1300:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1306:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1307:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1311:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1314:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1317:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1320:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1323:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1326:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1329:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1332:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1335:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1339:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1343:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1346:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1349:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1352:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1356:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1359:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1362:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1365:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1368:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1371:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1374:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1377:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1381:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1384:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1387:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1390:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
1392:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1393:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1394:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1395:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1396:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1399:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1400:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1401:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1402:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1404:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1405:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
1406:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1411:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1412:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1416:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1419:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1422:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1425:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1428:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1431:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1434:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1437:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1440:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1443:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1446:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1449:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1453:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1456:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1460:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1463:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1466:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1469:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1472:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1475:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1478:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1481:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1484:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1487:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1490:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1493:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1496:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1498:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1499:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1500:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1501:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1504:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1505:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1506:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1507:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field.
1510:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1511:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** */
1512:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1514:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1515:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register.
1518:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1519:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** */
1520:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1522:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1524:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1525:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1526:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1527:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1530:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1531:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1532:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1542:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1551:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
1555:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1556:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** #endif
1560:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1561:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1562:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1563:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1564:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1565:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1566:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1567:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1568:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1569:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1570:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1571:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1572:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1573:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1574:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** */
1576:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1577:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1578:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1579:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1581:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   @{
1585:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1586:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1587:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1588:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1589:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1592:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1593:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1596:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
1598:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1599:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1601:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** }
1608:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1609:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1610:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1611:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1612:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1615:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
1617:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** }
1619:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1620:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1621:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1622:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable External Interrupt
1623:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1626:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1627 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
1628:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  44              	 .loc 1 1628 0
  45 000a 0849     	 ldr r1,.L2
  46 000c 97F90730 	 ldrsb r3,[r7,#7]
  47 0010 5B09     	 lsrs r3,r3,#5
  48 0012 FA79     	 ldrb r2,[r7,#7]
  49 0014 02F01F02 	 and r2,r2,#31
  50 0018 0120     	 movs r0,#1
  51 001a 00FA02F2 	 lsl r2,r0,r2
  52 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1629:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** }
  53              	 .loc 1 1629 0
  54 0022 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0024 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0026 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 002a 7047     	 bx lr
  66              	.L3:
  67              	 .align 2
  68              	.L2:
  69 002c 00E100E0 	 .word -536813312
  70              	 .cfi_endproc
  71              	.LFE108:
  73              	 .section .text.NVIC_DisableIRQ,"ax",%progbits
  74              	 .align 2
  75              	 .thumb
  76              	 .thumb_func
  78              	NVIC_DisableIRQ:
  79              	.LFB109:
1630:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1631:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** 
1632:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** /**
1633:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable External Interrupt
1634:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****  */
1637:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** {
  80              	 .loc 1 1638 0
  81              	 .cfi_startproc
  82              	 
  83              	 
  84              	 
  85 0000 80B4     	 push {r7}
  86              	.LCFI6:
  87              	 .cfi_def_cfa_offset 4
  88              	 .cfi_offset 7,-4
  89 0002 83B0     	 sub sp,sp,#12
  90              	.LCFI7:
  91              	 .cfi_def_cfa_offset 16
  92 0004 00AF     	 add r7,sp,#0
  93              	.LCFI8:
  94              	 .cfi_def_cfa_register 7
  95 0006 0346     	 mov r3,r0
  96 0008 FB71     	 strb r3,[r7,#7]
1639:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  97              	 .loc 1 1639 0
  98 000a 0949     	 ldr r1,.L5
  99 000c 97F90730 	 ldrsb r3,[r7,#7]
 100 0010 5B09     	 lsrs r3,r3,#5
 101 0012 FA79     	 ldrb r2,[r7,#7]
 102 0014 02F01F02 	 and r2,r2,#31
 103 0018 0120     	 movs r0,#1
 104 001a 00FA02F2 	 lsl r2,r0,r2
 105 001e 2033     	 adds r3,r3,#32
 106 0020 41F82320 	 str r2,[r1,r3,lsl#2]
1640:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\core_cm4.h **** }
 107              	 .loc 1 1640 0
 108 0024 0C37     	 adds r7,r7,#12
 109              	.LCFI9:
 110              	 .cfi_def_cfa_offset 4
 111 0026 BD46     	 mov sp,r7
 112              	.LCFI10:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 0028 5DF8047B 	 ldr r7,[sp],#4
 116              	.LCFI11:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 002c 7047     	 bx lr
 120              	.L6:
 121 002e 00BF     	 .align 2
 122              	.L5:
 123 0030 00E100E0 	 .word -536813312
 124              	 .cfi_endproc
 125              	.LFE109:
 127              	 .section .text.INTERRUPT_Enable,"ax",%progbits
 128              	 .align 2
 129              	 .thumb
 130              	 .thumb_func
 132              	INTERRUPT_Enable:
 133              	.LFB210:
 134              	 .file 2 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT/interrupt.h"
   1:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
   2:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @file interrupt.h
   3:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @date 2015-10-05
   4:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
   5:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * regenerated.
   8:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
   9:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
  10:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @cond
  11:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  12:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * INTERRUPT v4.0.8 Helps the user to overwrite the provided ISR in system file
  13:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  14:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Copyright (c) 2015, Infineon Technologies AG
  15:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * All rights reserved.
  16:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  17:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * following conditions are met:
  19:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  20:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  21:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   disclaimer.
  22:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  23:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  24:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  25:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  26:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  27:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   products derived from this software without specific prior written permission.
  28:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  29:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  37:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  40:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  41:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Change History
  42:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * --------------
  43:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  44:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-02-16:
  45:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *     - Initial version<br>
  46:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  47:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-05-08:
  48:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *     - subpriority field is biased based on family<br>
  49:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  50:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-07-30:
  51:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *     - Added a field named "irqctrl" for XMC1400 devices
  52:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  53:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-10-05:
  54:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *     - Merged config elements into the APP structure
  55:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcond
  56:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
  57:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
  58:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  59:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #ifndef INTERRUPT_H
  60:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #define INTERRUPT_H
  61:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  62:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
  63:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * HEADER FILES
  64:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  65:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #include <xmc_common.h>
  66:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #include <DAVE_Common.h>
  67:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  68:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #if (UC_SERIES == XMC14)
  69:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #include <xmc_scu.h>
  70:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #endif
  71:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  72:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #include "interrupt_conf.h"
  73:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  74:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  75:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
  76:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @addtogroup INTERRUPT
  77:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
  78:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
  79:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  80:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
  81:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * MACROS
  82:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  83:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
  84:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
  85:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * ENUMS
  86:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  87:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
  88:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @ingroup INTERRUPT_enumerations
  89:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
  90:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
  91:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
  92:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Initialization status.
  93:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
  94:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** typedef enum INTERRUPT_STATUS
  95:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** {
  96:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   INTERRUPT_STATUS_SUCCESS = 0U,  /**< APP initialization success */
  97:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   INTERRUPT_STATUS_FAILURE = 1U   /**< APP initialization failure */
  98:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** } INTERRUPT_STATUS_t;
  99:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 100:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @}
 101:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 102:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 103:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
 104:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * DATA STRUCTURES
 105:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
 106:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 107:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @ingroup INTERRUPT_datastructures
 108:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
 109:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 110:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 111:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 112:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief This structure holds run-time configurations of INTERRUPT APP.
 113:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 114:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** typedef struct INTERRUPT
 115:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** {
 116:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #if(UC_SERIES == XMC14)
 117:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   const XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 118:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #endif	
 119:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   const IRQn_Type node;       /**< Mapped NVIC Node */
 120:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   const uint8_t priority; 	  /**< Node Interrupt Priority */
 121:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #if(UC_FAMILY == XMC4)
 122:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   const uint8_t subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 123:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #endif  
 124:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   const bool enable_at_init;  /**< Interrupt enable for Node */
 125:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** } INTERRUPT_t;
 126:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 127:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 128:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @}
 129:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 130:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 131:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
 132:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * API PROTOTYPES
 133:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
 134:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 135:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #ifdef __cplusplus
 136:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** extern "C" {
 137:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** #endif
 138:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 139:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 140:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @ingroup INTERRUPT_apidoc
 141:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
 142:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 143:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 144:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 145:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Get INTERRUPT APP version.
 146:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @return @ref DAVE_APP_VERSION_t APP version information (major, minor and
 147:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *                                 patch number)
 148:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
 149:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * \par<b>Description: </b><br>
 150:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * The function can be used to check application software compatibility with a
 151:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * specific version of the APP.
 152:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 153:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * #include <DAVE.h>
 154:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
 155:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * int main(void)
 156:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * {
 157:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   DAVE_APP_VERSION_t version;
 158:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   DAVE_Init();
 159:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   version = INTERRUPT_GetAppVersion();
 160:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   if(version.major != 4U)
 161:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   {
 162:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   }
 163:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   while(1)
 164:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   {}
 165:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *   return 0;
 166:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * }
 167:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 168:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 169:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** DAVE_APP_VERSION_t INTERRUPT_GetAppVersion(void);
 170:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 171:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Initializes INTERRUPT APP instance.
 172:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 173:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @return @ref INTERRUPT_STATUS_t
 174:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 175:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 176:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 177:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  #include <DAVE.h>
 178:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
 179:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  int main(void)
 180:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  {
 181:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    DAVE_Init();  // INTERRUPT_Init(&INTERRUPT_0) is called within DAVE_Init()
 182:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    while(1)
 183:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    {}
 184:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    return 0;
 185:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  }
 186:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 187:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
 188:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 189:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** INTERRUPT_STATUS_t INTERRUPT_Init(const INTERRUPT_t *const handler);
 190:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 191:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 192:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Enables the IRQ.
 193:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 194:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @return None
 195:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 196:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 197:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 198:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  #include <DAVE.h>
 199:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
 200:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  int main(void)
 201:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  {
 202:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    DAVE_Init(); // INTERRUPT_Init() is called within DAVE_Init()
 203:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    INTERRUPT_Enable(&INTERRUPT_0);
 204:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    while(1)
 205:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    {}
 206:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    return 0;
 207:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  }
 208:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 209:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 210:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** __STATIC_INLINE void INTERRUPT_Enable(const INTERRUPT_t *const handler)
 211:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** {
 135              	 .loc 2 211 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139 0000 80B5     	 push {r7,lr}
 140              	.LCFI12:
 141              	 .cfi_def_cfa_offset 8
 142              	 .cfi_offset 7,-8
 143              	 .cfi_offset 14,-4
 144 0002 82B0     	 sub sp,sp,#8
 145              	.LCFI13:
 146              	 .cfi_def_cfa_offset 16
 147 0004 00AF     	 add r7,sp,#0
 148              	.LCFI14:
 149              	 .cfi_def_cfa_register 7
 150 0006 7860     	 str r0,[r7,#4]
 212:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   XMC_ASSERT("Handler NULL", (handler != NULL));
 213:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   NVIC_EnableIRQ(handler->node);
 151              	 .loc 2 213 0
 152 0008 7B68     	 ldr r3,[r7,#4]
 153 000a 1B78     	 ldrb r3,[r3]
 154 000c 5BB2     	 sxtb r3,r3
 155 000e 1846     	 mov r0,r3
 156 0010 FFF7FEFF 	 bl NVIC_EnableIRQ
 214:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** }
 157              	 .loc 2 214 0
 158 0014 0837     	 adds r7,r7,#8
 159              	.LCFI15:
 160              	 .cfi_def_cfa_offset 8
 161 0016 BD46     	 mov sp,r7
 162              	.LCFI16:
 163              	 .cfi_def_cfa_register 13
 164              	 
 165 0018 80BD     	 pop {r7,pc}
 166              	 .cfi_endproc
 167              	.LFE210:
 169 001a 00BF     	 .section .text.INTERRUPT_Disable,"ax",%progbits
 170              	 .align 2
 171              	 .thumb
 172              	 .thumb_func
 174              	INTERRUPT_Disable:
 175              	.LFB211:
 215:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** 
 216:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** /**
 217:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Disables the IRQ.
 218:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 219:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @return None
 220:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 221:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 222:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 223:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  #include <DAVE.h>
 224:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *
 225:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  int main(void)
 226:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  {
 227:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    DAVE_Init(); // INTERRUPT_Init() is called within DAVE_Init()
 228:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    INTERRUPT_Disable(&INTERRUPT_0);
 229:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    while(1)
 230:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    {}
 231:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *    return 0;
 232:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  *  }
 233:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 234:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****  */
 235:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** __STATIC_INLINE void INTERRUPT_Disable(const INTERRUPT_t *const handler)
 236:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** {
 176              	 .loc 2 236 0
 177              	 .cfi_startproc
 178              	 
 179              	 
 180 0000 80B5     	 push {r7,lr}
 181              	.LCFI17:
 182              	 .cfi_def_cfa_offset 8
 183              	 .cfi_offset 7,-8
 184              	 .cfi_offset 14,-4
 185 0002 82B0     	 sub sp,sp,#8
 186              	.LCFI18:
 187              	 .cfi_def_cfa_offset 16
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI19:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
 237:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   XMC_ASSERT("Handler NULL", (handler != NULL));
 238:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h ****   NVIC_DisableIRQ(handler->node);
 192              	 .loc 2 238 0
 193 0008 7B68     	 ldr r3,[r7,#4]
 194 000a 1B78     	 ldrb r3,[r3]
 195 000c 5BB2     	 sxtb r3,r3
 196 000e 1846     	 mov r0,r3
 197 0010 FFF7FEFF 	 bl NVIC_DisableIRQ
 239:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT\interrupt.h **** }
 198              	 .loc 2 239 0
 199 0014 0837     	 adds r7,r7,#8
 200              	.LCFI20:
 201              	 .cfi_def_cfa_offset 8
 202 0016 BD46     	 mov sp,r7
 203              	.LCFI21:
 204              	 .cfi_def_cfa_register 13
 205              	 
 206 0018 80BD     	 pop {r7,pc}
 207              	 .cfi_endproc
 208              	.LFE211:
 210 001a 00BF     	 .section .text.UART_SetRXFIFOTriggerLimit,"ax",%progbits
 211              	 .align 2
 212              	 .thumb
 213              	 .thumb_func
 215              	UART_SetRXFIFOTriggerLimit:
 216              	.LFB300:
 217              	 .file 3 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART/uart.h"
   1:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
   2:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @file uart.h
   3:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @date 2015-12-17
   4:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
   5:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
   8:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @cond
   9:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * UART v4.1.6 - Configures a USIC channel to perform transmit & receive operations using UART prot
  11:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  12:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Copyright (c) 2015, Infineon Technologies AG
  13:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * All rights reserved.
  14:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  15:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * following conditions are met:
  17:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  18:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   disclaimer.
  20:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  21:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  23:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  24:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  27:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  35:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
  38:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  39:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Change History
  40:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * --------------
  41:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  42:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * 2015-02-16:
  43:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     - Initial version for DAVEv4
  44:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  45:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * 2015-06-20:
  46:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     - Changed the abort API name from UART_Abort_Receive to UART_AbortReceive and added return t
  47:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  48:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * 2015-07-01:
  49:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     - Changed structure name from UART_DYNAMIC_t to UART_RUNTIME_t
  50:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  51:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * 2015-07-09:
  52:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     - Renamed UART_GetProtocolStatus as UART_GetFlagStatus and UART_ClearProtocolStatus as UART_
  53:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     - Removed APIs UART_GetTXFIFOStatus, UART_GetRXFIFOStatus, UART_ClearTXFIFOStatus,
  54:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_ClearRXFIFOStatus
  55:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  56:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * 2015-07-14:
  57:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     - Added support for DMA and Direct mode
  58:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  59:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcond
  60:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
  61:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
  62:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
  63:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**************************************************************************************************
  64:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * HEADER FILES
  65:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
  66:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifndef UART_H
  67:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #define UART_H
  68:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
  69:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #include <xmc_scu.h>
  70:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #include <xmc_gpio.h>
  71:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #include <xmc_uart.h>
  72:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
  73:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #error "UART requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
  78:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
  79:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #include <DAVE_common.h>
  80:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #include "uart_conf.h"
  81:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #if ((defined UART_TX_DMA_USED) || (defined UART_RX_DMA_USED))
  82:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #include "../GLOBAL_DMA/global_dma.h"
  83:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
  84:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
  85:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**************************************************************************************************
  86:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * MACROS
  87:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
  88:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /*
  89:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Represents the maximum data size for DMA transaction*/
  90:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #define UART_DMA_MAXCOUNT (4095U)
  91:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
  92:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**************************************************************************************************
  93:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * ENUMS
  94:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
  95:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
  96:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @ingroup UART_enumerations
  97:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @{
  98:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
  99:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 100:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 101:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Enum to describe the possible status values, returned
 102:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  by UART APIs.
 103:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 104:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef enum UART_STATUS
 105:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 106:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_STATUS_SUCCESS,        /**< Indicates App initialization state successful */
 107:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 108:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_STATUS_FAILURE,        /**< Unknown error */
 109:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 110:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_STATUS_BUSY,           /**< UART Busy */
 111:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 112:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_STATUS_BUFFER_INVALID, /**< Buffer provided or the buffer size is invalid*/
 113:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 114:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 115:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                    e.g, If UART_StartTransmitDMA is invoked for an instance
 116:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                    which has transmit mode configured as "Interrupt", will
 117:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                    return this status.*/
 118:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 119:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_STATUS_t;
 120:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 121:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 122:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Enum used to describe the UART Mode of operation
 123:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 124:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef enum UART_MODE
 125:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 126:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_MODE_FULLDUPLEX, /**< Full Duplex mode selected */
 127:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_MODE_HALFDUPLEX, /**< Half Duplex mode selected */
 128:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_MODE_LOOPBACK    /**< LoopBack mode selected */
 129:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_MODE_t;
 130:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 131:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 132:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Enum used to identify UART protocol event callback function
 133:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 134:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef enum UART_EVENT
 135:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 136:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_EVENT_SYNC_BRK,    /**< Synchronization break detected event */
 137:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_EVENT_RX_NOISE,    /**< Receiver noise detected event */
 138:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_EVENT_FORMAT_ERR0, /**< Frame format error at stop bit 0 event */
 139:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_EVENT_FORMAT_ERR1, /**< Frame format error at stop bit 1 event */
 140:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_EVENT_COLLISION,   /**< Data collision detected in half duplex mode event */
 141:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_EVENT_MAX          /**< Indicates number of UART events supported*/
 142:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_EVENT_t;
 143:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 144:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 145:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 146:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 147:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef enum UART_TRANSFER_MODE
 148:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 149:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 150:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 151:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP connectio
 152:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }UART_TRANSFER_MODE_t;
 153:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 154:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 155:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @}
 156:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 157:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 158:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**************************************************************************************************
 159:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * DATA STRUCTURES
 160:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
 161:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 162:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Function pointer used for callback function
 163:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 164:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef void (*UART_cbhandler)(void);
 165:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 166:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Function pointer used for initialization function
 167:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 168:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef UART_STATUS_t (*UART_init_handler)(void);
 169:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 170:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @ingroup UART_datastructures
 171:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @{
 172:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 173:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 174:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 175:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Wrapper typedefinition for XMC_UART_PROTOCOL_STATUS_t.
 176:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 177:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef XMC_UART_CH_STATUS_FLAG_t UART_PROTOCOL_STATUS_t;
 178:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 179:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 180:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Structure for transmit pin configuration.
 181:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 182:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef struct UART_TX_CONFIG
 183:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 184:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_GPIO_PORT_t *const port;            /**< Pointer to the GPIO port base address */
 185:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const uint8_t pin;                      /**< Pin number in the port*/
 186:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const XMC_GPIO_CONFIG_t *const config;  /**< Pin configuration structure */
 187:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_TX_CONFIG_t;
 188:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 189:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #if (defined(UART_TX_DMA_USED) || defined(UART_RX_DMA_USED))
 190:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 191:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Structure for DMA configuration.
 192:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 193:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef struct UART_DMA_CONFIG
 194:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 195:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 196:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 197:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }UART_DMA_CONFIG_t;
 198:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 199:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 200:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 201:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Structure for holding the configuration parameters of UART channel.
 202:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 203:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef struct UART_CONFIG
 204:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 205:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const XMC_UART_CH_CONFIG_t * const channel_config;   /**< Basic UART configuration from the GUI w
 206:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             frame length, stop bits and parity */
 207:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #if (defined UART_TX_DMA_USED) || (defined UART_RX_DMA_USED)
 208:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   GLOBAL_DMA_t * global_dma;                           /**< Global DMA handle */
 209:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 210:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_TX_DMA_USED
 211:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const UART_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel configuratio
 212:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 213:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_RX_DMA_USED
 214:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const UART_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel configuratio
 215:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 216:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_init_handler fptr_uart_config;                  /**< Function pointer to configure the MUX v
 217:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_TX_INTERRUPT_USED
 218:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler tx_cbhandler;                         /**< Function pointer to hold the callback f
 219:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when the transmission is complet
 220:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 221:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_RX_INTERRUPT_USED
 222:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler rx_cbhandler;                         /**< Function pointer to hold the callback f
 223:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when the reception is complete *
 224:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 225:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler sync_error_cbhandler;                 /**< Function pointer to hold the callback f
 226:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when synchronization break detec
 227:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler rx_noise_error_cbhandler;             /**< Function pointer to hold the callback f
 228:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when receiver noise is detected*
 229:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler format_error_bit0_cbhandler;          /**< Function pointer to hold the callback f
 230:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when format error with stop bit 
 231:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler format_error_bit1_cbhandler;          /**< Function pointer to hold the callback f
 232:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when format error with stop bit 
 233:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_cbhandler collision_error_cbhandler;            /**< Function pointer to hold the callback f
 234:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             called when collision error is detected
 235:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const UART_TX_CONFIG_t * tx_pin_config;              /**< Transmit pin configuration to be used d
 236:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             and while changing baudrate. */
 237:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_MODE_t mode;                                    /**< UART operation mode */
 238:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_TRANSFER_MODE_t transmit_mode;                  /**< Mode used for transmitting data. Data c
 239:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             interrupt, DMA or direct(using polling 
 240:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_TRANSFER_MODE_t receive_mode;                   /**< Mode used for receiving data. Data can 
 241:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                             interrupt, DMA or direct(using polling 
 242:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;                /**< Transmit FIFO size configuration */
 243:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;                /**< Receive FIFO size configuration */
 244:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint8_t tx_sr;                                       /**< Service request number assigned to tran
 245:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_CONFIG_t;
 246:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 247:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 248:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Structure to hold the dynamic variables for the UART communication.
 249:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 250:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef struct UART_RUNTIME
 251:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 252:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint8_t * tx_data;            /**< Pointer to the transmit data buffer*/
 253:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint8_t * rx_data;            /**< Pointer to the receive data buffer*/
 254:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint32_t tx_data_count;       /**< Number of bytes of data to be transmitted*/
 255:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint32_t tx_data_index;       /**< Index to the byte to be transmitted next in the tx_data buffer
 256:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint32_t rx_data_count;       /**< Number of bytes of data to be received*/
 257:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   uint32_t rx_data_index;       /**< Indicates the number of bytes currently available in the rx_da
 258:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   volatile bool tx_busy;        /**< Status flag to indicate busy when a transmission is assigned*/
 259:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   volatile bool rx_busy;        /**< Status flag to indicate busy when a reception is assigned*/
 260:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_RUNTIME_t;
 261:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 262:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 263:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 264:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 265:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** typedef struct UART
 266:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 267:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_USIC_CH_t * const channel;              /**< USIC channel*/
 268:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   const UART_CONFIG_t * const config;         /**< UART configuration structure pointer*/
 269:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   UART_RUNTIME_t * const runtime;             /**< Pointer to the structure holding all variables,
 270:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****                                                    that can change at runtime*/
 271:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** } UART_t;
 272:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 273:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 274:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @}
 275:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 276:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 277:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**************************************************************************************************
 278:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * API Prototypes
 279:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  **************************************************************************************************
 280:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 281:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef __cplusplus
 282:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** extern "C" {
 283:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 284:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 285:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @ingroup UART_apidoc
 286:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @{
 287:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 288:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 289:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Get the UART APP version.
 290:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 291:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 292:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 293:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 294:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Description:
 295:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Transmits the text "UART APP supported.", if the UART APP version is v4.1.x, where x can be a
 296:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>
 297:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 298:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 299:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 300:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 301:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     DAVE_APP_VERSION_t uart_version;
 302:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t valid_str[] = "UART APP supported.";
 303:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 304:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 305:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 306:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 307:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       uart_version = UART_GetAppVersion();
 308:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if((uart_version.major == 4) &&
 309:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *          (uart_version.minor == 1))
 310:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 311:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         UART_Transmit(&UART_0, valid_str, sizeof(valid_str));
 312:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 313:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 314:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 315:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 316:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 317:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 318:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 319:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 320:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 321:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 322:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 323:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  @endcode
 324:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 325:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** DAVE_APP_VERSION_t UART_GetAppVersion(void);
 326:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 327:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 328:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Initializes the UART module as per the configuration made
 329:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * in UI.
 330:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 331:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return UART_STATUS_t: Status of UART driver initialization.\n
 332:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                    @ref UART_STATUS_SUCCESS - on successful initialization.\n
 333:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                    @ref UART_STATUS_FAILURE - if initialization fails.\n
 334:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                    @ref UART_STATUS_BUSY - if UART channel is busy.\n
 335:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 336:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 337:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Initializes IO pins used for the UART communication, configures
 338:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * USIC registers based on the settings provided in the GUI. Calculates divider
 339:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * values PDIV and STEP for a precise baudrate. It also enables configured interrupt
 340:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * flags and service request values.
 341:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <BR>
 342:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 343:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 344:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 345:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 346:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 347:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 348:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 349:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 350:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 351:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 352:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 353:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 354:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         while(1U)
 355:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 356:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 357:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 358:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 359:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 360:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 361:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 362:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 363:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 364:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 365:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 366:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 367:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  @endcode
 368:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 369:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_Init(const UART_t *const handle);
 370:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 371:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 372:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Registers a request for receiving data over UART channel.
 373:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 374:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 375:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle  Pointer to UART_t handle structure
 376:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 377:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  count  Total no of bytes to be received.\n
 378:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 379:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 380:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return  UART_STATUS_t: Status for receive request.\n
 381:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_SUCCESS if the request is accepted.\n
 382:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUSY if a reception is in progress.\n
 383:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is 0. \n
 384:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 385:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 386:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 387:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Data will be received asynchronously. After the requested number of data bytes are received,
 388:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * optionally, the user configured callback function will be executed.
 389:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 390:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <b>Interrupt:</b><br>
 391:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 392:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 393:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 394:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 395:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 396:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * after calling the API, will be placed in the user buffer.
 397:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * When all the requested number of data bytes are received, the configured callback
 398:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed.
 399:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, the user has to poll for the value of the
 400:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 401:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * requested number of data bytes are received.
 402:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <br>
 403:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <b>DMA:</b><br>
 404:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 405:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 406:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 407:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * enabled. FIFO will not be used when the receive mode is DMA.
 408:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 409:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * after calling the API, will be placed in the user buffer.
 410:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * When all the requested number of data bytes are received, the configured callback
 411:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed.
 412:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, the user has to poll for the value of the
 413:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 414:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * requested number of data bytes are received.
 415:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <br>
 416:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <b>Direct</b><br>
 417:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 418:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 419:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 420:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 421:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * after calling the API, will be placed in the user buffer.
 422:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 423:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If this behaviour is not desired, use other APIs like @ref UART_GetReceivedWord, @ref UART_GetPr
 424:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 425:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 426:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 427:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 428:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 429:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 430:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Receive mode should be configured as "Direct".
 431:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 432:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits 10 bytes of data after receiving 10 bytes of data.
 433:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 434:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 435:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 436:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 437:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t ReadData[10];
 438:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 439:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 440:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 441:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 442:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(1)
 443:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 444:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Receive 10 bytes of data
 445:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         if(UART_Receive(&UART_0, ReadData, 10) == UART_STATUS_SUCCESS)
 446:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 447:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Retransmit the received 10 bytes
 448:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_Transmit(&UART_0, ReadData, 10);
 449:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 450:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 451:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 452:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 453:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 454:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 455:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 456:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 457:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 458:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 459:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 460:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 461:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  @endcode
 462:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 463:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 464:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_Receive(const UART_t *const handle, uint8_t* data_ptr, uint32_t count);
 465:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 466:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 467:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Registers a request for transmitting data over UART channel.
 468:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 469:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle  UART APP handle pointer of type @ref UART_t
 470:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 471:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  count Total no of words to be transmitted.\n
 472:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 473:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 474:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return  UART_STATUS_t: Status of transmit request.\n
 475:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_SUCCESS if the request is accepted.\n
 476:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUSY if a transmission is in progress.\n
 477:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is 0.\n
 478:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 479:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 480:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * request is registered.
 481:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 482:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 483:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Transmits data using the UART channel. Transmission is accomplished using the transmit mode
 484:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * as configured in the UI.<br>
 485:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <b>Interrupt:</b><br>
 486:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 487:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 488:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 489:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 490:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 491:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * and status of transmission. This function only registers a data transmission request if
 492:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 493:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 494:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 495:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 496:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 497:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 498:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 499:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Callback function is executed when all the data bytes are transmitted.
 500:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 501:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 502:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the completion of data transmission.<br>
 503:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <b>DMA:</b><br>
 504:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * A DMA channel is configured to provide data to the UART transmit buffer. This removes the load
 505:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * off the CPU. This API will only configure and enable the DMA channel by specifying the data buff
 506:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * and count of bytes to transmit. Rest is taken care without the CPU's intervention. User can conf
 507:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * a callback function in the APP UI. When the transmission is complete, the callback function will
 508:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * FIFO will not be used in DMA mode. Transmit buffer interrupt is configured for triggering the
 509:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * DMA channel. So each byte is transmitted in the background through the DMA channel.
 510:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 511:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * verify if the transmission is complete.
 512:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <b>Direct:</b><br>
 513:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 514:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 515:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If this behaviour is not desired, use other APIs like @ref UART_TransmitWord, @ref UART_GetProto
 516:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 517:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 518:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 519:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 520:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 521:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 522:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode should be configured as "Direct".
 523:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 524:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infineon".
 525:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 526:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 527:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 528:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 529:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon";
 530:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 531:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 532:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 533:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 534:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Transmit the string.
 535:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_Transmit(&UART_0, Send_Data, sizeof(Send_Data)-1);
 536:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(1)
 537:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 538:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 539:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 540:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 541:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 542:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 543:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 544:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 545:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 546:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 547:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 548:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 549:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
 550:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 551:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 552:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_Transmit(const UART_t *const handle, uint8_t* data_ptr, uint32_t count);
 553:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 554:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #if (defined UART_TX_INTERRUPT_USED || defined UART_TX_DMA_USED)
 555:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 556:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Aborts the ongoing data transmission.
 557:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param handle  UART APP handle pointer of type @ref UART_t
 558:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return UART_STATUS_t: Result of transmit abort request.\n
 559:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       @ref UART_STATUS_SUCCESS if the UART channel transmission is stopped
 560:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       successfully.\n
 561:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       @ref UART_STATUS_MODE_MISMATCH if transmit mode is Direct.\n
 562:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 563:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 564:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If there is a transmission in progress, it will be stopped. If transmit FIFO is used,
 565:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the existing data will be flushed. After the transmission is stopped, user can start
 566:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * a new transmission without delay. Abort request for transmit mode direct cannot be serviced sinc
 567:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the direct mode transmit API is a blocking call.
 568:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 569:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 570:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 571:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 572:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 573:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 574:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode should be configured as "Interrupt".
 575:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 576:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Initiates the transmission of one string, aborts the transmission immediately and
 577:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //starts transmission of another string. The receiver might see traces of first string followe
 578:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //by the complete second string.
 579:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 580:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 581:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 582:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 583:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //String1
 584:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon DAVE application.";
 585:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //String2
 586:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t NewData[] = "New data message";
 587:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 588:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 589:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 590:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 591:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Initiate transmission of first string.
 592:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_Transmit(&UART_0, Send_Data, sizeof(Send_Data));
 593:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *		 //When the first string is being transmitted,
 594:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if(UART_0.runtime->tx_busy)
 595:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 596:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Stop the transmission of first string.
 597:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         if(UART_AbortTransmit(&UART_0) == UART_STATUS_SUCCESS)
 598:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 599:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Start the transmission of second string
 600:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_Transmit(&UART_0, NewData, sizeof(NewData));
 601:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Wait till the transmission is finished.
 602:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           while(UART_0.runtime->tx_busy);
 603:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 604:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 605:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(1)
 606:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 607:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 608:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 609:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 610:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 611:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 612:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 613:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 614:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 615:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 616:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 617:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 618:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
 619:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 620:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 621:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_AbortTransmit(const UART_t *const handle);
 622:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 623:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 624:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #if (defined UART_RX_INTERRUPT_USED || defined UART_RX_DMA_USED)
 625:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 626:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Stops the active data reception sequence.
 627:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param handle UART APP handle pointer of type @ref UART_t
 628:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return UART_STATUS_t: Result of reception abort request.\n
 629:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       @ref UART_STATUS_SUCCESS if the UART channel reception has
 630:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       been stopped.\n
 631:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       @ref UART_STATUS_MODE_MISMATCH if receive mode is Direct.\n
 632:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 633:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 634:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a reception is in progress, it will be stopped. When a reception request
 635:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * is active, user will not be able to place a new receive request till the active
 636:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * reception is complete. This API can stop the progressing reception to make
 637:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * a new receive request. Abort request for receive mode direct cannot be serviced since
 638:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the direct mode receive API is a blocking call.
 639:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 640:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 641:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 642:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 643:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 644:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 645:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode and receive mode should be configured as "Interrupt".
 646:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 647:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infineon DAVE application." and starts to receive data.
 648:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //After receiving first byte, checks the value of first byte. If the first byte is 0x55,
 649:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //aborts the ongoing reception and transmits the received byte.
 650:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 651:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 652:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 653:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 654:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon DAVE application.";
 655:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Rec_Data[64];
 656:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 657:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 658:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 659:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 660:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Transmit the initial string.
 661:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_Transmit(&UART_0, Send_Data, sizeof(Send_Data));
 662:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Wait till the string is transmitted.
 663:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(UART_0.runtime->tx_busy);
 664:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 665:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Start reception of data
 666:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_Receive(&UART_0, Rec_Data, 15);
 667:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Wait till atleast one byte is received.
 668:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(UART_0.runtime->rx_data_index == 0);
 669:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //If the first byte is 0x55,
 670:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if(UART_0.runtime->rx_data[0] == 0x55)
 671:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 672:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Stop the reception
 673:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         if(UART_AbortReceive(&UART_0) == UART_STATUS_SUCCESS)
 674:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 675:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Transmit the received one byte.
 676:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_Transmit(&UART_0, Rec_Data, 1);
 677:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 678:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 679:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 680:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 681:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 682:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 683:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 684:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 685:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 686:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 687:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 688:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 689:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
 690:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 691:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 692:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_AbortReceive(const UART_t *const handle);
 693:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 694:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 695:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_RX_INTERRUPT_USED
 696:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 697:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Registers a request for receiving data over UART channel.
 698:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 699:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 700:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle  Pointer to UART_t handle structure
 701:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 702:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  count  Total no of bytes to be received.\n
 703:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 704:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 705:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return  UART_STATUS_t: Status for receive request.\n
 706:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_SUCCESS if the request is accepted.\n
 707:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUSY if a reception is in progress.\n
 708:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is 0. \n
 709:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 710:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 711:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 712:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 713:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * optionally, the user configured callback function will be executed.
 714:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Based on the UI configuration, either standard receive buffer or receive FIFO is used
 715:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 716:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 717:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 718:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * CPU load.  When all the requested number of data bytes are received, the configured callback
 719:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed.
 720:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, the user has to poll for the value of the
 721:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 722:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * requested number of data bytes are received.
 723:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 724:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 725:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 726:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 727:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 728:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 729:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode and receive mode should be configured as "Interrupt".
 730:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 731:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Receives 10 bytes of data and transmits the same.
 732:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 733:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 734:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 735:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 736:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t ReadData[10];
 737:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 738:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 739:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 740:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 741:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(1)
 742:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 743:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Start reception of 10 bytes. The status will be returned success, if the channel is not 
 744:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if(UART_StartReceiveIRQ(&UART_0, ReadData, 10) == UART_STATUS_SUCCESS)
 745:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 746:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Wait till the data is received.
 747:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         while(UART_0.runtime->rx_busy)
 748:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 749:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 750:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Transmit the received data.
 751:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         UART_Transmit(&UART_0, ReadData, 10);
 752:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         while(UART_0.runtime->tx_busy)
 753:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 754:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 755:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 756:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 757:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 758:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 759:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 760:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 761:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 762:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 763:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 764:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 765:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 766:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 767:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  @endcode
 768:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 769:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 770:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_StartReceiveIRQ(const UART_t *const handle, uint8_t* data_ptr, uint32_t count);
 771:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 772:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 773:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_TX_INTERRUPT_USED
 774:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 775:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Registers a request for transmitting data over UART channel.
 776:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 777:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle  UART APP handle pointer of type @ref UART_t
 778:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 779:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  count Total no of words to be transmitted.\n
 780:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 781:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 782:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return  UART_STATUS_t: Status of transmit request.\n
 783:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_SUCCESS if the request is accepted.\n
 784:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUSY if a transmission is in progress.\n
 785:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is 0.\n
 786:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 787:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 788:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * request is registered.
 789:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 790:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 791:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 792:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 793:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 794:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved from FIFO.
 795:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The function uses APP handle's runtime structure to store the data pointer, count, data index
 796:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * and status of transmission. This function only registers a data transmission request if
 797:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 798:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 799:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the data. If transmit FIFO is configured, the data is filled into the FIFO.
 800:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this
 801:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 802:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 803:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 804:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Callback function is executed when all the data bytes are transmitted.
 805:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 806:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 807:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the completion of data transmission.
 808:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 809:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 810:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 811:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 812:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 813:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 814:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode should be configured as "Interrupt".
 815:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 816:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infineon"
 817:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 818:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 819:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 820:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 821:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon";
 822:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 823:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 824:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 825:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 826:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if(UART_StartTransmitIRQ(&UART_0, Send_Data, sizeof(Send_Data)) == UART_STATUS_SUCCESS)
 827:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 828:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Wait till the data transmission is ongoing.
 829:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         while(UART_0.runtime->tx_busy)
 830:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 831:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 832:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 833:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 834:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 835:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 836:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 837:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 838:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 839:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 840:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 841:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 842:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 843:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
 844:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 845:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 846:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_StartTransmitIRQ(const UART_t *const handle, uint8_t* data_ptr, uint32_t count);
 847:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 848:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 849:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_TX_DMA_USED
 850:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 851:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Registers a request for transmitting data over UART channel using DMA.
 852:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 853:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle  UART APP handle pointer of type @ref UART_t
 854:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 855:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  count Total number of words to be transmitted.\n
 856:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \b Range: minimum= 1, maximum= 4096.
 857:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 858:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return  UART_STATUS_t: Status of transmit request.\n
 859:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_SUCCESS if the request is accepted.\n
 860:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUSY if a transmission is in progress.\n
 861:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_MODE_MISMATCH if the handle is not configured for
 862:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        DMA transmit mode. \n
 863:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is 0. \n
 864:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 865:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 866:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * request is registered.
 867:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 868:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 869:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The data transmission is accomplished using DMA. User can configure
 870:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 871:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed.
 872:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 873:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * This function only registers a data transmission request, if
 874:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * there is no active transmission in progress. Actual data transmission happens through DMA channe
 875:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * A maximum of 4096 bytes can be transmitted in one API call. This limit is because of the DMA sin
 876:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Callback function is executed when all the data bytes are transmitted.
 877:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 878:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 879:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * the completion of data transmission.
 880:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If data more than the block size of 4096 have to be transmitted, user will have to transmit them
 881:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 882:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 883:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 884:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 885:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 886:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
 887:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode should be configured as "DMA".
 888:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 889:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infineon" using DMA.
 890:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 891:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 892:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 893:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 894:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon";
 895:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 896:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 897:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 898:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 899:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if(UART_StartTransmitDMA(&UART_0, Send_Data, sizeof(Send_Data)) == UART_STATUS_SUCCESS)
 900:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 901:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Wait till the data is transmitted.
 902:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         while(UART_0.runtime->tx_busy)
 903:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 904:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 905:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 906:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 907:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 908:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 909:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 910:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 911:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 912:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 913:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 914:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 915:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 916:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
 917:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 918:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 919:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_StartTransmitDMA(const UART_t *const handle, uint8_t* data_ptr, uint32_t count);
 920:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 921:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 922:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #ifdef UART_RX_DMA_USED
 923:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 924:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Registers a request for receiving data over UART channel using DMA.
 925:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 926:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 927:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle  Pointer to UART_t handle structure
 928:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 929:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  count  Total no of bytes to be received.\n
 930:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                \b Range: minimum= 1, maximum= 4096.
 931:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 932:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return  UART_STATUS_t: Status for receive request.\n
 933:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_SUCCESS if the request is accepted.\n
 934:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUSY if a reception is in progress.\n
 935:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_MODE_MISMATCH if the handle is not configured for
 936:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        DMA receive mode. \n
 937:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                        @ref UART_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is 0. \n
 938:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 939:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 940:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
 941:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 942:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * optionally, the user configured callback function will be executed.
 943:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 944:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * When all the requested number of data bytes are received, the configured callback
 945:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * function will be executed.
 946:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If a callback function is not configured, the user has to poll for the value of the
 947:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 948:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * requested number of data bytes are received.
 949:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 950:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 951:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
 952:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
 953:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 954:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 955:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre condition:
 956:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit mode and receive mode should be configured to "DMA"
 957:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
 958:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Receives 10 bytes of data and transmits the received data.
 959:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 960:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
 961:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
 962:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
 963:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t ReadData[10];
 964:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 965:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
 966:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
 967:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 968:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(1)
 969:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
 970:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Receive 10 bytes of data
 971:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         if(UART_StartReceiveDMA(&UART_0, ReadData, 10) == UART_STATUS_SUCCESS)
 972:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         {
 973:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Wait till 10 bytes are received
 974:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           while(UART_0.runtime->rx_busy)
 975:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           {
 976:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           }
 977:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Transmit the received data.
 978:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_StartTransmitDMA(&UART_0, ReadData, 10);
 979:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         }
 980:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
 981:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 982:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
 983:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
 984:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
 985:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
 986:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
 987:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
 988:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
 989:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
 990:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
 991:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  @endcode
 992:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
 993:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
 994:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_StartReceiveDMA(const UART_t *const handle, uint8_t* data_ptr, uint32_t count);
 995:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** #endif
 996:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
 997:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
 998:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Changes the baudrate of UART channel.
 999:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1000:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param UART_t * Pointer to the UART APP handle.
1001:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param baud Value of new baudrate.
1002:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param oversampling Number of samples to be considered for each symbol. 16 is the standard value
1003:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1004:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return UART_STATUS_t UART_STATUS_SUCCESS if baudrate changed successfully.
1005:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       UART_STATUS_FAILURE if baudrate could not be changed.
1006:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1007:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1008:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The function stops the channel, calculates the clock divider values to achieve the desired baudr
1009:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Sets the divider values and reconfigures the channel as per the configuration in the UI. The cha
1010:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * enabled at the end of configuration.
1011:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <BR>
1012:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1013:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1014:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * <i>Please disable the receive FIFO in the 'Advanced Settings' tab</i>
1015:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1016:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1017:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * #include <DAVE.h>      //Declarations from DAVE Code Generation (includes SFR declaration)
1018:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1019:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //Precondition:
1020:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //Disable receive FIFO in the Advanced settings tab.
1021:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //Description:
1022:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //Waits for user input of new baudrate value. Input is recognized after line feed is provided.
1023:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //Value is set as the new baudrate and the application waits for any key to be pressed.
1024:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //This helps in reconfiguring the terminal application to the newly set baudrate. On receiving
1025:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //new character, message indicating the successful baudrate change will be displayed using updat
1026:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //value of baudrate.
1027:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1028:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * const uint8_t send_askbaud[] = "Please enter desired baudrate:";
1029:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * const uint8_t send_data[] = "\nPress 'y' to change baudrate to desired value:";
1030:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * const uint8_t send_invalid[] = "\nInvalid value!!";
1031:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * const uint8_t send_success[] = "\nWe made it...Baudrate changed successfully :-).\n\n";
1032:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * uint8_t rec_data[11];
1033:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * int main(void)
1034:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1035:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   DAVE_STATUS_t status;
1036:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint32_t baud;
1037:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1038:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   status = DAVE_Init();    // Initialization of DAVE Apps
1039:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1040:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   if(status == DAVE_STATUS_FAILURE)
1041:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1042:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
1043:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(1U)
1044:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1045:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1046:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1047:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1048:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   while(1U)
1049:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1050:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_Transmit(&UART_0, send_askbaud, sizeof(send_askbaud)-1);
1051:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_Receive(&UART_0, rec_data, 10);
1052:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(UART_0.runtime->tx_busy);
1053:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(UART_0.runtime->rx_busy)
1054:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1055:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //If user enters newline character, accept the value
1056:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if((UART_0.runtime->rx_data_index > 0) && (UART_0.runtime->rx_data[UART_0.runtime->rx_data
1057:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
1058:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //End reception of data on finding newline character
1059:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         UART_AbortReceive(&UART_0);
1060:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
1061:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1062:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //Add end of string character to the last location
1063:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     rec_data[UART_0.runtime->rx_data_index] = 0;
1064:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //Convert the entered string to number.
1065:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     baud = atoi(rec_data);
1066:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //If the conversion is successful, set the baudrate.
1067:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(baud > 0)
1068:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1069:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Set the baudrate to USIC channel
1070:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       if(UART_SetBaudrate(&UART_0, baud, 16) == UART_STATUS_SUCCESS)
1071:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
1072:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //After changing the baudrate successfully,
1073:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //Wait for user to enter a character.
1074:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //This wait gives time for the user to change
1075:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         //the baudrate of the terminal tool used.
1076:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         UART_Receive(&UART_0, rec_data, 1);
1077:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         while(UART_0.runtime->rx_busy);
1078:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         UART_Transmit(&UART_0, send_success, sizeof(send_success)-1);
1079:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
1080:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       else
1081:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       {
1082:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         UART_Transmit(&UART_0, send_invalid, sizeof(send_invalid)-1);
1083:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       }
1084:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1085:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
1086:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1087:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_Transmit(&UART_0, send_invalid, sizeof(send_invalid)-1);
1088:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1089:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(UART_0.runtime->tx_busy);
1090:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1091:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1092:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1093:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * */
1094:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** UART_STATUS_t UART_SetBaudrate(const UART_t * handle, uint32_t baud, uint32_t oversampling);
1095:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1096:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1097:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Gets the transmit FIFO event flags.
1098:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1099:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1100:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1101:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
1102:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                      their bit positions.\n
1103:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
1104:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1105:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1106:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer
1107:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * interrupt flag and transmit buffer error flag before providing the value.
1108:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * User has to mask the bits of interest before checking the status.
1109:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1110:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1111:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1112:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1113:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1114:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Pre-condition:
1115:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Configure transmit mode as "Direct" with transmit FIFO enabled.
1116:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Description:
1117:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Transmits the string "Infineon".
1118:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
1119:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1120:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
1121:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon";
1122:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t index = 0;
1123:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1124:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
1125:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
1126:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1127:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Clear the Tx FIFO standard transmit buffer event.
1128:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        UART_ClearTXFIFOStatus(&UART_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1129:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Iterate for the length of the string "Infineon"
1130:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        while(index < sizeof(Send_Data)-1)
1131:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        {
1132:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Put the character in the transmit FIFO.
1133:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           XMC_USIC_CH_TXFIFO_PutData((XMC_USIC_CH_t *)UART_0.channel,(uint16_t)Send_Data[index])
1134:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           index++;
1135:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1136:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining dat
1137:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           while((UART_GetTXFIFOStatus(&UART_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0);
1138:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_ClearTXFIFOStatus(&UART_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1139:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        }
1140:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1141:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
1142:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1143:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
1144:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
1145:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
1146:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
1147:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1148:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
1149:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1150:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1151:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1152:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1153:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE uint32_t UART_GetTXFIFOStatus(const UART_t* const handle)
1154:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1155:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1156:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
1157:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1158:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1159:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1160:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Provides the received data from receive buffer.
1161:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1162:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1163:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return uint8_t: Data read from RBUF.\n
1164:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1165:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1166:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * This can be used in receive mode "Direct" to read the received data.
1167:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1168:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Otherwise it reads the data from OUTR register.
1169:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * User can poll for receive event or configure an interrupt by connecting the
1170:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * external INTERRUPT APP to receive event signals. This API can be used inside the ISR to read the
1171:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1172:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1173:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1174:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1175:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1176:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Pre-condition:
1177:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Configure transmit mode and receive mode as "Direct" with transmit FIFO and receive FIFO ena
1178:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
1179:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infineon", receives 10 bytes and retransmits the received 10 bytes.
1180:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1181:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
1182:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1183:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
1184:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon";
1185:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Rec_Data[10];
1186:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t index = 0;
1187:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1188:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
1189:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
1190:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1191:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Transmit the string "Infineon"
1192:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        while(index < sizeof(Send_Data))
1193:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        {
1194:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_TransmitWord(&UART_0,Send_Data[index]);
1195:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           index++;
1196:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1197:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Wait for transmit buffer interrupt to fill it again with remaining data
1198:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           while((UART_GetTXFIFOStatus(&UART_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0);
1199:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_ClearTXFIFOStatus(&UART_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1200:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        }
1201:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1202:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Configure receive FIFO trigger limit to 9.
1203:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        UART_SetRXFIFOTriggerLimit(&UART_0, 9);
1204:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Receive 10 bytes input
1205:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        index = 0;
1206:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Wait till 10 bytes are received
1207:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        while(!(UART_GetRXFIFOStatus(&UART_0) &
1208:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *             (XMC_USIC_CH_RXFIFO_EVENT_STANDARD | XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE)))
1209:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        {
1210:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *          Rec_Data[index] = UART_GetReceivedWord(&UART_0);
1211:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *          index++;
1212:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *          if(index == 10)
1213:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *          {
1214:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *            break;
1215:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *          }
1216:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1217:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        }
1218:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1219:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        //Transmit the received data
1220:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        index = 0;
1221:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        while(index < 10)
1222:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        {
1223:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_TransmitWord(&UART_0,Rec_Data[index]);
1224:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           index++;
1225:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1226:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Wait for transmit buffer interrupt to fill it again with remaining data
1227:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           while((UART_GetTXFIFOStatus(&UART_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0);
1228:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_ClearTXFIFOStatus(&UART_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1229:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        }
1230:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1231:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1232:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
1233:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1234:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
1235:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
1236:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
1237:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
1238:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1239:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
1240:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1241:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1242:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1243:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1244:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE uint8_t UART_GetReceivedWord(const UART_t* const handle)
1245:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1246:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1247:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   return (uint8_t)XMC_UART_CH_GetReceivedData(handle->channel);
1248:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1249:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1250:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1251:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Transmits a word of data.
1252:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1253:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t \n
1254:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param data Data to be transmitted.\n
1255:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return None\n
1256:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1257:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1258:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Transmits a byte of data through the UART channel.
1259:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If Tx FIFO is configured, the data is placed in the IN[0] register of the USIC channel used.
1260:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * If Tx FIFO is not configured, API waits for the TBUF to be free and then places the data in the 
1261:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * User can poll for receive event or configure interrupt by connecting an
1262:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * external INTERRUPT APP. This API can be used inside the ISR to read the received data.
1263:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1264:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1265:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1266:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1267:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1268:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Precondition:
1269:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Configure transmit mode and receive mode as "Direct"
1270:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
1271:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infinon"
1272:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1273:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
1274:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1275:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
1276:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Send_Data[] = "Infineon";
1277:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Rec_Data[10];
1278:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t index = 0;
1279:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1280:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
1281:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
1282:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1283:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        while(index < sizeof(Send_Data))
1284:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        {
1285:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_TransmitWord(&UART_0,Send_Data[index]);
1286:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           index++;
1287:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1288:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           //Wait for transmit buffer interrupt to fill it again with remaining data
1289:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           while((UART_GetTXFIFOStatus(&UART_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0);
1290:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *           UART_ClearTXFIFOStatus(&UART_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1291:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *        }
1292:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1293:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
1294:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1295:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
1296:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
1297:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
1298:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
1299:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1300:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
1301:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1302:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1303:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1304:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1305:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE void UART_TransmitWord(const UART_t* const handle, uint8_t data)
1306:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1307:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1308:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_UART_CH_Transmit(handle->channel, (uint16_t)data);
1309:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1310:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1311:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1312:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Enables the selected protocol events for interrupt generation.
1313:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1314:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1315:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  events Protocol events to be enabled for interrupt generation. \n
1316:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         \bRange: Use type \aXMC_UART_CH_EVENT_t to select the event. Multiple events can be
1317:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         combined using the bitwise OR operation.\n
1318:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return None\n
1319:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1320:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1321:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1322:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1323:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1324:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * may not yield expected result.
1325:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1326:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1327:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1328:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * * #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR decla
1329:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1330:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Precondition:
1331:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Disable receive FIFO.
1332:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Add INTERRUPT APP and connect the UART APP protocol interrupt signal to the INTERRUPT APP
1333:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // irq signal. Provide the callback function name in INTERRUPT APP as "ProtocolInterrupt".
1334:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //
1335:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Description:
1336:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Generates an event when data loss is detected and transmits a relevent message.
1337:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // To generate the event, transmit more than 2 bytes of data to the UART channel .
1338:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1339:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * int main(void)
1340:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1341:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   DAVE_STATUS_t status;
1342:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1343:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   status = DAVE_Init();
1344:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1345:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   if(status == DAVE_STATUS_FAILURE)
1346:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1347:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     XMC_DEBUG("DAVE APPs initialization failed\n");
1348:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1349:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(1U)
1350:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1351:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1352:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1353:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1354:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Enable the interrupt generation when data loss is detected.
1355:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_EnableEvent(&UART_0, XMC_UART_CH_EVENT_DATA_LOST);
1356:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   while(1U)
1357:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1358:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1359:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1360:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //Protocol interrupt handler
1361:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * void ProtocolInterrupt()
1362:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1363:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint8_t txt_msg[]="Receiver data loss detected";
1364:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit the message to indicate data loss
1365:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_Transmit(&UART_0, txt_msg, sizeof(txt_msg));
1366:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1367:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1368:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1369:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE void UART_EnableEvent(const UART_t* const handle, uint32_t events)
1370:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1371:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1372:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_UART_CH_EnableEvent(handle->channel, events);
1373:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1374:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1375:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1376:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Disables selected events from generating interrupt.
1377:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1378:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1379:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  events Events to be disabled from generating interrupt. \n
1380:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         \bRange: Use type \aXMC_UART_CH_EVENT_t to select the event. Multiple events can be
1381:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *         combined using the bitwise OR operation.\n
1382:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return None
1383:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1384:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1385:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1386:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1387:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1388:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1389:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declara
1390:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1391:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Precondition:
1392:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Add INTERRUPT APP and connect the UART APP protocol interrupt signal to the INTERRUPT APP
1393:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // irq signal. Provide the callback function name in INTERRUPT APP as "ProtocolInterrupt".
1394:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * //
1395:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // Description: The example configures protocol interrupt for data loss detection.
1396:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // When the data loss interrupt occurs, the receive FIFO is cleared. After the receive FIFO
1397:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * // is cleared, the channel can receive few bytes till the FIFO gets filled.
1398:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1399:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * int main(void)
1400:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1401:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   DAVE_STATUS_t status;
1402:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1403:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   status = DAVE_Init();
1404:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1405:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   if(status == DAVE_STATUS_FAILURE)
1406:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1407:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     XMC_DEBUG("DAVE APPs initialization failed\n");
1408:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1409:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(1U)
1410:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1411:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1412:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1413:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1414:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Enable interrupt generation when data loss is detected
1415:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_EnableEvent(&UART_0, XMC_UART_CH_EVENT_DATA_LOST);
1416:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   while(1U)
1417:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1418:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1419:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1420:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * void ProtocolInterrupt()
1421:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1422:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint8_t txt_msg[]="Receiver data loss detected";
1423:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_Transmit(&UART_0, txt_msg, sizeof(txt_msg));
1424:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_DisableEvent(&UART_0, XMC_UART_CH_EVENT_DATA_LOST);
1425:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Clear receive FIFO so that data will be received.
1426:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   XMC_USIC_CH_RXFIFO_Flush(UART_0.channel);
1427:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_EnableEvent(&UART_0, XMC_UART_CH_EVENT_DATA_LOST);
1428:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1429:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1430:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1431:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1432:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE void UART_DisableEvent(const UART_t* const handle, uint32_t events)
1433:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1434:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1435:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_UART_CH_DisableEvent(handle->channel, events);
1436:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1437:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1438:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1439:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Checks if the transmit FIFO is full.
1440:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1441:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1442:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1443:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return bool Status of transmit FIFO filling level.
1444:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1445:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1446:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1447:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Checks the status using the register TRBSR. Can be used while filling
1448:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * data to the transmit FIFO.
1449:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1450:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1451:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1452:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1453:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1454:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  // Precondition:
1455:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  // Transmit mode should be "Direct"
1456:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Description:
1457:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //Transmits a string using FIFO.
1458:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1459:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * uint8_t send_data[] = "Infineon Technologies";
1460:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * int main(void)
1461:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1462:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   DAVE_STATUS_t status;
1463:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint32_t loc_index;
1464:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1465:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   status = DAVE_Init();           // Initialization of DAVE APPs
1466:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1467:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   if(status == DAVE_STATUS_FAILURE)
1468:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1469:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     XMC_DEBUG("DAVE APPs initialization failed\n");
1470:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1471:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(1U)
1472:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1473:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1474:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1475:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1476:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   for(loc_index = 0; loc_index < sizeof(send_data); loc_index++)
1477:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1478:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //Wait when Tx FIFO is full
1479:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(UART_IsTXFIFOFull(&UART_0))
1480:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1481:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1482:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_TransmitWord(&UART_0, send_data[loc_index]);
1483:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1484:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   while(1U)
1485:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1486:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1487:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1488:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1489:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1490:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE bool UART_IsTXFIFOFull(const UART_t* const handle)
1491:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1492:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1493:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1494:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1495:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1496:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1497:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Checks if the receive FIFO is empty.
1498:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1499:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1500:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1501:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return bool Status of receive FIFO filling level.
1502:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1503:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *                       \afalse- if receive FIFO still has data.<br>
1504:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1505:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Checks the status using the register TRBSR. Can be used while reading
1506:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * data from the receive FIFO.
1507:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1508:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1509:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1510:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1511:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1512:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  // Precondition:
1513:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  // Receive mode should be "Direct"
1514:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //
1515:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  // Description:
1516:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  // Receives 10 bytes and transmits the received 10 bytes.
1517:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1518:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * uint8_t send_text[] = "Enter 10 bytes:";
1519:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * uint8_t rec_data[10];
1520:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * int main(void)
1521:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * {
1522:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   DAVE_STATUS_t status;
1523:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint32_t loc_index;
1524:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1525:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   status = DAVE_Init();           // Initialization of DAVE APPs
1526:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1527:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   if(status == DAVE_STATUS_FAILURE)
1528:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1529:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     XMC_DEBUG("DAVE APPs initialization failed\n");
1530:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1531:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(1U)
1532:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1533:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1534:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1535:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1536:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_Transmit(&UART_0, send_text, sizeof(send_text));
1537:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   for(loc_index = 0; loc_index < sizeof(rec_data); loc_index++)
1538:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1539:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     //Wait when Rx FIFO is empty
1540:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     while(UART_IsRXFIFOEmpty(&UART_0))
1541:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1542:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1543:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     rec_data[loc_index] = UART_GetReceivedWord(&UART_0);
1544:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1545:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmit the received data
1546:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   UART_Transmit(&UART_0, rec_data, sizeof(rec_data));
1547:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   while(1U)
1548:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1549:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   }
1550:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * }
1551:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1552:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1553:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE bool UART_IsRXFIFOEmpty(const UART_t* const handle)
1554:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1555:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1556:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1557:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1558:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1559:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1560:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Configures trigger limit for the transmit FIFO.
1561:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1562:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1563:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
1564:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *               \bRange: 0 to transmit FIFO size.\n
1565:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
1566:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
1567:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1568:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return None\n
1569:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1570:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1571:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
1572:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
1573:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * below the trigger limit.
1574:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1575:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1576:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1577:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1578:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1579:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Precondition:
1580:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Configure receive mode as "Direct"
1581:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Add an instance of the INTERRUPT APP and connect the UART event_fifo_transmit_buffer_interru
1582:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //signal to the INTERRUPT sr_irq signal.
1583:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Provide the callback function name in INTERRUPT APP as "tx_cb"
1584:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
1585:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Transmits the string "Infineon" using FIFO. Configures the FIFO to generate event when the F
1586:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //is empty. Puts one byte to the FIFO when the event is generated.
1587:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1588:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint8_t Send_Data[] = "Infineon";
1589:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint8_t index = 0;
1590:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
1591:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1592:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
1593:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     uint8_t Rec_Data[10];
1594:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1595:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
1596:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
1597:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1598:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Configure transmit interrupt generation when the transmit FIFO is empty
1599:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_SetTXFIFOTriggerLimit(&UART_0, 1);
1600:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Put one word to the FIFO
1601:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_TransmitWord(&UART_0,Send_Data[index]);
1602:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       index++;
1603:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1604:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
1605:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1606:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
1607:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
1608:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
1609:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
1610:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1611:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
1612:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1613:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1614:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //INTERRUPT APP callback function
1615:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  void tx_cb()
1616:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  {
1617:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *    if(index < sizeof(Send_Data))
1618:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *    {
1619:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      //Put one word to the FIFO
1620:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      UART_TransmitWord(&UART_0,Send_Data[index]);
1621:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      index++;
1622:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *    }
1623:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1624:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1625:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1626:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE void UART_SetTXFIFOTriggerLimit(const UART_t* const handle, uint32_t limit)
1627:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
1628:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1629:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, handle->config->tx_fifo_size, limit);
1630:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
1631:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** 
1632:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** /**
1633:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @brief Configures trigger limit for the receive FIFO.
1634:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1635:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  handle UART APP handle pointer of type @ref UART_t
1636:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1637:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *               \bRange: 0 to receive FIFO size.\n
1638:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1639:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1640:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1641:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @return None\n
1642:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1643:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * \par<b>Description:</b><br>
1644:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1645:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1646:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * above the trigger limit.
1647:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1648:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * Example Usage:
1649:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @code
1650:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1651:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1652:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Precondition:
1653:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Configure receive mode as "Direct"
1654:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Add an instance of the INTERRUPT APP and connect the UART event_fifo_receive_buffer_interrup
1655:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //signal to the INTERRUPT sr_irq signal.
1656:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Provide the callback function name in INTERRUPT APP as "rx_cb"
1657:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   //Description:
1658:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1659:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint8_t Rec_Data[10];
1660:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   uint8_t index = 0;
1661:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   int main(void)
1662:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *   {
1663:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     UART_STATUS_t init_status;
1664:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1665:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     init_status = (UART_STATUS_t)UART_Init(&UART_0);
1666:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     if(init_status == UART_STATUS_SUCCESS)
1667:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1668:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Configure receive interrupt generation when 10 bytes are received
1669:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_SetRXFIFOTriggerLimit(&UART_0, 9);
1670:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Wait for the data to be received.
1671:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(index < 10);
1672:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Transmit the received data
1673:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       UART_Transmit(&UART_0, Rec_Data, 10);
1674:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       //Wait for transmission to finish
1675:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *       while(UART_0.runtime->tx_busy);
1676:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1677:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     else
1678:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     {
1679:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      XMC_DEBUG("main: Application initialization failed");
1680:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      while(1U)
1681:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      {
1682:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      }
1683:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *     }
1684:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      return 1U;
1685:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1686:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *
1687:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  //INTERRUPT APP callback function
1688:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  void rx_cb()
1689:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  {
1690:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *    while((index < 10) && (!XMC_USIC_CH_RXFIFO_IsEmpty(UART_0.channel)))
1691:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *    {
1692:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      //Read data from FIFO
1693:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      Rec_Data[index] = UART_GetReceivedWord(&UART_0);
1694:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *      index++;
1695:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *    }
1696:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  *  }
1697:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  * @endcode
1698:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****  */
1699:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** __STATIC_INLINE void UART_SetRXFIFOTriggerLimit(const UART_t* const handle, uint32_t limit)
1700:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** {
 218              	 .loc 3 1700 0
 219              	 .cfi_startproc
 220              	 
 221              	 
 222 0000 80B5     	 push {r7,lr}
 223              	.LCFI22:
 224              	 .cfi_def_cfa_offset 8
 225              	 .cfi_offset 7,-8
 226              	 .cfi_offset 14,-4
 227 0002 82B0     	 sub sp,sp,#8
 228              	.LCFI23:
 229              	 .cfi_def_cfa_offset 16
 230 0004 00AF     	 add r7,sp,#0
 231              	.LCFI24:
 232              	 .cfi_def_cfa_register 7
 233 0006 7860     	 str r0,[r7,#4]
 234 0008 3960     	 str r1,[r7]
1701:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_ASSERT("UART APP handle invalid", (handle != NULL))
1702:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, handle->config->rx_fifo_size, limit);
 235              	 .loc 3 1702 0
 236 000a 7B68     	 ldr r3,[r7,#4]
 237 000c 1A68     	 ldr r2,[r3]
 238 000e 7B68     	 ldr r3,[r7,#4]
 239 0010 5B68     	 ldr r3,[r3,#4]
 240 0012 93F82430 	 ldrb r3,[r3,#36]
 241 0016 1046     	 mov r0,r2
 242 0018 1946     	 mov r1,r3
 243 001a 3A68     	 ldr r2,[r7]
 244 001c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
1703:C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART\uart.h **** }
 245              	 .loc 3 1703 0
 246 0020 0837     	 adds r7,r7,#8
 247              	.LCFI25:
 248              	 .cfi_def_cfa_offset 8
 249 0022 BD46     	 mov sp,r7
 250              	.LCFI26:
 251              	 .cfi_def_cfa_register 13
 252              	 
 253 0024 80BD     	 pop {r7,pc}
 254              	 .cfi_endproc
 255              	.LFE300:
 257              	 .comm polynoms,40,4
 258              	 .global pressure
 259              	 .section .bss.pressure,"aw",%nobits
 260              	 .align 2
 263              	pressure:
 264 0000 00000000 	 .space 4
 265              	 .global temperature
 266              	 .section .bss.temperature,"aw",%nobits
 267              	 .align 2
 270              	temperature:
 271 0000 00000000 	 .space 4
 272              	 .comm PressureFIR,56,4
 273              	 .global powerD
 274              	 .section .bss.powerD,"aw",%nobits
 275              	 .align 2
 278              	powerD:
 279 0000 00000000 	 .space 4
 280              	 .global yawD_dot
 281              	 .section .bss.yawD_dot,"aw",%nobits
 282              	 .align 2
 285              	yawD_dot:
 286 0000 00000000 	 .space 4
 287              	 .global pitchD
 288              	 .section .bss.pitchD,"aw",%nobits
 289              	 .align 2
 292              	pitchD:
 293 0000 00000000 	 .space 4
 294              	 .global rollD
 295              	 .section .bss.rollD,"aw",%nobits
 296              	 .align 2
 299              	rollD:
 300 0000 00000000 	 .space 4
 301              	 .comm YPR,12,4
 302              	 .global u_yaw_dot
 303              	 .section .bss.u_yaw_dot,"aw",%nobits
 304              	 .align 2
 307              	u_yaw_dot:
 308 0000 00000000 	 .space 4
 309              	 .global u_pitch
 310              	 .section .bss.u_pitch,"aw",%nobits
 311              	 .align 2
 314              	u_pitch:
 315 0000 00000000 	 .space 4
 316              	 .global u_roll
 317              	 .section .bss.u_roll,"aw",%nobits
 318              	 .align 2
 321              	u_roll:
 322 0000 00000000 	 .space 4
 323              	 .comm PWM_percent,16,4
 324              	 .global parameter
 325              	 .section .data.parameter,"aw",%progbits
 326              	 .align 2
 329              	parameter:
 330 0000 6F12033B 	 .word 990057071
 331 0004 0000F041 	 .word 1106247680
 332 0008 CDCC4C3E 	 .word 1045220557
 333 000c 0000803F 	 .word 1065353216
 334 0010 0000C843 	 .word 1137180672
 335 0014 0000F041 	 .word 1106247680
 336 0018 CDCC4C3E 	 .word 1045220557
 337 001c 0000803F 	 .word 1065353216
 338 0020 0000C843 	 .word 1137180672
 339 0024 0000C842 	 .word 1120403456
 340              	 .global __aeabi_f2d
 341              	 .global __aeabi_dmul
 342              	 .global __aeabi_dadd
 343              	 .global __aeabi_d2f
 344              	 .section .text.CCU43_1_IRQHandler,"ax",%progbits
 345              	 .align 2
 346              	 .global CCU43_1_IRQHandler
 347              	 .thumb
 348              	 .thumb_func
 350              	CCU43_1_IRQHandler:
 351              	.LFB451:
 352              	 .file 4 "../_Quadrocopter/Attitude_Control/AttitudeController.c"
   1:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
   2:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Author(s) Identity                                    **
   3:../_Quadrocopter/Attitude_Control/AttitudeController.c **** ********************************************************************************
   4:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                                                                            **
   5:../_Quadrocopter/Attitude_Control/AttitudeController.c **** ** Initials     Name                                                          **
   6:../_Quadrocopter/Attitude_Control/AttitudeController.c **** ** ---------------------------------------------------------------------------**
   7:../_Quadrocopter/Attitude_Control/AttitudeController.c **** ** AM           Andreas Mark                                                  **
   8:../_Quadrocopter/Attitude_Control/AttitudeController.c **** ** DW           Dominik Wieland                                               **
   9:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                                                                            **
  10:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                                                                            **
  11:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  12:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  13:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  14:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Revision Control History                              **
  15:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  16:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*
  17:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  * V0.0: 29-12-2014, AM:  Initial Version
  18:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  * V0.1: 21-07-2016, DW:  Port of SW from DAVE3 to DAVE4
  19:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
  20:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  21:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  22:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  23:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Includes                                              **
  24:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  25:../_Quadrocopter/Attitude_Control/AttitudeController.c **** #include "AttitudeController.h"
  26:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  27:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  28:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Private Constant Definitions to be changed            **
  29:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  30:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  31:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  32:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Private Macro Definitions                             **
  33:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  34:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  35:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  36:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Global Type Definitions                               **
  37:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  38:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  39:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  40:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Private Type Definitions                              **
  41:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  42:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  43:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  44:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Global Function Declarations                          **
  45:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  46:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  47:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  48:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Private Function Declarations                         **
  49:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  50:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  51:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  52:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Global Constant Definitions                           **
  53:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  54:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  55:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  56:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Private Constant Definitions                          **
  57:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  58:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  59:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  60:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Global Variable Definitions                           **
  61:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
  62:../_Quadrocopter/Attitude_Control/AttitudeController.c **** extern const ADC_MEASUREMENT_ISR_t backgnd_rs_intr_handle; /**< global ADC-NVIC struct  */
  63:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  64:../_Quadrocopter/Attitude_Control/AttitudeController.c **** CONTROLLERPOLYNOMIALS polynoms;/**< global structure for controler polynomials*/
  65:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  66:../_Quadrocopter/Attitude_Control/AttitudeController.c **** //DPS3100 Pressure-Sensor
  67:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float pressure = 0;/**< global variable for storing current pressure value*/
  68:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float temperature = 0;/**< global variable for storing current temperature value*/
  69:../_Quadrocopter/Attitude_Control/AttitudeController.c **** struct structFIR PressureFIR;/**< global struct for filtering pressure values*/
  70:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  71:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float powerD = 0.0f;/* throttle value of remote, range: 0 - 100*/
  72:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float yawD_dot = 0.0f;/* yaw value of remote, range: -90 - +90*/
  73:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float pitchD = 0.0f;/* pitchD value of remote, range: -30 - +30*/
  74:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float rollD = 0.0f;/* rollD value of remote, range: -30 - +30*/
  75:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float YPR[3];
  76:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float u_yaw_dot = 0.0f;/* output of angle-rate controller for yaw*/
  77:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float u_pitch = 0.0f;/* output of angle controller for pitch*/
  78:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float u_roll = 0.0f;/* output of angle controller for roll*/
  79:../_Quadrocopter/Attitude_Control/AttitudeController.c **** float PWM_percent[4];/* scaled motor power from controller output, range: 0 - 100*/
  80:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  81:../_Quadrocopter/Attitude_Control/AttitudeController.c **** #ifdef CopterRocks
  82:../_Quadrocopter/Attitude_Control/AttitudeController.c **** CONTROLLERPARAMETER parameter =
  83:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
  84:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.T=0.002f,
  85:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.P_roll=30.0f,
  86:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.I_roll=0.2f,
  87:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.D_roll=1.0f,			//1.1f for BlHeli / 1.0f for standard CopterRocks
  88:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.N_roll=400.0,
  89:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.P_pitch=30.0,
  90:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.I_pitch=0.2f,
  91:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.D_pitch=1.0f, 			//1.1f for BlHeli / 1.0f for standard CopterRocks
  92:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.N_pitch=400.0f,
  93:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		.P_yaw=100.0f
  94:../_Quadrocopter/Attitude_Control/AttitudeController.c **** };
  95:../_Quadrocopter/Attitude_Control/AttitudeController.c **** #endif
  96:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  97:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
  98:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
  99:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Private Variable Definitions                          **
 100:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
 101:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 102:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /*******************************************************************************
 103:../_Quadrocopter/Attitude_Control/AttitudeController.c **** **                      Global Function Definitions                           **
 104:../_Quadrocopter/Attitude_Control/AttitudeController.c **** *******************************************************************************/
 105:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 106:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 107:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief Interrupt-Service-Routine of the Control_Timer
 108:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *
 109:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details Central Control Routine for Quadcopter\n
 110:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  This routine gets the momentary position and the desired position \n
 111:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  and calculates new output for motors and transmits it via DaisyChain to the \n
 112:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  Electric Speed Controller
 113:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *
 114:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 115:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 116:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void Control_Timer_ISR(void)
 117:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 353              	 .loc 4 117 0
 354              	 .cfi_startproc
 355              	 
 356              	 
 357 0000 80B5     	 push {r7,lr}
 358              	.LCFI27:
 359              	 .cfi_def_cfa_offset 8
 360              	 .cfi_offset 7,-8
 361              	 .cfi_offset 14,-4
 362 0002 8AB0     	 sub sp,sp,#40
 363              	.LCFI28:
 364              	 .cfi_def_cfa_offset 48
 365 0004 04AF     	 add r7,sp,#16
 366              	.LCFI29:
 367              	 .cfi_def_cfa 7,32
 118:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 119:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 120:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	static float x_pitch[CONTROL_ORDER];
 121:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	static float x_roll[CONTROL_ORDER];
 122:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 123:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 124:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	uint32_t PWM_APP_OUTPUT[4]={0,0,0,0};
 368              	 .loc 4 124 0
 369 0006 0023     	 movs r3,#0
 370 0008 BB60     	 str r3,[r7,#8]
 371 000a 0023     	 movs r3,#0
 372 000c FB60     	 str r3,[r7,#12]
 373 000e 0023     	 movs r3,#0
 374 0010 3B61     	 str r3,[r7,#16]
 375 0012 0023     	 movs r3,#0
 376 0014 7B61     	 str r3,[r7,#20]
 125:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	uint8_t height_control = 0;/* for enabling height-control, activated: 0xff, disabled: 0x00*/
 377              	 .loc 4 125 0
 378 0016 0023     	 movs r3,#0
 379 0018 FB71     	 strb r3,[r7,#7]
 126:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 127:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	GetAngles(YPR);
 380              	 .loc 4 127 0
 381 001a 8F48     	 ldr r0,.L16+8
 382 001c FFF7FEFF 	 bl GetAngles
 128:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	GetRCData(&powerD, &height_control, &yawD_dot, &pitchD, &rollD);
 383              	 .loc 4 128 0
 384 0020 FA1D     	 adds r2,r7,#7
 385 0022 8E4B     	 ldr r3,.L16+12
 386 0024 0093     	 str r3,[sp]
 387 0026 8E48     	 ldr r0,.L16+16
 388 0028 1146     	 mov r1,r2
 389 002a 8E4A     	 ldr r2,.L16+20
 390 002c 8E4B     	 ldr r3,.L16+24
 391 002e FFF7FEFF 	 bl GetRCData
 129:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//yaw control
 130:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	AngleRateController(&yawD_dot, &YPR[0], &parameter.P_yaw, &u_yaw_dot);
 392              	 .loc 4 130 0
 393 0032 8C48     	 ldr r0,.L16+20
 394 0034 8849     	 ldr r1,.L16+8
 395 0036 8D4A     	 ldr r2,.L16+28
 396 0038 8D4B     	 ldr r3,.L16+32
 397 003a FFF7FEFF 	 bl AngleRateController
 131:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//pitch control
 132:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	AngleController(&pitchD, &YPR[1], CONTROL_ORDER, polynoms.a_pitch, polynoms.b_pitch, x_pitch, &u_p
 398              	 .loc 4 132 0
 399 003e 8D4B     	 ldr r3,.L16+36
 400 0040 0093     	 str r3,[sp]
 401 0042 8D4B     	 ldr r3,.L16+40
 402 0044 0193     	 str r3,[sp,#4]
 403 0046 8D4B     	 ldr r3,.L16+44
 404 0048 0293     	 str r3,[sp,#8]
 405 004a 8748     	 ldr r0,.L16+24
 406 004c 8C49     	 ldr r1,.L16+48
 407 004e 0222     	 movs r2,#2
 408 0050 8C4B     	 ldr r3,.L16+52
 409 0052 FFF7FEFF 	 bl AngleController
 133:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//roll control
 134:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	AngleController(&rollD, &YPR[2], CONTROL_ORDER, polynoms.a_roll, polynoms.b_roll, x_roll, &u_roll)
 410              	 .loc 4 134 0
 411 0056 8C4B     	 ldr r3,.L16+56
 412 0058 0093     	 str r3,[sp]
 413 005a 8C4B     	 ldr r3,.L16+60
 414 005c 0193     	 str r3,[sp,#4]
 415 005e 8C4B     	 ldr r3,.L16+64
 416 0060 0293     	 str r3,[sp,#8]
 417 0062 7E48     	 ldr r0,.L16+12
 418 0064 8B49     	 ldr r1,.L16+68
 419 0066 0222     	 movs r2,#2
 420 0068 8B4B     	 ldr r3,.L16+72
 421 006a FFF7FEFF 	 bl AngleController
 135:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//generate actuator values
 136:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	CreatePulseWidth(&u_roll, &u_pitch, &u_yaw_dot, &powerD, PWM_percent);
 422              	 .loc 4 136 0
 423 006e 8B4B     	 ldr r3,.L16+76
 424 0070 0093     	 str r3,[sp]
 425 0072 8748     	 ldr r0,.L16+64
 426 0074 8149     	 ldr r1,.L16+44
 427 0076 7E4A     	 ldr r2,.L16+32
 428 0078 794B     	 ldr r3,.L16+16
 429 007a FFF7FEFF 	 bl CreatePulseWidth
 137:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 138:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (powerD > 5.0f){
 430              	 .loc 4 138 0
 431 007e 784B     	 ldr r3,.L16+16
 432 0080 D3ED007A 	 flds s15,[r3]
 433 0084 B1EE047A 	 fconsts s14,#20
 434 0088 F4EEC77A 	 fcmpes s15,s14
 435 008c F1EE10FA 	 fmstat
 436 0090 40F3C580 	 ble .L15
 139:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_percent[0]=0.45*PWM_percent[0]+45;
 437              	 .loc 4 139 0
 438 0094 814B     	 ldr r3,.L16+76
 439 0096 1B68     	 ldr r3,[r3]
 440 0098 1846     	 mov r0,r3
 441 009a FFF7FEFF 	 bl __aeabi_f2d
 442 009e 0246     	 mov r2,r0
 443 00a0 0B46     	 mov r3,r1
 444 00a2 1046     	 mov r0,r2
 445 00a4 1946     	 mov r1,r3
 446 00a6 6AA3     	 adr r3,.L16
 447 00a8 D3E90023 	 ldrd r2,[r3]
 448 00ac FFF7FEFF 	 bl __aeabi_dmul
 449 00b0 0246     	 mov r2,r0
 450 00b2 0B46     	 mov r3,r1
 451 00b4 1046     	 mov r0,r2
 452 00b6 1946     	 mov r1,r3
 453 00b8 4FF00002 	 mov r2,#0
 454 00bc 784B     	 ldr r3,.L16+80
 455 00be FFF7FEFF 	 bl __aeabi_dadd
 456 00c2 0246     	 mov r2,r0
 457 00c4 0B46     	 mov r3,r1
 458 00c6 1046     	 mov r0,r2
 459 00c8 1946     	 mov r1,r3
 460 00ca FFF7FEFF 	 bl __aeabi_d2f
 461 00ce 0246     	 mov r2,r0
 462 00d0 724B     	 ldr r3,.L16+76
 463 00d2 1A60     	 str r2,[r3]
 140:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_percent[1]=0.45*PWM_percent[1]+45;
 464              	 .loc 4 140 0
 465 00d4 714B     	 ldr r3,.L16+76
 466 00d6 5B68     	 ldr r3,[r3,#4]
 467 00d8 1846     	 mov r0,r3
 468 00da FFF7FEFF 	 bl __aeabi_f2d
 469 00de 0246     	 mov r2,r0
 470 00e0 0B46     	 mov r3,r1
 471 00e2 1046     	 mov r0,r2
 472 00e4 1946     	 mov r1,r3
 473 00e6 5AA3     	 adr r3,.L16
 474 00e8 D3E90023 	 ldrd r2,[r3]
 475 00ec FFF7FEFF 	 bl __aeabi_dmul
 476 00f0 0246     	 mov r2,r0
 477 00f2 0B46     	 mov r3,r1
 478 00f4 1046     	 mov r0,r2
 479 00f6 1946     	 mov r1,r3
 480 00f8 4FF00002 	 mov r2,#0
 481 00fc 684B     	 ldr r3,.L16+80
 482 00fe FFF7FEFF 	 bl __aeabi_dadd
 483 0102 0246     	 mov r2,r0
 484 0104 0B46     	 mov r3,r1
 485 0106 1046     	 mov r0,r2
 486 0108 1946     	 mov r1,r3
 487 010a FFF7FEFF 	 bl __aeabi_d2f
 488 010e 0246     	 mov r2,r0
 489 0110 624B     	 ldr r3,.L16+76
 490 0112 5A60     	 str r2,[r3,#4]
 141:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_percent[2]=0.45*PWM_percent[2]+45;
 491              	 .loc 4 141 0
 492 0114 614B     	 ldr r3,.L16+76
 493 0116 9B68     	 ldr r3,[r3,#8]
 494 0118 1846     	 mov r0,r3
 495 011a FFF7FEFF 	 bl __aeabi_f2d
 496 011e 0246     	 mov r2,r0
 497 0120 0B46     	 mov r3,r1
 498 0122 1046     	 mov r0,r2
 499 0124 1946     	 mov r1,r3
 500 0126 4AA3     	 adr r3,.L16
 501 0128 D3E90023 	 ldrd r2,[r3]
 502 012c FFF7FEFF 	 bl __aeabi_dmul
 503 0130 0246     	 mov r2,r0
 504 0132 0B46     	 mov r3,r1
 505 0134 1046     	 mov r0,r2
 506 0136 1946     	 mov r1,r3
 507 0138 4FF00002 	 mov r2,#0
 508 013c 584B     	 ldr r3,.L16+80
 509 013e FFF7FEFF 	 bl __aeabi_dadd
 510 0142 0246     	 mov r2,r0
 511 0144 0B46     	 mov r3,r1
 512 0146 1046     	 mov r0,r2
 513 0148 1946     	 mov r1,r3
 514 014a FFF7FEFF 	 bl __aeabi_d2f
 515 014e 0246     	 mov r2,r0
 516 0150 524B     	 ldr r3,.L16+76
 517 0152 9A60     	 str r2,[r3,#8]
 142:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_percent[3]=0.45*PWM_percent[3]+45;
 518              	 .loc 4 142 0
 519 0154 514B     	 ldr r3,.L16+76
 520 0156 DB68     	 ldr r3,[r3,#12]
 521 0158 1846     	 mov r0,r3
 522 015a FFF7FEFF 	 bl __aeabi_f2d
 523 015e 0246     	 mov r2,r0
 524 0160 0B46     	 mov r3,r1
 525 0162 1046     	 mov r0,r2
 526 0164 1946     	 mov r1,r3
 527 0166 3AA3     	 adr r3,.L16
 528 0168 D3E90023 	 ldrd r2,[r3]
 529 016c FFF7FEFF 	 bl __aeabi_dmul
 530 0170 0246     	 mov r2,r0
 531 0172 0B46     	 mov r3,r1
 532 0174 1046     	 mov r0,r2
 533 0176 1946     	 mov r1,r3
 534 0178 4FF00002 	 mov r2,#0
 535 017c 484B     	 ldr r3,.L16+80
 536 017e FFF7FEFF 	 bl __aeabi_dadd
 537 0182 0246     	 mov r2,r0
 538 0184 0B46     	 mov r3,r1
 539 0186 1046     	 mov r0,r2
 540 0188 1946     	 mov r1,r3
 541 018a FFF7FEFF 	 bl __aeabi_d2f
 542 018e 0246     	 mov r2,r0
 543 0190 424B     	 ldr r3,.L16+76
 544 0192 DA60     	 str r2,[r3,#12]
 143:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 144:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_APP_OUTPUT[0]= (uint32_t) (PWM_percent[0]*100u);
 545              	 .loc 4 144 0
 546 0194 414B     	 ldr r3,.L16+76
 547 0196 D3ED007A 	 flds s15,[r3]
 548 019a 9FED427A 	 flds s14,.L16+84
 549 019e 67EE877A 	 fmuls s15,s15,s14
 550 01a2 FCEEE77A 	 ftouizs s15,s15
 551 01a6 17EE903A 	 fmrs r3,s15
 552 01aa BB60     	 str r3,[r7,#8]
 145:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_APP_OUTPUT[1]= (uint32_t) (PWM_percent[1]*100u);
 553              	 .loc 4 145 0
 554 01ac 3B4B     	 ldr r3,.L16+76
 555 01ae D3ED017A 	 flds s15,[r3,#4]
 556 01b2 9FED3C7A 	 flds s14,.L16+84
 557 01b6 67EE877A 	 fmuls s15,s15,s14
 558 01ba FCEEE77A 	 ftouizs s15,s15
 559 01be 17EE903A 	 fmrs r3,s15
 560 01c2 FB60     	 str r3,[r7,#12]
 146:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_APP_OUTPUT[2]= (uint32_t) (PWM_percent[2]*100u);
 561              	 .loc 4 146 0
 562 01c4 354B     	 ldr r3,.L16+76
 563 01c6 D3ED027A 	 flds s15,[r3,#8]
 564 01ca 9FED367A 	 flds s14,.L16+84
 565 01ce 67EE877A 	 fmuls s15,s15,s14
 566 01d2 FCEEE77A 	 ftouizs s15,s15
 567 01d6 17EE903A 	 fmrs r3,s15
 568 01da 3B61     	 str r3,[r7,#16]
 147:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_APP_OUTPUT[3]= (uint32_t) (PWM_percent[3]*100u);
 569              	 .loc 4 147 0
 570 01dc 2F4B     	 ldr r3,.L16+76
 571 01de D3ED037A 	 flds s15,[r3,#12]
 572 01e2 9FED307A 	 flds s14,.L16+84
 573 01e6 67EE877A 	 fmuls s15,s15,s14
 574 01ea FCEEE77A 	 ftouizs s15,s15
 575 01ee 17EE903A 	 fmrs r3,s15
 576 01f2 7B61     	 str r3,[r7,#20]
 148:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 149:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_1,PWM_APP_OUTPUT[2]);
 577              	 .loc 4 149 0
 578 01f4 3B69     	 ldr r3,[r7,#16]
 579 01f6 2C48     	 ldr r0,.L16+88
 580 01f8 1946     	 mov r1,r3
 581 01fa FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 150:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_2,PWM_APP_OUTPUT[0]);
 582              	 .loc 4 150 0
 583 01fe BB68     	 ldr r3,[r7,#8]
 584 0200 2A48     	 ldr r0,.L16+92
 585 0202 1946     	 mov r1,r3
 586 0204 FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 151:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_3,PWM_APP_OUTPUT[1]);
 587              	 .loc 4 151 0
 588 0208 FB68     	 ldr r3,[r7,#12]
 589 020a 2948     	 ldr r0,.L16+96
 590 020c 1946     	 mov r1,r3
 591 020e FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 152:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_4,PWM_APP_OUTPUT[3]);
 592              	 .loc 4 152 0
 593 0212 7B69     	 ldr r3,[r7,#20]
 594 0214 2748     	 ldr r0,.L16+100
 595 0216 1946     	 mov r1,r3
 596 0218 FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 597 021c 13E0     	 b .L10
 598              	.L15:
 153:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	}else
 154:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	{
 155:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_1,4500u);
 599              	 .loc 4 155 0
 600 021e 2248     	 ldr r0,.L16+88
 601 0220 41F29411 	 movw r1,#4500
 602 0224 FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 156:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_2,4500u);
 603              	 .loc 4 156 0
 604 0228 2048     	 ldr r0,.L16+92
 605 022a 41F29411 	 movw r1,#4500
 606 022e FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 157:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_3,4500u);
 607              	 .loc 4 157 0
 608 0232 1F48     	 ldr r0,.L16+96
 609 0234 41F29411 	 movw r1,#4500
 610 0238 FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 158:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_CCU4_SetDutyCycle(&PWM_OUTPUT_4,4500u);
 611              	 .loc 4 158 0
 612 023c 1D48     	 ldr r0,.L16+100
 613 023e 41F29411 	 movw r1,#4500
 614 0242 FFF7FEFF 	 bl PWM_CCU4_SetDutyCycle
 615              	.L10:
 159:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	}
 160:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 161:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 616              	 .loc 4 161 0
 617 0246 1837     	 adds r7,r7,#24
 618              	.LCFI30:
 619              	 .cfi_def_cfa_offset 8
 620 0248 BD46     	 mov sp,r7
 621              	.LCFI31:
 622              	 .cfi_def_cfa_register 13
 623              	 
 624 024a 80BD     	 pop {r7,pc}
 625              	.L17:
 626 024c AFF30080 	 .align 3
 627              	.L16:
 628 0250 CDCCCCCC 	 .word -858993459
 629 0254 CCCCDC3F 	 .word 1071434956
 630 0258 00000000 	 .word YPR
 631 025c 00000000 	 .word rollD
 632 0260 00000000 	 .word powerD
 633 0264 00000000 	 .word yawD_dot
 634 0268 00000000 	 .word pitchD
 635 026c 24000000 	 .word parameter+36
 636 0270 00000000 	 .word u_yaw_dot
 637 0274 1C000000 	 .word polynoms+28
 638 0278 00000000 	 .word x_pitch.16478
 639 027c 00000000 	 .word u_pitch
 640 0280 04000000 	 .word YPR+4
 641 0284 08000000 	 .word polynoms+8
 642 0288 10000000 	 .word polynoms+16
 643 028c 00000000 	 .word x_roll.16479
 644 0290 00000000 	 .word u_roll
 645 0294 08000000 	 .word YPR+8
 646 0298 00000000 	 .word polynoms
 647 029c 00000000 	 .word PWM_percent
 648 02a0 00804640 	 .word 1078362112
 649 02a4 0000C842 	 .word 1120403456
 650 02a8 00000000 	 .word PWM_OUTPUT_1
 651 02ac 00000000 	 .word PWM_OUTPUT_2
 652 02b0 00000000 	 .word PWM_OUTPUT_3
 653 02b4 00000000 	 .word PWM_OUTPUT_4
 654              	 .cfi_endproc
 655              	.LFE451:
 657              	 .section .text.AngleController,"ax",%progbits
 658              	 .align 2
 659              	 .global AngleController
 660              	 .thumb
 661              	 .thumb_func
 663              	AngleController:
 664              	.LFB452:
 162:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 163:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 164:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief PID controller for angle based quadcopter stabilization
 165:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  
 166:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] r Reference inputs (RC)
 167:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] y Current output value of the sensor
 168:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] n Degree of control polynomial
 169:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] a Coefficient of the numerator and denominator polynomials of the controller
 170:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] b Coefficient of the numerator and denominator polynomials of the controller
 171:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] x
 172:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] u Controller output
 173:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  
 174:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 175:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void AngleController(float *r, float *y, int n, const float *a, const float *b,float *x, float *u)
 176:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 665              	 .loc 4 176 0
 666              	 .cfi_startproc
 667              	 
 668              	 
 669              	 
 670 0000 80B4     	 push {r7}
 671              	.LCFI32:
 672              	 .cfi_def_cfa_offset 4
 673              	 .cfi_offset 7,-4
 674 0002 87B0     	 sub sp,sp,#28
 675              	.LCFI33:
 676              	 .cfi_def_cfa_offset 32
 677 0004 00AF     	 add r7,sp,#0
 678              	.LCFI34:
 679              	 .cfi_def_cfa_register 7
 680 0006 F860     	 str r0,[r7,#12]
 681 0008 B960     	 str r1,[r7,#8]
 682 000a 7A60     	 str r2,[r7,#4]
 683 000c 3B60     	 str r3,[r7]
 177:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//PID-Controller
 178:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 179:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//control error
 180:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	float e = (*r - *y) * (float)M_PI / 180.0f;
 684              	 .loc 4 180 0
 685 000e FB68     	 ldr r3,[r7,#12]
 686 0010 93ED007A 	 flds s14,[r3]
 687 0014 BB68     	 ldr r3,[r7,#8]
 688 0016 D3ED007A 	 flds s15,[r3]
 689 001a 77EE677A 	 fsubs s15,s14,s15
 690 001e 9FED3B7A 	 flds s14,.L21
 691 0022 67EE877A 	 fmuls s15,s15,s14
 692 0026 9FED3A7A 	 flds s14,.L21+4
 693 002a C7EE877A 	 fdivs s15,s15,s14
 694 002e C7ED047A 	 fsts s15,[r7,#16]
 181:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 182:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//calculate plant input
 183:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	*u = x[n - 1] + b[n] * e;
 695              	 .loc 4 183 0
 696 0032 7B68     	 ldr r3,[r7,#4]
 697 0034 03F18043 	 add r3,r3,#1073741824
 698 0038 013B     	 subs r3,r3,#1
 699 003a 9B00     	 lsls r3,r3,#2
 700 003c 7A6A     	 ldr r2,[r7,#36]
 701 003e 1344     	 add r3,r3,r2
 702 0040 93ED007A 	 flds s14,[r3]
 703 0044 7B68     	 ldr r3,[r7,#4]
 704 0046 9B00     	 lsls r3,r3,#2
 705 0048 3A6A     	 ldr r2,[r7,#32]
 706 004a 1344     	 add r3,r3,r2
 707 004c D3ED006A 	 flds s13,[r3]
 708 0050 D7ED047A 	 flds s15,[r7,#16]
 709 0054 66EEA77A 	 fmuls s15,s13,s15
 710 0058 77EE277A 	 fadds s15,s14,s15
 711 005c BB6A     	 ldr r3,[r7,#40]
 712 005e C3ED007A 	 fsts s15,[r3]
 713              	.LBB2:
 184:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 185:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//calculate new coefficients
 186:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	for (int i = n - 1; i > 0; i--)
 714              	 .loc 4 186 0
 715 0062 7B68     	 ldr r3,[r7,#4]
 716 0064 013B     	 subs r3,r3,#1
 717 0066 7B61     	 str r3,[r7,#20]
 718 0068 2AE0     	 b .L19
 719              	.L20:
 187:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		x[i] = b[i] * e - a[i] * (*u) + x[i - 1];
 720              	 .loc 4 187 0 discriminator 3
 721 006a 7B69     	 ldr r3,[r7,#20]
 722 006c 9B00     	 lsls r3,r3,#2
 723 006e 7A6A     	 ldr r2,[r7,#36]
 724 0070 1A44     	 add r2,r2,r3
 725 0072 7B69     	 ldr r3,[r7,#20]
 726 0074 9B00     	 lsls r3,r3,#2
 727 0076 396A     	 ldr r1,[r7,#32]
 728 0078 0B44     	 add r3,r3,r1
 729 007a 93ED007A 	 flds s14,[r3]
 730 007e D7ED047A 	 flds s15,[r7,#16]
 731 0082 27EE277A 	 fmuls s14,s14,s15
 732 0086 7B69     	 ldr r3,[r7,#20]
 733 0088 9B00     	 lsls r3,r3,#2
 734 008a 3968     	 ldr r1,[r7]
 735 008c 0B44     	 add r3,r3,r1
 736 008e D3ED006A 	 flds s13,[r3]
 737 0092 BB6A     	 ldr r3,[r7,#40]
 738 0094 D3ED007A 	 flds s15,[r3]
 739 0098 66EEA77A 	 fmuls s15,s13,s15
 740 009c 37EE677A 	 fsubs s14,s14,s15
 741 00a0 7B69     	 ldr r3,[r7,#20]
 742 00a2 03F18043 	 add r3,r3,#1073741824
 743 00a6 013B     	 subs r3,r3,#1
 744 00a8 9B00     	 lsls r3,r3,#2
 745 00aa 796A     	 ldr r1,[r7,#36]
 746 00ac 0B44     	 add r3,r3,r1
 747 00ae D3ED007A 	 flds s15,[r3]
 748 00b2 77EE277A 	 fadds s15,s14,s15
 749 00b6 C2ED007A 	 fsts s15,[r2]
 186:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		x[i] = b[i] * e - a[i] * (*u) + x[i - 1];
 750              	 .loc 4 186 0 discriminator 3
 751 00ba 7B69     	 ldr r3,[r7,#20]
 752 00bc 013B     	 subs r3,r3,#1
 753 00be 7B61     	 str r3,[r7,#20]
 754              	.L19:
 186:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		x[i] = b[i] * e - a[i] * (*u) + x[i - 1];
 755              	 .loc 4 186 0 is_stmt 0 discriminator 1
 756 00c0 7B69     	 ldr r3,[r7,#20]
 757 00c2 002B     	 cmp r3,#0
 758 00c4 D1DC     	 bgt .L20
 759              	.LBE2:
 188:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 189:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	x[0] = b[0] * e - a[0] * (*u);
 760              	 .loc 4 189 0 is_stmt 1
 761 00c6 3B6A     	 ldr r3,[r7,#32]
 762 00c8 93ED007A 	 flds s14,[r3]
 763 00cc D7ED047A 	 flds s15,[r7,#16]
 764 00d0 27EE277A 	 fmuls s14,s14,s15
 765 00d4 3B68     	 ldr r3,[r7]
 766 00d6 D3ED006A 	 flds s13,[r3]
 767 00da BB6A     	 ldr r3,[r7,#40]
 768 00dc D3ED007A 	 flds s15,[r3]
 769 00e0 66EEA77A 	 fmuls s15,s13,s15
 770 00e4 77EE677A 	 fsubs s15,s14,s15
 771 00e8 7B6A     	 ldr r3,[r7,#36]
 772 00ea C3ED007A 	 fsts s15,[r3]
 190:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 191:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	*u /= 4.0f;
 773              	 .loc 4 191 0
 774 00ee BB6A     	 ldr r3,[r7,#40]
 775 00f0 D3ED007A 	 flds s15,[r3]
 776 00f4 B1EE007A 	 fconsts s14,#16
 777 00f8 C7EE877A 	 fdivs s15,s15,s14
 778 00fc BB6A     	 ldr r3,[r7,#40]
 779 00fe C3ED007A 	 fsts s15,[r3]
 192:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 780              	 .loc 4 192 0
 781 0102 1C37     	 adds r7,r7,#28
 782              	.LCFI35:
 783              	 .cfi_def_cfa_offset 4
 784 0104 BD46     	 mov sp,r7
 785              	.LCFI36:
 786              	 .cfi_def_cfa_register 13
 787              	 
 788 0106 5DF8047B 	 ldr r7,[sp],#4
 789              	.LCFI37:
 790              	 .cfi_restore 7
 791              	 .cfi_def_cfa_offset 0
 792 010a 7047     	 bx lr
 793              	.L22:
 794              	 .align 2
 795              	.L21:
 796 010c DB0F4940 	 .word 1078530011
 797 0110 00003443 	 .word 1127481344
 798              	 .cfi_endproc
 799              	.LFE452:
 801              	 .global __aeabi_ddiv
 802              	 .section .text.AngleRateController,"ax",%progbits
 803              	 .align 2
 804              	 .global AngleRateController
 805              	 .thumb
 806              	 .thumb_func
 808              	AngleRateController:
 809              	.LFB453:
 193:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 194:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief This function represents the proportional controller for yaw-movement of the quadcopter
 195:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  
 196:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] r Reference inputs (RC)
 197:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] y Current output value of the sensor
 198:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] P Value of P_yaw
 199:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] u Controller output
 200:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  
 201:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 202:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void AngleRateController(float *r, float *y, const float *P, float *u)
 203:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 810              	 .loc 4 203 0
 811              	 .cfi_startproc
 812              	 
 813              	 
 814 0000 B0B5     	 push {r4,r5,r7,lr}
 815              	.LCFI38:
 816              	 .cfi_def_cfa_offset 16
 817              	 .cfi_offset 4,-16
 818              	 .cfi_offset 5,-12
 819              	 .cfi_offset 7,-8
 820              	 .cfi_offset 14,-4
 821 0002 84B0     	 sub sp,sp,#16
 822              	.LCFI39:
 823              	 .cfi_def_cfa_offset 32
 824 0004 00AF     	 add r7,sp,#0
 825              	.LCFI40:
 826              	 .cfi_def_cfa_register 7
 827 0006 F860     	 str r0,[r7,#12]
 828 0008 B960     	 str r1,[r7,#8]
 829 000a 7A60     	 str r2,[r7,#4]
 830 000c 3B60     	 str r3,[r7]
 204:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//P-Controller
 205:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	*u = (*r - *y) * M_PI / (180.0f * 4.0f) * *P;
 831              	 .loc 4 205 0
 832 000e FB68     	 ldr r3,[r7,#12]
 833 0010 93ED007A 	 flds s14,[r3]
 834 0014 BB68     	 ldr r3,[r7,#8]
 835 0016 D3ED007A 	 flds s15,[r3]
 836 001a 77EE677A 	 fsubs s15,s14,s15
 837 001e 17EE900A 	 fmrs r0,s15
 838 0022 FFF7FEFF 	 bl __aeabi_f2d
 839 0026 0246     	 mov r2,r0
 840 0028 0B46     	 mov r3,r1
 841 002a 1046     	 mov r0,r2
 842 002c 1946     	 mov r1,r3
 843 002e 15A3     	 adr r3,.L24+4
 844 0030 D3E90023 	 ldrd r2,[r3]
 845 0034 FFF7FEFF 	 bl __aeabi_dmul
 846 0038 0246     	 mov r2,r0
 847 003a 0B46     	 mov r3,r1
 848 003c 1046     	 mov r0,r2
 849 003e 1946     	 mov r1,r3
 850 0040 4FF00002 	 mov r2,#0
 851 0044 0E4B     	 ldr r3,.L24
 852 0046 FFF7FEFF 	 bl __aeabi_ddiv
 853 004a 0246     	 mov r2,r0
 854 004c 0B46     	 mov r3,r1
 855 004e 1446     	 mov r4,r2
 856 0050 1D46     	 mov r5,r3
 857 0052 7B68     	 ldr r3,[r7,#4]
 858 0054 1B68     	 ldr r3,[r3]
 859 0056 1846     	 mov r0,r3
 860 0058 FFF7FEFF 	 bl __aeabi_f2d
 861 005c 0246     	 mov r2,r0
 862 005e 0B46     	 mov r3,r1
 863 0060 2046     	 mov r0,r4
 864 0062 2946     	 mov r1,r5
 865 0064 FFF7FEFF 	 bl __aeabi_dmul
 866 0068 0246     	 mov r2,r0
 867 006a 0B46     	 mov r3,r1
 868 006c 1046     	 mov r0,r2
 869 006e 1946     	 mov r1,r3
 870 0070 FFF7FEFF 	 bl __aeabi_d2f
 871 0074 0246     	 mov r2,r0
 872 0076 3B68     	 ldr r3,[r7]
 873 0078 1A60     	 str r2,[r3]
 206:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 874              	 .loc 4 206 0
 875 007a 1037     	 adds r7,r7,#16
 876              	.LCFI41:
 877              	 .cfi_def_cfa_offset 16
 878 007c BD46     	 mov sp,r7
 879              	.LCFI42:
 880              	 .cfi_def_cfa_register 13
 881              	 
 882 007e B0BD     	 pop {r4,r5,r7,pc}
 883              	.L25:
 884              	 .align 3
 885              	.L24:
 886 0080 00808640 	 .word 1082556416
 887 0084 182D4454 	 .word 1413754136
 888 0088 FB210940 	 .word 1074340347
 889              	 .cfi_endproc
 890              	.LFE453:
 892 008c AFF30080 	 .section .text.CreatePulseWidth,"ax",%progbits
 893              	 .align 2
 894              	 .global CreatePulseWidth
 895              	 .thumb
 896              	 .thumb_func
 898              	CreatePulseWidth:
 899              	.LFB454:
 207:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 208:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief This function calculates and limits the PWM signals of the 4 motors, based on the 3 cont
 209:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  
 210:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] u_phi Output of third controller (u_roll)
 211:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] u_theta Output of second controller (u_pitch)
 212:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] u_psi_dot Output of third controller (u_yaw_dot)
 213:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] u_hover Power 
 214:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \param [in] PWM_width Desired width of the PWM
 215:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  
 216:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details Roll, pitch and yaw movements are are based on the linearized mathematical model of th
 217:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 218:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void CreatePulseWidth(float *u_phi, float *u_theta, float *u_psi_dot,float *u_hover, float *PWM_wid
 219:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 900              	 .loc 4 219 0
 901              	 .cfi_startproc
 902              	 
 903              	 
 904              	 
 905 0000 80B4     	 push {r7}
 906              	.LCFI43:
 907              	 .cfi_def_cfa_offset 4
 908              	 .cfi_offset 7,-4
 909 0002 87B0     	 sub sp,sp,#28
 910              	.LCFI44:
 911              	 .cfi_def_cfa_offset 32
 912 0004 00AF     	 add r7,sp,#0
 913              	.LCFI45:
 914              	 .cfi_def_cfa_register 7
 915 0006 F860     	 str r0,[r7,#12]
 916 0008 B960     	 str r1,[r7,#8]
 917 000a 7A60     	 str r2,[r7,#4]
 918 000c 3B60     	 str r3,[r7]
 220:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	float saturationMax = 100.0f;
 919              	 .loc 4 220 0
 920 000e 7A4B     	 ldr r3,.L56
 921 0010 7B61     	 str r3,[r7,#20]
 221:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	float saturationMin = 10.0f;
 922              	 .loc 4 221 0
 923 0012 7A4B     	 ldr r3,.L56+4
 924 0014 3B61     	 str r3,[r7,#16]
 222:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 223:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (*u_hover > 5.0f)
 925              	 .loc 4 223 0
 926 0016 3B68     	 ldr r3,[r7]
 927 0018 D3ED007A 	 flds s15,[r3]
 928 001c B1EE047A 	 fconsts s14,#20
 929 0020 F4EEC77A 	 fcmpes s15,s14
 930 0024 F1EE10FA 	 fmstat
 931 0028 59DD     	 ble .L55
 224:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	{
 225:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[0] = -*u_theta + *u_phi - *u_psi_dot + *u_hover;
 932              	 .loc 4 225 0
 933 002a FB68     	 ldr r3,[r7,#12]
 934 002c 93ED007A 	 flds s14,[r3]
 935 0030 BB68     	 ldr r3,[r7,#8]
 936 0032 D3ED007A 	 flds s15,[r3]
 937 0036 37EE677A 	 fsubs s14,s14,s15
 938 003a 7B68     	 ldr r3,[r7,#4]
 939 003c D3ED007A 	 flds s15,[r3]
 940 0040 37EE677A 	 fsubs s14,s14,s15
 941 0044 3B68     	 ldr r3,[r7]
 942 0046 D3ED007A 	 flds s15,[r3]
 943 004a 77EE277A 	 fadds s15,s14,s15
 944 004e 3B6A     	 ldr r3,[r7,#32]
 945 0050 C3ED007A 	 fsts s15,[r3]
 226:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[1] = -*u_theta - *u_phi + *u_psi_dot + *u_hover;
 946              	 .loc 4 226 0
 947 0054 3B6A     	 ldr r3,[r7,#32]
 948 0056 0433     	 adds r3,r3,#4
 949 0058 BA68     	 ldr r2,[r7,#8]
 950 005a D2ED007A 	 flds s15,[r2]
 951 005e B1EE677A 	 fnegs s14,s15
 952 0062 FA68     	 ldr r2,[r7,#12]
 953 0064 D2ED007A 	 flds s15,[r2]
 954 0068 37EE677A 	 fsubs s14,s14,s15
 955 006c 7A68     	 ldr r2,[r7,#4]
 956 006e D2ED007A 	 flds s15,[r2]
 957 0072 37EE277A 	 fadds s14,s14,s15
 958 0076 3A68     	 ldr r2,[r7]
 959 0078 D2ED007A 	 flds s15,[r2]
 960 007c 77EE277A 	 fadds s15,s14,s15
 961 0080 C3ED007A 	 fsts s15,[r3]
 227:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[2] = *u_theta + *u_phi + *u_psi_dot + *u_hover;
 962              	 .loc 4 227 0
 963 0084 3B6A     	 ldr r3,[r7,#32]
 964 0086 0833     	 adds r3,r3,#8
 965 0088 BA68     	 ldr r2,[r7,#8]
 966 008a 92ED007A 	 flds s14,[r2]
 967 008e FA68     	 ldr r2,[r7,#12]
 968 0090 D2ED007A 	 flds s15,[r2]
 969 0094 37EE277A 	 fadds s14,s14,s15
 970 0098 7A68     	 ldr r2,[r7,#4]
 971 009a D2ED007A 	 flds s15,[r2]
 972 009e 37EE277A 	 fadds s14,s14,s15
 973 00a2 3A68     	 ldr r2,[r7]
 974 00a4 D2ED007A 	 flds s15,[r2]
 975 00a8 77EE277A 	 fadds s15,s14,s15
 976 00ac C3ED007A 	 fsts s15,[r3]
 228:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[3] = *u_theta - *u_phi - *u_psi_dot + *u_hover;
 977              	 .loc 4 228 0
 978 00b0 3B6A     	 ldr r3,[r7,#32]
 979 00b2 0C33     	 adds r3,r3,#12
 980 00b4 BA68     	 ldr r2,[r7,#8]
 981 00b6 92ED007A 	 flds s14,[r2]
 982 00ba FA68     	 ldr r2,[r7,#12]
 983 00bc D2ED007A 	 flds s15,[r2]
 984 00c0 37EE677A 	 fsubs s14,s14,s15
 985 00c4 7A68     	 ldr r2,[r7,#4]
 986 00c6 D2ED007A 	 flds s15,[r2]
 987 00ca 37EE677A 	 fsubs s14,s14,s15
 988 00ce 3A68     	 ldr r2,[r7]
 989 00d0 D2ED007A 	 flds s15,[r2]
 990 00d4 77EE277A 	 fadds s15,s14,s15
 991 00d8 C3ED007A 	 fsts s15,[r3]
 992 00dc 12E0     	 b .L29
 993              	.L55:
 229:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	}
 230:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	else
 231:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	{
 232:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[0] = *u_hover;
 994              	 .loc 4 232 0
 995 00de 3B68     	 ldr r3,[r7]
 996 00e0 1A68     	 ldr r2,[r3]
 997 00e2 3B6A     	 ldr r3,[r7,#32]
 998 00e4 1A60     	 str r2,[r3]
 233:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[1] = *u_hover;
 999              	 .loc 4 233 0
 1000 00e6 3B6A     	 ldr r3,[r7,#32]
 1001 00e8 0433     	 adds r3,r3,#4
 1002 00ea 3A68     	 ldr r2,[r7]
 1003 00ec 1268     	 ldr r2,[r2]
 1004 00ee 1A60     	 str r2,[r3]
 234:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[2] = *u_hover;
 1005              	 .loc 4 234 0
 1006 00f0 3B6A     	 ldr r3,[r7,#32]
 1007 00f2 0833     	 adds r3,r3,#8
 1008 00f4 3A68     	 ldr r2,[r7]
 1009 00f6 1268     	 ldr r2,[r2]
 1010 00f8 1A60     	 str r2,[r3]
 235:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[3] = *u_hover;
 1011              	 .loc 4 235 0
 1012 00fa 3B6A     	 ldr r3,[r7,#32]
 1013 00fc 0C33     	 adds r3,r3,#12
 1014 00fe 3A68     	 ldr r2,[r7]
 1015 0100 1268     	 ldr r2,[r2]
 1016 0102 1A60     	 str r2,[r3]
 1017              	.L29:
 236:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	}
 237:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 238:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[0] > saturationMax)
 1018              	 .loc 4 238 0
 1019 0104 3B6A     	 ldr r3,[r7,#32]
 1020 0106 93ED007A 	 flds s14,[r3]
 1021 010a D7ED057A 	 flds s15,[r7,#20]
 1022 010e B4EEE77A 	 fcmpes s14,s15
 1023 0112 F1EE10FA 	 fmstat
 1024 0116 02DD     	 ble .L30
 239:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[0] = saturationMax;
 1025              	 .loc 4 239 0
 1026 0118 3B6A     	 ldr r3,[r7,#32]
 1027 011a 7A69     	 ldr r2,[r7,#20]
 1028 011c 1A60     	 str r2,[r3]
 1029              	.L30:
 240:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 241:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[0] < saturationMin)
 1030              	 .loc 4 241 0
 1031 011e 3B6A     	 ldr r3,[r7,#32]
 1032 0120 93ED007A 	 flds s14,[r3]
 1033 0124 D7ED047A 	 flds s15,[r7,#16]
 1034 0128 B4EEE77A 	 fcmpes s14,s15
 1035 012c F1EE10FA 	 fmstat
 1036 0130 02D5     	 bpl .L32
 242:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[0] = saturationMin;
 1037              	 .loc 4 242 0
 1038 0132 3B6A     	 ldr r3,[r7,#32]
 1039 0134 3A69     	 ldr r2,[r7,#16]
 1040 0136 1A60     	 str r2,[r3]
 1041              	.L32:
 243:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 244:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[1] > saturationMax)
 1042              	 .loc 4 244 0
 1043 0138 3B6A     	 ldr r3,[r7,#32]
 1044 013a 0433     	 adds r3,r3,#4
 1045 013c 93ED007A 	 flds s14,[r3]
 1046 0140 D7ED057A 	 flds s15,[r7,#20]
 1047 0144 B4EEE77A 	 fcmpes s14,s15
 1048 0148 F1EE10FA 	 fmstat
 1049 014c 03DD     	 ble .L34
 245:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[1] = saturationMax;
 1050              	 .loc 4 245 0
 1051 014e 3B6A     	 ldr r3,[r7,#32]
 1052 0150 0433     	 adds r3,r3,#4
 1053 0152 7A69     	 ldr r2,[r7,#20]
 1054 0154 1A60     	 str r2,[r3]
 1055              	.L34:
 246:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 247:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[1] < saturationMin)
 1056              	 .loc 4 247 0
 1057 0156 3B6A     	 ldr r3,[r7,#32]
 1058 0158 0433     	 adds r3,r3,#4
 1059 015a 93ED007A 	 flds s14,[r3]
 1060 015e D7ED047A 	 flds s15,[r7,#16]
 1061 0162 B4EEE77A 	 fcmpes s14,s15
 1062 0166 F1EE10FA 	 fmstat
 1063 016a 03D5     	 bpl .L36
 248:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[1] = saturationMin;
 1064              	 .loc 4 248 0
 1065 016c 3B6A     	 ldr r3,[r7,#32]
 1066 016e 0433     	 adds r3,r3,#4
 1067 0170 3A69     	 ldr r2,[r7,#16]
 1068 0172 1A60     	 str r2,[r3]
 1069              	.L36:
 249:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 250:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[2] > saturationMax)
 1070              	 .loc 4 250 0
 1071 0174 3B6A     	 ldr r3,[r7,#32]
 1072 0176 0833     	 adds r3,r3,#8
 1073 0178 93ED007A 	 flds s14,[r3]
 1074 017c D7ED057A 	 flds s15,[r7,#20]
 1075 0180 B4EEE77A 	 fcmpes s14,s15
 1076 0184 F1EE10FA 	 fmstat
 1077 0188 03DD     	 ble .L38
 251:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[2] = saturationMax;
 1078              	 .loc 4 251 0
 1079 018a 3B6A     	 ldr r3,[r7,#32]
 1080 018c 0833     	 adds r3,r3,#8
 1081 018e 7A69     	 ldr r2,[r7,#20]
 1082 0190 1A60     	 str r2,[r3]
 1083              	.L38:
 252:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 253:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[2] < saturationMin)
 1084              	 .loc 4 253 0
 1085 0192 3B6A     	 ldr r3,[r7,#32]
 1086 0194 0833     	 adds r3,r3,#8
 1087 0196 93ED007A 	 flds s14,[r3]
 1088 019a D7ED047A 	 flds s15,[r7,#16]
 1089 019e B4EEE77A 	 fcmpes s14,s15
 1090 01a2 F1EE10FA 	 fmstat
 1091 01a6 03D5     	 bpl .L40
 254:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[2] = saturationMin;
 1092              	 .loc 4 254 0
 1093 01a8 3B6A     	 ldr r3,[r7,#32]
 1094 01aa 0833     	 adds r3,r3,#8
 1095 01ac 3A69     	 ldr r2,[r7,#16]
 1096 01ae 1A60     	 str r2,[r3]
 1097              	.L40:
 255:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 256:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[3] > saturationMax)
 1098              	 .loc 4 256 0
 1099 01b0 3B6A     	 ldr r3,[r7,#32]
 1100 01b2 0C33     	 adds r3,r3,#12
 1101 01b4 93ED007A 	 flds s14,[r3]
 1102 01b8 D7ED057A 	 flds s15,[r7,#20]
 1103 01bc B4EEE77A 	 fcmpes s14,s15
 1104 01c0 F1EE10FA 	 fmstat
 1105 01c4 03DD     	 ble .L42
 257:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[3] = saturationMax;
 1106              	 .loc 4 257 0
 1107 01c6 3B6A     	 ldr r3,[r7,#32]
 1108 01c8 0C33     	 adds r3,r3,#12
 1109 01ca 7A69     	 ldr r2,[r7,#20]
 1110 01cc 1A60     	 str r2,[r3]
 1111              	.L42:
 258:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 259:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (PWM_width[3] < saturationMin)
 1112              	 .loc 4 259 0
 1113 01ce 3B6A     	 ldr r3,[r7,#32]
 1114 01d0 0C33     	 adds r3,r3,#12
 1115 01d2 93ED007A 	 flds s14,[r3]
 1116 01d6 D7ED047A 	 flds s15,[r7,#16]
 1117 01da B4EEE77A 	 fcmpes s14,s15
 1118 01de F1EE10FA 	 fmstat
 1119 01e2 03D5     	 bpl .L26
 260:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		PWM_width[3] = saturationMin;
 1120              	 .loc 4 260 0
 1121 01e4 3B6A     	 ldr r3,[r7,#32]
 1122 01e6 0C33     	 adds r3,r3,#12
 1123 01e8 3A69     	 ldr r2,[r7,#16]
 1124 01ea 1A60     	 str r2,[r3]
 1125              	.L26:
 261:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 1126              	 .loc 4 261 0
 1127 01ec 1C37     	 adds r7,r7,#28
 1128              	.LCFI46:
 1129              	 .cfi_def_cfa_offset 4
 1130 01ee BD46     	 mov sp,r7
 1131              	.LCFI47:
 1132              	 .cfi_def_cfa_register 13
 1133              	 
 1134 01f0 5DF8047B 	 ldr r7,[sp],#4
 1135              	.LCFI48:
 1136              	 .cfi_restore 7
 1137              	 .cfi_def_cfa_offset 0
 1138 01f4 7047     	 bx lr
 1139              	.L57:
 1140 01f6 00BF     	 .align 2
 1141              	.L56:
 1142 01f8 0000C842 	 .word 1120403456
 1143 01fc 00002041 	 .word 1092616192
 1144              	 .cfi_endproc
 1145              	.LFE454:
 1147              	 .section .text.setup,"ax",%progbits
 1148              	 .align 2
 1149              	 .global setup
 1150              	 .thumb
 1151              	 .thumb_func
 1153              	setup:
 1154              	.LFB455:
 262:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 263:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  /**
 264:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief This function initializes the hardware
 265:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *
 266:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *
 267:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details Sensors are set up, polynomials are calculated and other general preparations are made
 268:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 269:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void setup(void)
 270:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 1155              	 .loc 4 270 0
 1156              	 .cfi_startproc
 1157              	 
 1158              	 
 1159 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1160              	.LCFI49:
 1161              	 .cfi_def_cfa_offset 24
 1162              	 .cfi_offset 4,-24
 1163              	 .cfi_offset 5,-20
 1164              	 .cfi_offset 6,-16
 1165              	 .cfi_offset 7,-12
 1166              	 .cfi_offset 8,-8
 1167              	 .cfi_offset 14,-4
 1168 0004 9CB0     	 sub sp,sp,#112
 1169              	.LCFI50:
 1170              	 .cfi_def_cfa_offset 136
 1171 0006 0CAF     	 add r7,sp,#48
 1172              	.LCFI51:
 1173              	 .cfi_def_cfa 7,88
 271:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	initBluetoothStorage();//initialize space for variables used for Bluetooth Communication
 1174              	 .loc 4 271 0
 1175 0008 FFF7FEFF 	 bl initBluetoothStorage
 272:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	//-------------------Dave Setup---------------------
 273:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	DAVE_STATUS_t status;
 274:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	status = DAVE_Init();//Initialization of DAVE APPs
 1176              	 .loc 4 274 0
 1177 000c FFF7FEFF 	 bl DAVE_Init
 1178 0010 0346     	 mov r3,r0
 1179 0012 87F83F30 	 strb r3,[r7,#63]
 275:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	if (status == DAVE_STATUS_FAILURE)
 1180              	 .loc 4 275 0
 1181 0016 97F83F30 	 ldrb r3,[r7,#63]
 1182 001a 012B     	 cmp r3,#1
 1183 001c 00D1     	 bne .L59
 1184              	.L60:
 276:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	{
 277:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		/* Placeholder for error handler code. The while loop below can be replaced with an user error ha
 278:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		XMC_DEBUG("DAVE APPs initialization failed\n");
 279:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 		while (1U);
 1185              	 .loc 4 279 0 discriminator 1
 1186 001e FEE7     	 b .L60
 1187              	.L59:
 280:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	}
 281:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	disableIRQ();//disables all Interrupts
 1188              	 .loc 4 281 0
 1189 0020 FFF7FEFF 	 bl disableIRQ
 282:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	delay(2000);//waits 2000ms
 1190              	 .loc 4 282 0
 1191 0024 4FF4FA60 	 mov r0,#2000
 1192 0028 FFF7FEFF 	 bl delay
 283:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	enableIRQ();//enables configurated Interrupts
 1193              	 .loc 4 283 0
 1194 002c FFF7FEFF 	 bl enableIRQ
 284:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	setup_STATE_LEDs();//setup Status-LED's
 1195              	 .loc 4 284 0
 1196 0030 FFF7FEFF 	 bl setup_STATE_LEDs
 285:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	WatchRC_Init();//initialize RC-Watchdog
 1197              	 .loc 4 285 0
 1198 0034 FFF7FEFF 	 bl WatchRC_Init
 286:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	setup_UART_Trigger_limits();//setup Trigger-Limits of UART-FIFO
 1199              	 .loc 4 286 0
 1200 0038 FFF7FEFF 	 bl setup_UART_Trigger_limits
 287:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	PressureFIR = Initialize_FIR_Filter(PressureFIR, MOVING_AVERAGE);//initialize FIR Filter
 1201              	 .loc 4 287 0
 1202 003c DFF8D482 	 ldr r8,.L61
 1203 0040 BE46     	 mov lr,r7
 1204 0042 B44E     	 ldr r6,.L61
 1205 0044 0023     	 movs r3,#0
 1206 0046 0B93     	 str r3,[sp,#44]
 1207 0048 6D46     	 mov r5,sp
 1208 004a 06F10C04 	 add r4,r6,#12
 1209 004e 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 1210 0050 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 1211 0052 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 1212 0054 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 1213 0056 94E80700 	 ldmia r4,{r0,r1,r2}
 1214 005a 85E80700 	 stmia r5,{r0,r1,r2}
 1215 005e 96E80E00 	 ldmia r6,{r1,r2,r3}
 1216 0062 7046     	 mov r0,lr
 1217 0064 FFF7FEFF 	 bl Initialize_FIR_Filter
 1218 0068 4546     	 mov r5,r8
 1219 006a 3C46     	 mov r4,r7
 1220 006c 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 1221 006e 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 1222 0070 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 1223 0072 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 1224 0074 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 1225 0076 0FC5     	 stmia r5!,{r0,r1,r2,r3}
 1226 0078 94E80300 	 ldmia r4,{r0,r1}
 1227 007c 85E80300 	 stmia r5,{r0,r1}
 288:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 289:../_Quadrocopter/Attitude_Control/AttitudeController.c **** //  Uncomment to activate PressureSensor
 290:../_Quadrocopter/Attitude_Control/AttitudeController.c **** //	setupDPS310I2C();//initialize DPS310
 291:../_Quadrocopter/Attitude_Control/AttitudeController.c **** //  setupDPS310();//setup DPS Hardware
 292:../_Quadrocopter/Attitude_Control/AttitudeController.c **** //  getCoefficients();//get Coefficients of DPS310
 293:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 294:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	MPU9150_Setup();//configures the IMU
 1228              	 .loc 4 294 0
 1229 0080 FFF7FEFF 	 bl MPU9150_Setup
 295:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	delay(3000);//wait 3000ms to wait for ESC's to startup
 1230              	 .loc 4 295 0
 1231 0084 40F6B830 	 movw r0,#3000
 1232 0088 FFF7FEFF 	 bl delay
 296:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	// initialize controller polynomials
 297:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.b_roll[0]=parameter.P_roll-parameter.I_roll*parameter.T-parameter.P_roll*parameter.N_roll
 1233              	 .loc 4 297 0
 1234 008c A24B     	 ldr r3,.L61+4
 1235 008e 93ED017A 	 flds s14,[r3,#4]
 1236 0092 A14B     	 ldr r3,.L61+4
 1237 0094 D3ED026A 	 flds s13,[r3,#8]
 1238 0098 9F4B     	 ldr r3,.L61+4
 1239 009a D3ED007A 	 flds s15,[r3]
 1240 009e 66EEA77A 	 fmuls s15,s13,s15
 1241 00a2 37EE677A 	 fsubs s14,s14,s15
 1242 00a6 9C4B     	 ldr r3,.L61+4
 1243 00a8 D3ED016A 	 flds s13,[r3,#4]
 1244 00ac 9A4B     	 ldr r3,.L61+4
 1245 00ae D3ED047A 	 flds s15,[r3,#16]
 1246 00b2 66EEA76A 	 fmuls s13,s13,s15
 1247 00b6 984B     	 ldr r3,.L61+4
 1248 00b8 D3ED007A 	 flds s15,[r3]
 1249 00bc 66EEA77A 	 fmuls s15,s13,s15
 1250 00c0 37EE677A 	 fsubs s14,s14,s15
 1251 00c4 944B     	 ldr r3,.L61+4
 1252 00c6 D3ED046A 	 flds s13,[r3,#16]
 1253 00ca 934B     	 ldr r3,.L61+4
 1254 00cc D3ED027A 	 flds s15,[r3,#8]
 1255 00d0 66EEA76A 	 fmuls s13,s13,s15
 1256 00d4 904B     	 ldr r3,.L61+4
 1257 00d6 D3ED007A 	 flds s15,[r3]
 1258 00da 66EEA76A 	 fmuls s13,s13,s15
 1259 00de 8E4B     	 ldr r3,.L61+4
 1260 00e0 D3ED007A 	 flds s15,[r3]
 1261 00e4 66EEA77A 	 fmuls s15,s13,s15
 1262 00e8 37EE277A 	 fadds s14,s14,s15
 1263 00ec 8A4B     	 ldr r3,.L61+4
 1264 00ee D3ED036A 	 flds s13,[r3,#12]
 1265 00f2 894B     	 ldr r3,.L61+4
 1266 00f4 D3ED047A 	 flds s15,[r3,#16]
 1267 00f8 66EEA77A 	 fmuls s15,s13,s15
 1268 00fc 77EE277A 	 fadds s15,s14,s15
 1269 0100 864B     	 ldr r3,.L61+8
 1270 0102 C3ED047A 	 fsts s15,[r3,#16]
 298:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.b_roll[1]=parameter.I_roll*parameter.T-2*parameter.P_roll+parameter.P_roll*parameter.N_ro
 1271              	 .loc 4 298 0
 1272 0106 844B     	 ldr r3,.L61+4
 1273 0108 93ED027A 	 flds s14,[r3,#8]
 1274 010c 824B     	 ldr r3,.L61+4
 1275 010e D3ED007A 	 flds s15,[r3]
 1276 0112 27EE277A 	 fmuls s14,s14,s15
 1277 0116 804B     	 ldr r3,.L61+4
 1278 0118 D3ED017A 	 flds s15,[r3,#4]
 1279 011c 77EEA77A 	 fadds s15,s15,s15
 1280 0120 37EE677A 	 fsubs s14,s14,s15
 1281 0124 7C4B     	 ldr r3,.L61+4
 1282 0126 D3ED016A 	 flds s13,[r3,#4]
 1283 012a 7B4B     	 ldr r3,.L61+4
 1284 012c D3ED047A 	 flds s15,[r3,#16]
 1285 0130 66EEA76A 	 fmuls s13,s13,s15
 1286 0134 784B     	 ldr r3,.L61+4
 1287 0136 D3ED007A 	 flds s15,[r3]
 1288 013a 66EEA77A 	 fmuls s15,s13,s15
 1289 013e 37EE277A 	 fadds s14,s14,s15
 1290 0142 754B     	 ldr r3,.L61+4
 1291 0144 D3ED037A 	 flds s15,[r3,#12]
 1292 0148 77EEA76A 	 fadds s13,s15,s15
 1293 014c 724B     	 ldr r3,.L61+4
 1294 014e D3ED047A 	 flds s15,[r3,#16]
 1295 0152 66EEA77A 	 fmuls s15,s13,s15
 1296 0156 77EE677A 	 fsubs s15,s14,s15
 1297 015a 704B     	 ldr r3,.L61+8
 1298 015c C3ED057A 	 fsts s15,[r3,#20]
 299:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.b_roll[2]=parameter.P_roll+parameter.D_roll*parameter.N_roll;
 1299              	 .loc 4 299 0
 1300 0160 6D4B     	 ldr r3,.L61+4
 1301 0162 93ED017A 	 flds s14,[r3,#4]
 1302 0166 6C4B     	 ldr r3,.L61+4
 1303 0168 D3ED036A 	 flds s13,[r3,#12]
 1304 016c 6A4B     	 ldr r3,.L61+4
 1305 016e D3ED047A 	 flds s15,[r3,#16]
 1306 0172 66EEA77A 	 fmuls s15,s13,s15
 1307 0176 77EE277A 	 fadds s15,s14,s15
 1308 017a 684B     	 ldr r3,.L61+8
 1309 017c C3ED067A 	 fsts s15,[r3,#24]
 300:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.a_roll[0]=1-parameter.N_roll*parameter.T;
 1310              	 .loc 4 300 0
 1311 0180 654B     	 ldr r3,.L61+4
 1312 0182 93ED047A 	 flds s14,[r3,#16]
 1313 0186 644B     	 ldr r3,.L61+4
 1314 0188 D3ED007A 	 flds s15,[r3]
 1315 018c 67EE277A 	 fmuls s15,s14,s15
 1316 0190 B7EE007A 	 fconsts s14,#112
 1317 0194 77EE677A 	 fsubs s15,s14,s15
 1318 0198 604B     	 ldr r3,.L61+8
 1319 019a C3ED007A 	 fsts s15,[r3]
 301:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.a_roll[1]=parameter.N_roll*parameter.T-2;
 1320              	 .loc 4 301 0
 1321 019e 5E4B     	 ldr r3,.L61+4
 1322 01a0 93ED047A 	 flds s14,[r3,#16]
 1323 01a4 5C4B     	 ldr r3,.L61+4
 1324 01a6 D3ED007A 	 flds s15,[r3]
 1325 01aa 67EE277A 	 fmuls s15,s14,s15
 1326 01ae B0EE007A 	 fconsts s14,#0
 1327 01b2 77EEC77A 	 fsubs s15,s15,s14
 1328 01b6 594B     	 ldr r3,.L61+8
 1329 01b8 C3ED017A 	 fsts s15,[r3,#4]
 302:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 303:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.b_pitch[0]=parameter.P_pitch-parameter.I_pitch*parameter.T-parameter.P_pitch*parameter.N_
 1330              	 .loc 4 303 0
 1331 01bc 564B     	 ldr r3,.L61+4
 1332 01be 93ED057A 	 flds s14,[r3,#20]
 1333 01c2 554B     	 ldr r3,.L61+4
 1334 01c4 D3ED066A 	 flds s13,[r3,#24]
 1335 01c8 534B     	 ldr r3,.L61+4
 1336 01ca D3ED007A 	 flds s15,[r3]
 1337 01ce 66EEA77A 	 fmuls s15,s13,s15
 1338 01d2 37EE677A 	 fsubs s14,s14,s15
 1339 01d6 504B     	 ldr r3,.L61+4
 1340 01d8 D3ED056A 	 flds s13,[r3,#20]
 1341 01dc 4E4B     	 ldr r3,.L61+4
 1342 01de D3ED087A 	 flds s15,[r3,#32]
 1343 01e2 66EEA76A 	 fmuls s13,s13,s15
 1344 01e6 4C4B     	 ldr r3,.L61+4
 1345 01e8 D3ED007A 	 flds s15,[r3]
 1346 01ec 66EEA77A 	 fmuls s15,s13,s15
 1347 01f0 37EE677A 	 fsubs s14,s14,s15
 1348 01f4 484B     	 ldr r3,.L61+4
 1349 01f6 D3ED086A 	 flds s13,[r3,#32]
 1350 01fa 474B     	 ldr r3,.L61+4
 1351 01fc D3ED067A 	 flds s15,[r3,#24]
 1352 0200 66EEA76A 	 fmuls s13,s13,s15
 1353 0204 444B     	 ldr r3,.L61+4
 1354 0206 D3ED007A 	 flds s15,[r3]
 1355 020a 66EEA76A 	 fmuls s13,s13,s15
 1356 020e 424B     	 ldr r3,.L61+4
 1357 0210 D3ED007A 	 flds s15,[r3]
 1358 0214 66EEA77A 	 fmuls s15,s13,s15
 1359 0218 37EE277A 	 fadds s14,s14,s15
 1360 021c 3E4B     	 ldr r3,.L61+4
 1361 021e D3ED076A 	 flds s13,[r3,#28]
 1362 0222 3D4B     	 ldr r3,.L61+4
 1363 0224 D3ED087A 	 flds s15,[r3,#32]
 1364 0228 66EEA77A 	 fmuls s15,s13,s15
 1365 022c 77EE277A 	 fadds s15,s14,s15
 1366 0230 3A4B     	 ldr r3,.L61+8
 1367 0232 C3ED077A 	 fsts s15,[r3,#28]
 304:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.b_pitch[1]=parameter.I_pitch*parameter.T-2*parameter.P_pitch+parameter.P_pitch*parameter.
 1368              	 .loc 4 304 0
 1369 0236 384B     	 ldr r3,.L61+4
 1370 0238 93ED067A 	 flds s14,[r3,#24]
 1371 023c 364B     	 ldr r3,.L61+4
 1372 023e D3ED007A 	 flds s15,[r3]
 1373 0242 27EE277A 	 fmuls s14,s14,s15
 1374 0246 344B     	 ldr r3,.L61+4
 1375 0248 D3ED057A 	 flds s15,[r3,#20]
 1376 024c 77EEA77A 	 fadds s15,s15,s15
 1377 0250 37EE677A 	 fsubs s14,s14,s15
 1378 0254 304B     	 ldr r3,.L61+4
 1379 0256 D3ED056A 	 flds s13,[r3,#20]
 1380 025a 2F4B     	 ldr r3,.L61+4
 1381 025c D3ED087A 	 flds s15,[r3,#32]
 1382 0260 66EEA76A 	 fmuls s13,s13,s15
 1383 0264 2C4B     	 ldr r3,.L61+4
 1384 0266 D3ED007A 	 flds s15,[r3]
 1385 026a 66EEA77A 	 fmuls s15,s13,s15
 1386 026e 37EE277A 	 fadds s14,s14,s15
 1387 0272 294B     	 ldr r3,.L61+4
 1388 0274 D3ED077A 	 flds s15,[r3,#28]
 1389 0278 77EEA76A 	 fadds s13,s15,s15
 1390 027c 264B     	 ldr r3,.L61+4
 1391 027e D3ED087A 	 flds s15,[r3,#32]
 1392 0282 66EEA77A 	 fmuls s15,s13,s15
 1393 0286 77EE677A 	 fsubs s15,s14,s15
 1394 028a 244B     	 ldr r3,.L61+8
 1395 028c C3ED087A 	 fsts s15,[r3,#32]
 305:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.b_pitch[2]=parameter.P_pitch+parameter.D_pitch*parameter.N_pitch;
 1396              	 .loc 4 305 0
 1397 0290 214B     	 ldr r3,.L61+4
 1398 0292 93ED057A 	 flds s14,[r3,#20]
 1399 0296 204B     	 ldr r3,.L61+4
 1400 0298 D3ED076A 	 flds s13,[r3,#28]
 1401 029c 1E4B     	 ldr r3,.L61+4
 1402 029e D3ED087A 	 flds s15,[r3,#32]
 1403 02a2 66EEA77A 	 fmuls s15,s13,s15
 1404 02a6 77EE277A 	 fadds s15,s14,s15
 1405 02aa 1C4B     	 ldr r3,.L61+8
 1406 02ac C3ED097A 	 fsts s15,[r3,#36]
 306:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.a_pitch[0]=1-parameter.N_pitch*parameter.T;
 1407              	 .loc 4 306 0
 1408 02b0 194B     	 ldr r3,.L61+4
 1409 02b2 93ED087A 	 flds s14,[r3,#32]
 1410 02b6 184B     	 ldr r3,.L61+4
 1411 02b8 D3ED007A 	 flds s15,[r3]
 1412 02bc 67EE277A 	 fmuls s15,s14,s15
 1413 02c0 B7EE007A 	 fconsts s14,#112
 1414 02c4 77EE677A 	 fsubs s15,s14,s15
 1415 02c8 144B     	 ldr r3,.L61+8
 1416 02ca C3ED027A 	 fsts s15,[r3,#8]
 307:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	polynoms.a_pitch[1]=parameter.N_pitch*parameter.T-2;
 1417              	 .loc 4 307 0
 1418 02ce 124B     	 ldr r3,.L61+4
 1419 02d0 93ED087A 	 flds s14,[r3,#32]
 1420 02d4 104B     	 ldr r3,.L61+4
 1421 02d6 D3ED007A 	 flds s15,[r3]
 1422 02da 67EE277A 	 fmuls s15,s14,s15
 1423 02de B0EE007A 	 fconsts s14,#0
 1424 02e2 77EEC77A 	 fsubs s15,s15,s14
 1425 02e6 0D4B     	 ldr r3,.L61+8
 1426 02e8 C3ED037A 	 fsts s15,[r3,#12]
 308:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 309:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	TIMER_Start(&Control_Timer);//start Timer for Controller
 1427              	 .loc 4 309 0
 1428 02ec 0C48     	 ldr r0,.L61+12
 1429 02ee FFF7FEFF 	 bl TIMER_Start
 310:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	PWM_CCU4_Start(&PWM_OUTPUT_1);
 1430              	 .loc 4 310 0
 1431 02f2 0C48     	 ldr r0,.L61+16
 1432 02f4 FFF7FEFF 	 bl PWM_CCU4_Start
 311:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	PWM_CCU4_Start(&PWM_OUTPUT_2);
 1433              	 .loc 4 311 0
 1434 02f8 0B48     	 ldr r0,.L61+20
 1435 02fa FFF7FEFF 	 bl PWM_CCU4_Start
 312:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	PWM_CCU4_Start(&PWM_OUTPUT_3);
 1436              	 .loc 4 312 0
 1437 02fe 0B48     	 ldr r0,.L61+24
 1438 0300 FFF7FEFF 	 bl PWM_CCU4_Start
 313:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	PWM_CCU4_Start(&PWM_OUTPUT_4);
 1439              	 .loc 4 313 0
 1440 0304 0A48     	 ldr r0,.L61+28
 1441 0306 FFF7FEFF 	 bl PWM_CCU4_Start
 314:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 1442              	 .loc 4 314 0
 1443 030a 4037     	 adds r7,r7,#64
 1444              	.LCFI52:
 1445              	 .cfi_def_cfa_offset 24
 1446 030c BD46     	 mov sp,r7
 1447              	.LCFI53:
 1448              	 .cfi_def_cfa_register 13
 1449              	 
 1450 030e BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1451              	.L62:
 1452 0312 00BF     	 .align 2
 1453              	.L61:
 1454 0314 00000000 	 .word PressureFIR
 1455 0318 00000000 	 .word parameter
 1456 031c 00000000 	 .word polynoms
 1457 0320 00000000 	 .word Control_Timer
 1458 0324 00000000 	 .word PWM_OUTPUT_1
 1459 0328 00000000 	 .word PWM_OUTPUT_2
 1460 032c 00000000 	 .word PWM_OUTPUT_3
 1461 0330 00000000 	 .word PWM_OUTPUT_4
 1462              	 .cfi_endproc
 1463              	.LFE455:
 1465              	 .section .text.setup_STATE_LEDs,"ax",%progbits
 1466              	 .align 2
 1467              	 .global setup_STATE_LEDs
 1468              	 .thumb
 1469              	 .thumb_func
 1471              	setup_STATE_LEDs:
 1472              	.LFB456:
 315:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 316:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief Function for setup of the pins for the Battery-LEDs on the LARIX-Board
 317:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 318:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void setup_STATE_LEDs(void)
 319:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 1473              	 .loc 4 319 0
 1474              	 .cfi_startproc
 1475              	 
 1476              	 
 1477              	 
 1478 0000 80B4     	 push {r7}
 1479              	.LCFI54:
 1480              	 .cfi_def_cfa_offset 4
 1481              	 .cfi_offset 7,-4
 1482 0002 00AF     	 add r7,sp,#0
 1483              	.LCFI55:
 1484              	 .cfi_def_cfa_register 7
 320:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	Control_P3_0(OUTPUT_PP_GP, VERYSTRONG);	//Configure Pin 3.0 -->BatteryState1 (See: _Quadrocopter/B
 1485              	 .loc 4 320 0
 1486 0004 164A     	 ldr r2,.L64
 1487 0006 164B     	 ldr r3,.L64
 1488 0008 1B69     	 ldr r3,[r3,#16]
 1489 000a 23F0F803 	 bic r3,r3,#248
 1490 000e 43F08003 	 orr r3,r3,#128
 1491 0012 1361     	 str r3,[r2,#16]
 1492 0014 124A     	 ldr r2,.L64
 1493 0016 124B     	 ldr r3,.L64
 1494 0018 1B6C     	 ldr r3,[r3,#64]
 1495 001a 23F00703 	 bic r3,r3,#7
 1496 001e 1364     	 str r3,[r2,#64]
 321:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	Control_P3_1(OUTPUT_PP_GP, VERYSTRONG); //Configure Pin 3.1 -->BatteryState2
 1497              	 .loc 4 321 0
 1498 0020 0F4A     	 ldr r2,.L64
 1499 0022 0F4B     	 ldr r3,.L64
 1500 0024 1B69     	 ldr r3,[r3,#16]
 1501 0026 23F47843 	 bic r3,r3,#63488
 1502 002a 43F40043 	 orr r3,r3,#32768
 1503 002e 1361     	 str r3,[r2,#16]
 1504 0030 0B4A     	 ldr r2,.L64
 1505 0032 0B4B     	 ldr r3,.L64
 1506 0034 1B6C     	 ldr r3,[r3,#64]
 1507 0036 23F07003 	 bic r3,r3,#112
 1508 003a 1364     	 str r3,[r2,#64]
 322:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	Control_P3_2(OUTPUT_PP_GP, VERYSTRONG); //Configure Pin 3.2 -->BatteryState3
 1509              	 .loc 4 322 0
 1510 003c 084A     	 ldr r2,.L64
 1511 003e 084B     	 ldr r3,.L64
 1512 0040 1B69     	 ldr r3,[r3,#16]
 1513 0042 23F47803 	 bic r3,r3,#16252928
 1514 0046 43F40003 	 orr r3,r3,#8388608
 1515 004a 1361     	 str r3,[r2,#16]
 1516 004c 044A     	 ldr r2,.L64
 1517 004e 044B     	 ldr r3,.L64
 1518 0050 1B6C     	 ldr r3,[r3,#64]
 1519 0052 23F4E063 	 bic r3,r3,#1792
 1520 0056 1364     	 str r3,[r2,#64]
 323:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 1521              	 .loc 4 323 0
 1522 0058 BD46     	 mov sp,r7
 1523              	.LCFI56:
 1524              	 .cfi_def_cfa_register 13
 1525              	 
 1526 005a 5DF8047B 	 ldr r7,[sp],#4
 1527              	.LCFI57:
 1528              	 .cfi_restore 7
 1529              	 .cfi_def_cfa_offset 0
 1530 005e 7047     	 bx lr
 1531              	.L65:
 1532              	 .align 2
 1533              	.L64:
 1534 0060 00830248 	 .word 1208124160
 1535              	 .cfi_endproc
 1536              	.LFE456:
 1538              	 .section .text.setup_UART_Trigger_limits,"ax",%progbits
 1539              	 .align 2
 1540              	 .global setup_UART_Trigger_limits
 1541              	 .thumb
 1542              	 .thumb_func
 1544              	setup_UART_Trigger_limits:
 1545              	.LFB457:
 324:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 
 325:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 326:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief Function for setting the trigger limits
 327:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *
 328:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details Receive FIFO trigger limit is configured for Bluetooth & the Remote Control
 329:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details When the FIFO filling level rises above the trigger limit -> Interrupt will be generat
 330:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 331:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void setup_UART_Trigger_limits(void)
 332:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 1546              	 .loc 4 332 0
 1547              	 .cfi_startproc
 1548              	 
 1549              	 
 1550 0000 80B5     	 push {r7,lr}
 1551              	.LCFI58:
 1552              	 .cfi_def_cfa_offset 8
 1553              	 .cfi_offset 7,-8
 1554              	 .cfi_offset 14,-4
 1555 0002 00AF     	 add r7,sp,#0
 1556              	.LCFI59:
 1557              	 .cfi_def_cfa_register 7
 333:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	UART_SetRXFIFOTriggerLimit(&RemoteControl_Handle, 31);
 1558              	 .loc 4 333 0
 1559 0004 0448     	 ldr r0,.L67
 1560 0006 1F21     	 movs r1,#31
 1561 0008 FFF7FEFF 	 bl UART_SetRXFIFOTriggerLimit
 334:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	UART_SetRXFIFOTriggerLimit(&Bluetooth_Handle, 18);
 1562              	 .loc 4 334 0
 1563 000c 0348     	 ldr r0,.L67+4
 1564 000e 1221     	 movs r1,#18
 1565 0010 FFF7FEFF 	 bl UART_SetRXFIFOTriggerLimit
 335:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 1566              	 .loc 4 335 0
 1567 0014 80BD     	 pop {r7,pc}
 1568              	.L68:
 1569 0016 00BF     	 .align 2
 1570              	.L67:
 1571 0018 00000000 	 .word RemoteControl_Handle
 1572 001c 00000000 	 .word Bluetooth_Handle
 1573              	 .cfi_endproc
 1574              	.LFE457:
 1576              	 .section .text.disableIRQ,"ax",%progbits
 1577              	 .align 2
 1578              	 .global disableIRQ
 1579              	 .thumb
 1580              	 .thumb_func
 1582              	disableIRQ:
 1583              	.LFB458:
 336:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 337:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief Function for disabling all Interrupt-Service-Routines
 338:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  *
 339:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details This function disables all Interrupt-Service-Routines\n
 340:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  except the Util_Timer_ISR
 341:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 342:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void disableIRQ(void)
 343:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 1584              	 .loc 4 343 0
 1585              	 .cfi_startproc
 1586              	 
 1587              	 
 1588 0000 80B5     	 push {r7,lr}
 1589              	.LCFI60:
 1590              	 .cfi_def_cfa_offset 8
 1591              	 .cfi_offset 7,-8
 1592              	 .cfi_offset 14,-4
 1593 0002 00AF     	 add r7,sp,#0
 1594              	.LCFI61:
 1595              	 .cfi_def_cfa_register 7
 344:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&Control_Timer_ISR_Handle);
 1596              	 .loc 4 344 0
 1597 0004 0E48     	 ldr r0,.L70
 1598 0006 FFF7FEFF 	 bl INTERRUPT_Disable
 345:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&GeneralPurpose_Timer_ISR_Handle);
 1599              	 .loc 4 345 0
 1600 000a 0E48     	 ldr r0,.L70+4
 1601 000c FFF7FEFF 	 bl INTERRUPT_Disable
 346:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&MagnetometerCal_Timer_ISR_Handle);
 1602              	 .loc 4 346 0
 1603 0010 0D48     	 ldr r0,.L70+8
 1604 0012 FFF7FEFF 	 bl INTERRUPT_Disable
 347:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	NVIC_DisableIRQ(backgnd_rs_intr_handle.node_id);//Disable ADC Interrupt
 1605              	 .loc 4 347 0
 1606 0016 0D4B     	 ldr r3,.L70+12
 1607 0018 1B68     	 ldr r3,[r3]
 1608 001a DBB2     	 uxtb r3,r3
 1609 001c 5BB2     	 sxtb r3,r3
 1610 001e 1846     	 mov r0,r3
 1611 0020 FFF7FEFF 	 bl NVIC_DisableIRQ
 348:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&DPS310_Ext_Int_ISR_Handle);
 1612              	 .loc 4 348 0
 1613 0024 0A48     	 ldr r0,.L70+16
 1614 0026 FFF7FEFF 	 bl INTERRUPT_Disable
 349:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&MPU9X50_Ext_Int_ISR_Handle);
 1615              	 .loc 4 349 0
 1616 002a 0A48     	 ldr r0,.L70+20
 1617 002c FFF7FEFF 	 bl INTERRUPT_Disable
 350:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&Bluetooth_RX_ISR_Handle);
 1618              	 .loc 4 350 0
 1619 0030 0948     	 ldr r0,.L70+24
 1620 0032 FFF7FEFF 	 bl INTERRUPT_Disable
 351:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Disable(&RemoteControl_RX_ISR_Handle);
 1621              	 .loc 4 351 0
 1622 0036 0948     	 ldr r0,.L70+28
 1623 0038 FFF7FEFF 	 bl INTERRUPT_Disable
 352:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 1624              	 .loc 4 352 0
 1625 003c 80BD     	 pop {r7,pc}
 1626              	.L71:
 1627 003e 00BF     	 .align 2
 1628              	.L70:
 1629 0040 00000000 	 .word Control_Timer_ISR_Handle
 1630 0044 00000000 	 .word GeneralPurpose_Timer_ISR_Handle
 1631 0048 00000000 	 .word MagnetometerCal_Timer_ISR_Handle
 1632 004c 00000000 	 .word backgnd_rs_intr_handle
 1633 0050 00000000 	 .word DPS310_Ext_Int_ISR_Handle
 1634 0054 00000000 	 .word MPU9X50_Ext_Int_ISR_Handle
 1635 0058 00000000 	 .word Bluetooth_RX_ISR_Handle
 1636 005c 00000000 	 .word RemoteControl_RX_ISR_Handle
 1637              	 .cfi_endproc
 1638              	.LFE458:
 1640              	 .section .text.enableIRQ,"ax",%progbits
 1641              	 .align 2
 1642              	 .global enableIRQ
 1643              	 .thumb
 1644              	 .thumb_func
 1646              	enableIRQ:
 1647              	.LFB459:
 353:../_Quadrocopter/Attitude_Control/AttitudeController.c **** /**
 354:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \brief Function for enabling all Interrupt-Service-Routines
 355:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *
 356:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  *  \details This function enables all Interrupt-Service-Routines
 357:../_Quadrocopter/Attitude_Control/AttitudeController.c ****  */
 358:../_Quadrocopter/Attitude_Control/AttitudeController.c **** void enableIRQ(void)
 359:../_Quadrocopter/Attitude_Control/AttitudeController.c **** {
 1648              	 .loc 4 359 0
 1649              	 .cfi_startproc
 1650              	 
 1651              	 
 1652 0000 80B5     	 push {r7,lr}
 1653              	.LCFI62:
 1654              	 .cfi_def_cfa_offset 8
 1655              	 .cfi_offset 7,-8
 1656              	 .cfi_offset 14,-4
 1657 0002 00AF     	 add r7,sp,#0
 1658              	.LCFI63:
 1659              	 .cfi_def_cfa_register 7
 360:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Enable(&GeneralPurpose_Timer_ISR_Handle);
 1660              	 .loc 4 360 0
 1661 0004 0B48     	 ldr r0,.L73
 1662 0006 FFF7FEFF 	 bl INTERRUPT_Enable
 361:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	NVIC_EnableIRQ(backgnd_rs_intr_handle.node_id); //Enables ADC Interrupt
 1663              	 .loc 4 361 0
 1664 000a 0B4B     	 ldr r3,.L73+4
 1665 000c 1B68     	 ldr r3,[r3]
 1666 000e DBB2     	 uxtb r3,r3
 1667 0010 5BB2     	 sxtb r3,r3
 1668 0012 1846     	 mov r0,r3
 1669 0014 FFF7FEFF 	 bl NVIC_EnableIRQ
 362:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Enable(&Control_Timer_ISR_Handle);
 1670              	 .loc 4 362 0
 1671 0018 0848     	 ldr r0,.L73+8
 1672 001a FFF7FEFF 	 bl INTERRUPT_Enable
 363:../_Quadrocopter/Attitude_Control/AttitudeController.c ****     INTERRUPT_Enable(&Bluetooth_RX_ISR_Handle);
 1673              	 .loc 4 363 0
 1674 001e 0848     	 ldr r0,.L73+12
 1675 0020 FFF7FEFF 	 bl INTERRUPT_Enable
 364:../_Quadrocopter/Attitude_Control/AttitudeController.c ****     INTERRUPT_Enable(&DPS310_Ext_Int_ISR_Handle);
 1676              	 .loc 4 364 0
 1677 0024 0748     	 ldr r0,.L73+16
 1678 0026 FFF7FEFF 	 bl INTERRUPT_Enable
 365:../_Quadrocopter/Attitude_Control/AttitudeController.c **** 	INTERRUPT_Enable(&RemoteControl_RX_ISR_Handle);
 1679              	 .loc 4 365 0
 1680 002a 0748     	 ldr r0,.L73+20
 1681 002c FFF7FEFF 	 bl INTERRUPT_Enable
 366:../_Quadrocopter/Attitude_Control/AttitudeController.c **** }
 1682              	 .loc 4 366 0
 1683 0030 80BD     	 pop {r7,pc}
 1684              	.L74:
 1685 0032 00BF     	 .align 2
 1686              	.L73:
 1687 0034 00000000 	 .word GeneralPurpose_Timer_ISR_Handle
 1688 0038 00000000 	 .word backgnd_rs_intr_handle
 1689 003c 00000000 	 .word Control_Timer_ISR_Handle
 1690 0040 00000000 	 .word Bluetooth_RX_ISR_Handle
 1691 0044 00000000 	 .word DPS310_Ext_Int_ISR_Handle
 1692 0048 00000000 	 .word RemoteControl_RX_ISR_Handle
 1693              	 .cfi_endproc
 1694              	.LFE459:
 1696              	 .section .bss.x_pitch.16478,"aw",%nobits
 1697              	 .align 2
 1700              	x_pitch.16478:
 1701 0000 00000000 	 .space 8
 1701      00000000 
 1702              	 .section .bss.x_roll.16479,"aw",%nobits
 1703              	 .align 2
 1706              	x_roll.16479:
 1707 0000 00000000 	 .space 8
 1707      00000000 
 1708              	 .text
 1709              	.Letext0:
 1710              	 .file 5 "c:\\davev4\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1711              	 .file 6 "c:\\davev4\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1712              	 .file 7 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1713              	 .file 8 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc4_scu.h"
 1714              	 .file 9 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc_gpio.h"
 1715              	 .file 10 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc4_gpio.h"
 1716              	 .file 11 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc_ccu4.h"
 1717              	 .file 12 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 1718              	 .file 13 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/TIMER/timer.h"
 1719              	 .file 14 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc_usic.h"
 1720              	 .file 15 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc_uart.h"
 1721              	 .file 16 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
 1722              	 .file 17 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 1723              	 .file 18 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/XMCLib/inc/xmc_usbd.h"
 1724              	 .file 19 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/USBD/usbd.h"
 1725              	 .file 20 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/PWM_CCU4/pwm_ccu4.h"
 1726              	 .file 21 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/DAVE.h"
 1727              	 .file 22 "../_Quadrocopter/Attitude_Control/../_FIR_Filter/FIR_Filter.h"
 1728              	 .file 23 "../_Quadrocopter/Attitude_Control/AttitudeController.h"
 1729              	 .file 24 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 1730              	 .file 25 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/TIMER/timer_extern.h"
 1731              	 .file 26 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/INTERRUPT/interrupt_extern.h"
 1732              	 .file 27 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/UART/uart_extern.h"
 1733              	 .file 28 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/USBD/usbd_extern.h"
 1734              	 .file 29 "C:/Workspaces/DAVE-4.3/WS_2016_09_02/Flightcontroller_PWM_CopterRocks_Working/Dave/Generated/PWM_CCU4/pwm_ccu4_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 AttitudeController.c
    {standard input}:20     .text.NVIC_EnableIRQ:00000000 $t
    {standard input}:24     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
    {standard input}:69     .text.NVIC_EnableIRQ:0000002c $d
    {standard input}:74     .text.NVIC_DisableIRQ:00000000 $t
    {standard input}:78     .text.NVIC_DisableIRQ:00000000 NVIC_DisableIRQ
    {standard input}:123    .text.NVIC_DisableIRQ:00000030 $d
    {standard input}:128    .text.INTERRUPT_Enable:00000000 $t
    {standard input}:132    .text.INTERRUPT_Enable:00000000 INTERRUPT_Enable
    {standard input}:170    .text.INTERRUPT_Disable:00000000 $t
    {standard input}:174    .text.INTERRUPT_Disable:00000000 INTERRUPT_Disable
    {standard input}:211    .text.UART_SetRXFIFOTriggerLimit:00000000 $t
    {standard input}:215    .text.UART_SetRXFIFOTriggerLimit:00000000 UART_SetRXFIFOTriggerLimit
                            *COM*:00000028 polynoms
    {standard input}:263    .bss.pressure:00000000 pressure
    {standard input}:260    .bss.pressure:00000000 $d
    {standard input}:270    .bss.temperature:00000000 temperature
    {standard input}:267    .bss.temperature:00000000 $d
                            *COM*:00000038 PressureFIR
    {standard input}:278    .bss.powerD:00000000 powerD
    {standard input}:275    .bss.powerD:00000000 $d
    {standard input}:285    .bss.yawD_dot:00000000 yawD_dot
    {standard input}:282    .bss.yawD_dot:00000000 $d
    {standard input}:292    .bss.pitchD:00000000 pitchD
    {standard input}:289    .bss.pitchD:00000000 $d
    {standard input}:299    .bss.rollD:00000000 rollD
    {standard input}:296    .bss.rollD:00000000 $d
                            *COM*:0000000c YPR
    {standard input}:307    .bss.u_yaw_dot:00000000 u_yaw_dot
    {standard input}:304    .bss.u_yaw_dot:00000000 $d
    {standard input}:314    .bss.u_pitch:00000000 u_pitch
    {standard input}:311    .bss.u_pitch:00000000 $d
    {standard input}:321    .bss.u_roll:00000000 u_roll
    {standard input}:318    .bss.u_roll:00000000 $d
                            *COM*:00000010 PWM_percent
    {standard input}:329    .data.parameter:00000000 parameter
    {standard input}:326    .data.parameter:00000000 $d
    {standard input}:345    .text.CCU43_1_IRQHandler:00000000 $t
    {standard input}:350    .text.CCU43_1_IRQHandler:00000000 CCU43_1_IRQHandler
    {standard input}:808    .text.AngleRateController:00000000 AngleRateController
    {standard input}:663    .text.AngleController:00000000 AngleController
    {standard input}:898    .text.CreatePulseWidth:00000000 CreatePulseWidth
    {standard input}:628    .text.CCU43_1_IRQHandler:00000250 $d
    {standard input}:1700   .bss.x_pitch.16478:00000000 x_pitch.16478
    {standard input}:1706   .bss.x_roll.16479:00000000 x_roll.16479
    {standard input}:658    .text.AngleController:00000000 $t
    {standard input}:796    .text.AngleController:0000010c $d
    {standard input}:803    .text.AngleRateController:00000000 $t
    {standard input}:886    .text.AngleRateController:00000080 $d
    {standard input}:893    .text.CreatePulseWidth:00000000 $t
    {standard input}:1142   .text.CreatePulseWidth:000001f8 $d
    {standard input}:1148   .text.setup:00000000 $t
    {standard input}:1153   .text.setup:00000000 setup
    {standard input}:1582   .text.disableIRQ:00000000 disableIRQ
    {standard input}:1646   .text.enableIRQ:00000000 enableIRQ
    {standard input}:1471   .text.setup_STATE_LEDs:00000000 setup_STATE_LEDs
    {standard input}:1544   .text.setup_UART_Trigger_limits:00000000 setup_UART_Trigger_limits
    {standard input}:1454   .text.setup:00000314 $d
    {standard input}:1466   .text.setup_STATE_LEDs:00000000 $t
    {standard input}:1534   .text.setup_STATE_LEDs:00000060 $d
    {standard input}:1539   .text.setup_UART_Trigger_limits:00000000 $t
    {standard input}:1571   .text.setup_UART_Trigger_limits:00000018 $d
    {standard input}:1577   .text.disableIRQ:00000000 $t
    {standard input}:1629   .text.disableIRQ:00000040 $d
    {standard input}:1641   .text.enableIRQ:00000000 $t
    {standard input}:1687   .text.enableIRQ:00000034 $d
    {standard input}:1697   .bss.x_pitch.16478:00000000 $d
    {standard input}:1703   .bss.x_roll.16479:00000000 $d
                     .debug_frame:00000010 $d
    {standard input}:892    .text.AngleRateController:0000008c $t

UNDEFINED SYMBOLS
XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
GetAngles
GetRCData
PWM_CCU4_SetDutyCycle
PWM_OUTPUT_1
PWM_OUTPUT_2
PWM_OUTPUT_3
PWM_OUTPUT_4
__aeabi_ddiv
initBluetoothStorage
DAVE_Init
delay
WatchRC_Init
Initialize_FIR_Filter
MPU9150_Setup
TIMER_Start
PWM_CCU4_Start
Control_Timer
RemoteControl_Handle
Bluetooth_Handle
Control_Timer_ISR_Handle
GeneralPurpose_Timer_ISR_Handle
MagnetometerCal_Timer_ISR_Handle
backgnd_rs_intr_handle
DPS310_Ext_Int_ISR_Handle
MPU9X50_Ext_Int_ISR_Handle
Bluetooth_RX_ISR_Handle
RemoteControl_RX_ISR_Handle
