   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_q7_to_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_q7_to_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_q7_to_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_q7_to_q31:
  26              	.LFB139:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c"
   1:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** /* ----------------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * $Date:        31. July 2014
   5:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * Title:		arm_q7_to_q31.c    
   9:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * Description:	Converts the elements of the Q7 vector to Q31 vector.  
  11:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** * ---------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @ingroup groupSupport    
  45:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @addtogroup q7_to_x    
  49:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @brief Converts the elements of the Q7 vector to Q31 vector.    
  54:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @param[in]       *pSrc points to the Q7 input vector    
  55:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @param[out]      *pDst points to the Q31 output vector   
  56:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @param[in]       blockSize length of the input vector    
  57:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * @return none.    
  58:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  *    
  59:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * \par Description:    
  60:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * The equation used for the conversion process is:    
  62:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  *   
  63:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * <pre>    
  64:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * 	pDst[n] = (q31_t) pSrc[n] << 24;   0 <= n < blockSize.   
  65:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  * </pre>     
  66:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  *   
  67:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****  */
  68:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  69:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  70:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** void arm_q7_to_q31(
  71:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   q7_t * pSrc,
  72:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   q31_t * pDst,
  73:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   uint32_t blockSize)
  74:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** {
  28              	 .loc 1 74 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 8FB0     	 sub sp,sp,#60
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 64
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  75:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   q7_t *pIn = pSrc;                              /* Src pointer */
  46              	 .loc 1 75 0
  47 000c FB68     	 ldr r3,[r7,#12]
  48 000e 7B61     	 str r3,[r7,#20]
  76:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  77:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  79:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  80:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   q31_t in;
  81:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  82:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  83:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  84:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   /*loop Unrolling */
  85:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   blkCnt = blockSize >> 2u;
  49              	 .loc 1 85 0
  50 0010 7B68     	 ldr r3,[r7,#4]
  51 0012 9B08     	 lsrs r3,r3,#2
  52 0014 7B63     	 str r3,[r7,#52]
  86:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  88:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  89:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   while(blkCnt > 0u)
  53              	 .loc 1 89 0
  54 0016 3AE0     	 b .L2
  55              	.L6:
  90:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   {
  91:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     /* C = (q31_t) A << 24 */
  92:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     /* convert from q7 to q31 and then store the results in the destination buffer */
  93:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     in = *__SIMD32(pIn)++;
  56              	 .loc 1 93 0
  57 0018 07F11402 	 add r2,r7,#20
  58 001c 1368     	 ldr r3,[r2]
  59 001e 191D     	 adds r1,r3,#4
  60 0020 1160     	 str r1,[r2]
  61 0022 1B68     	 ldr r3,[r3]
  62 0024 3B63     	 str r3,[r7,#48]
  94:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  95:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #ifndef ARM_MATH_BIG_ENDIAN
  96:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
  97:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (__ROR(in, 8)) & 0xFF000000;
  63              	 .loc 1 97 0
  64 0026 BB68     	 ldr r3,[r7,#8]
  65 0028 1A1D     	 adds r2,r3,#4
  66 002a BA60     	 str r2,[r7,#8]
  67 002c 3A6B     	 ldr r2,[r7,#48]
  68 002e FA62     	 str r2,[r7,#44]
  69 0030 0822     	 movs r2,#8
  70 0032 BA62     	 str r2,[r7,#40]
  71              	.LBB8:
  72              	.LBB9:
  73              	 .file 2 "C:\\Workspaces\\DAVE-4.1\\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V4.30
   5:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     20. October 2015
   6:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
   9:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    All rights reserved.
  10:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****      specific prior written permission.
  20:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    *
  21:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  35:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  38:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  45:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  46:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  47:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  51:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  52:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  53:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  54:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  58:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  60:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  62:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  63:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  64:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  65:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  69:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  71:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  73:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  74:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  75:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  76:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
  77:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
  79:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  80:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  82:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
  83:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  84:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
  86:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
  91:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 104:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 115:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 116:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 118:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 119:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 121:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 122:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 123:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 125:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 126:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 127:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 128:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 129:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 130:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 132:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     \return               xPSR Register value
 133:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 134:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 136:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 137:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 138:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 140:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 141:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 142:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 143:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 144:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 147:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 148:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 150:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 151:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 152:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 154:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 155:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 156:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 157:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 158:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 162:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 164:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 172:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 176:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 186:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 188:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 190:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 192:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 193:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 194:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 195:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 196:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 198:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 199:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 201:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 202:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 203:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 205:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 206:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 207:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 208:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 209:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 210:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 213:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 215:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 217:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 218:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 219:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 221:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 222:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 223:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 226:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 228:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 230:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 231:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 232:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 233:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 234:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 237:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 239:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 241:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 245:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 247:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 251:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 252:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 254:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 255:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 256:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 257:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 258:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 259:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 262:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 264:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 266:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 268:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 269:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 274:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 276:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 278:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 282:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 284:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 288:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 289:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 291:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 292:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 293:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 295:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 296:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 299:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 301:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 303:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 306:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 307:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 311:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 318:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 319:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 321:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 323:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 324:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 325:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0);
 326:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 327:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 328:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 329:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 330:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 331:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 332:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 335:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 337:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 340:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 342:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 343:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 344:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 347:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 348:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 351:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 352:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 355:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 356:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 357:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 365:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 368:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 369:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 370:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 371:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 373:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 375:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("nop");
 376:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 377:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 378:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 379:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 380:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 387:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 388:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 389:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 390:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 391:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 394:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 396:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 398:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 399:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 400:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 401:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 402:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 404:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 406:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sev");
 407:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 408:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 409:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 410:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 411:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 415:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 416:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 418:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 420:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 421:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 422:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 423:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 427:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 429:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 431:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 432:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 433:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 434:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 438:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 440:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 442:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 443:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 449:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 450:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 452:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 455:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 456:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 457:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 459:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 460:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 461:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 462:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 463:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 464:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 468:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 469:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 471:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 472:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 475:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 476:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 477:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 478:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 479:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 483:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 484:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 486:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 489:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   int32_t result;
 490:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 491:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 493:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 494:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 496:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 498:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Rotated value
 503:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 504:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 506:C:\Workspaces\DAVE-4.1\Flightcontroller_PWM_CopterRocks_Working/Libraries/CMSIS/Include\cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
  74              	 .loc 2 506 0
  75 0034 F96A     	 ldr r1,[r7,#44]
  76 0036 BA6A     	 ldr r2,[r7,#40]
  77 0038 61FA02F2 	 ror r2,r1,r2
  78              	.LBE9:
  79              	.LBE8:
  80              	 .loc 1 97 0
  81 003c 02F07F42 	 and r2,r2,#-16777216
  82 0040 1A60     	 str r2,[r3]
  98:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (__ROR(in, 16)) & 0xFF000000;
  83              	 .loc 1 98 0
  84 0042 BB68     	 ldr r3,[r7,#8]
  85 0044 1A1D     	 adds r2,r3,#4
  86 0046 BA60     	 str r2,[r7,#8]
  87 0048 3A6B     	 ldr r2,[r7,#48]
  88 004a 7A62     	 str r2,[r7,#36]
  89 004c 1022     	 movs r2,#16
  90 004e 3A62     	 str r2,[r7,#32]
  91              	.LBB10:
  92              	.LBB11:
  93              	 .loc 2 506 0
  94 0050 796A     	 ldr r1,[r7,#36]
  95 0052 3A6A     	 ldr r2,[r7,#32]
  96 0054 61FA02F2 	 ror r2,r1,r2
  97              	.LBE11:
  98              	.LBE10:
  99              	 .loc 1 98 0
 100 0058 02F07F42 	 and r2,r2,#-16777216
 101 005c 1A60     	 str r2,[r3]
  99:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (__ROR(in, 24)) & 0xFF000000;
 102              	 .loc 1 99 0
 103 005e BB68     	 ldr r3,[r7,#8]
 104 0060 1A1D     	 adds r2,r3,#4
 105 0062 BA60     	 str r2,[r7,#8]
 106 0064 3A6B     	 ldr r2,[r7,#48]
 107 0066 FA61     	 str r2,[r7,#28]
 108 0068 1822     	 movs r2,#24
 109 006a BA61     	 str r2,[r7,#24]
 110              	.LBB12:
 111              	.LBB13:
 112              	 .loc 2 506 0
 113 006c F969     	 ldr r1,[r7,#28]
 114 006e BA69     	 ldr r2,[r7,#24]
 115 0070 61FA02F2 	 ror r2,r1,r2
 116              	.LBE13:
 117              	.LBE12:
 118              	 .loc 1 99 0
 119 0074 02F07F42 	 and r2,r2,#-16777216
 120 0078 1A60     	 str r2,[r3]
 100:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (in & 0xFF000000);
 121              	 .loc 1 100 0
 122 007a BB68     	 ldr r3,[r7,#8]
 123 007c 1A1D     	 adds r2,r3,#4
 124 007e BA60     	 str r2,[r7,#8]
 125 0080 3A6B     	 ldr r2,[r7,#48]
 126 0082 02F07F42 	 and r2,r2,#-16777216
 127 0086 1A60     	 str r2,[r3]
 101:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 102:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #else
 103:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 104:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (in & 0xFF000000);
 105:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (__ROR(in, 24)) & 0xFF000000;
 106:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (__ROR(in, 16)) & 0xFF000000;
 107:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (__ROR(in, 8)) & 0xFF000000;
 108:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #endif //              #ifndef ARM_MATH_BIG_ENDIAN
 110:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     /* Decrement the loop counter */
 112:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     blkCnt--;
 128              	 .loc 1 112 0
 129 0088 7B6B     	 ldr r3,[r7,#52]
 130 008a 013B     	 subs r3,r3,#1
 131 008c 7B63     	 str r3,[r7,#52]
 132              	.L2:
  89:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   {
 133              	 .loc 1 89 0
 134 008e 7B6B     	 ldr r3,[r7,#52]
 135 0090 002B     	 cmp r3,#0
 136 0092 C1D1     	 bne .L6
 113:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   }
 114:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 115:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 116:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****    ** No loop unrolling is used. */
 117:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   blkCnt = blockSize % 0x4u;
 137              	 .loc 1 117 0
 138 0094 7B68     	 ldr r3,[r7,#4]
 139 0096 03F00303 	 and r3,r3,#3
 140 009a 7B63     	 str r3,[r7,#52]
 118:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 119:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #else
 120:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 121:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   /* Run the below code for Cortex-M0 */
 122:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 123:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   /* Loop over blockSize number of values */
 124:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   blkCnt = blockSize;
 125:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 127:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 128:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   while(blkCnt > 0u)
 141              	 .loc 1 128 0
 142 009c 0CE0     	 b .L7
 143              	.L8:
 129:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   {
 130:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     /* C = (q31_t) A << 24 */
 131:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     /* convert from q7 to q31 and then store the results in the destination buffer */
 132:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     *pDst++ = (q31_t) * pIn++ << 24;
 144              	 .loc 1 132 0
 145 009e BB68     	 ldr r3,[r7,#8]
 146 00a0 1A1D     	 adds r2,r3,#4
 147 00a2 BA60     	 str r2,[r7,#8]
 148 00a4 7A69     	 ldr r2,[r7,#20]
 149 00a6 511C     	 adds r1,r2,#1
 150 00a8 7961     	 str r1,[r7,#20]
 151 00aa 1278     	 ldrb r2,[r2]
 152 00ac 52B2     	 sxtb r2,r2
 153 00ae 1206     	 lsls r2,r2,#24
 154 00b0 1A60     	 str r2,[r3]
 133:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 134:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     /* Decrement the loop counter */
 135:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****     blkCnt--;
 155              	 .loc 1 135 0
 156 00b2 7B6B     	 ldr r3,[r7,#52]
 157 00b4 013B     	 subs r3,r3,#1
 158 00b6 7B63     	 str r3,[r7,#52]
 159              	.L7:
 128:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   {
 160              	 .loc 1 128 0
 161 00b8 7B6B     	 ldr r3,[r7,#52]
 162 00ba 002B     	 cmp r3,#0
 163 00bc EFD1     	 bne .L8
 136:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c ****   }
 137:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** 
 138:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q7_to_q31.c **** }
 164              	 .loc 1 138 0
 165 00be 3C37     	 adds r7,r7,#60
 166              	.LCFI3:
 167              	 .cfi_def_cfa_offset 4
 168 00c0 BD46     	 mov sp,r7
 169              	.LCFI4:
 170              	 .cfi_def_cfa_register 13
 171              	 
 172 00c2 5DF8047B 	 ldr r7,[sp],#4
 173              	.LCFI5:
 174              	 .cfi_restore 7
 175              	 .cfi_def_cfa_offset 0
 176 00c6 7047     	 bx lr
 177              	 .cfi_endproc
 178              	.LFE139:
 180              	 .text
 181              	.Letext0:
 182              	 .file 3 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 183              	 .file 4 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 184              	 .file 5 "C:\\Workspaces\\DAVE-4.1\\Flightcontroller_PWM_CopterRocks_Working\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_q7_to_q31.c
    {standard input}:20     .text.arm_q7_to_q31:00000000 $t
    {standard input}:25     .text.arm_q7_to_q31:00000000 arm_q7_to_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
