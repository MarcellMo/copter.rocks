   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_lms_norm_init_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_lms_norm_init_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_lms_norm_init_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_lms_norm_init_f32:
  26              	.LFB139:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** /*-----------------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * Title:        arm_lms_norm_init_f32.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * Description:  Floating-point NLMS filter initialization function.    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * POSSIBILITY OF SUCH DAMAGE.    
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** * ---------------------------------------------------------------------------*/
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * @ingroup groupFilters    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * @addtogroup LMS_NORM    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  */
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /**    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @brief Initialization function for floating-point normalized LMS filter.    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @param[in] *S points to an instance of the floating-point LMS filter structure.    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @param[in] numTaps  number of filter coefficients.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @param[in] *pCoeffs points to coefficient buffer.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @param[in] *pState points to state buffer.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @param[in] mu step size that controls filter coefficient updates.    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @param[in] blockSize number of samples to process.    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    * @return none.    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****    *    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * \par Description:    
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * <code>pCoeffs</code> points to the array of filter coefficients stored in time reversed order:  
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * <pre>    
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  *    {b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * </pre>    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * The initial filter coefficients serve as a starting point for the adaptive filter.    
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * <code>pState</code> points to an array of length <code>numTaps+blockSize-1</code> samples,    
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  * where <code>blockSize</code> is the number of input samples processed by each call to <code>arm_
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****  */
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** void arm_lms_norm_init_f32(
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   arm_lms_norm_instance_f32 * S,
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   uint16_t numTaps,
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   float32_t * pCoeffs,
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   float32_t * pState,
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   float32_t mu,
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   uint32_t blockSize)
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** {
  28              	 .loc 1 79 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 84B0     	 sub sp,sp,#16
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 24
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 7A60     	 str r2,[r7,#4]
  45 000a 3B60     	 str r3,[r7]
  46 000c 0B46     	 mov r3,r1
  47 000e 7B81     	 strh r3,[r7,#10]
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Assign filter taps */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   S->numTaps = numTaps;
  48              	 .loc 1 81 0
  49 0010 FB68     	 ldr r3,[r7,#12]
  50 0012 7A89     	 ldrh r2,[r7,#10]
  51 0014 1A80     	 strh r2,[r3]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Assign coefficient pointer */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   S->pCoeffs = pCoeffs;
  52              	 .loc 1 84 0
  53 0016 FB68     	 ldr r3,[r7,#12]
  54 0018 7A68     	 ldr r2,[r7,#4]
  55 001a 9A60     	 str r2,[r3,#8]
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Clear state buffer and size is always blockSize + numTaps - 1 */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   memset(pState, 0, (numTaps + (blockSize - 1u)) * sizeof(float32_t));
  56              	 .loc 1 87 0
  57 001c 7A89     	 ldrh r2,[r7,#10]
  58 001e FB69     	 ldr r3,[r7,#28]
  59 0020 1344     	 add r3,r3,r2
  60 0022 03F18043 	 add r3,r3,#1073741824
  61 0026 013B     	 subs r3,r3,#1
  62 0028 9B00     	 lsls r3,r3,#2
  63 002a 3868     	 ldr r0,[r7]
  64 002c 0021     	 movs r1,#0
  65 002e 1A46     	 mov r2,r3
  66 0030 FFF7FEFF 	 bl memset
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Assign state pointer */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   S->pState = pState;
  67              	 .loc 1 90 0
  68 0034 FB68     	 ldr r3,[r7,#12]
  69 0036 3A68     	 ldr r2,[r7]
  70 0038 5A60     	 str r2,[r3,#4]
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Assign Step size value */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   S->mu = mu;
  71              	 .loc 1 93 0
  72 003a FB68     	 ldr r3,[r7,#12]
  73 003c BA69     	 ldr r2,[r7,#24]
  74 003e DA60     	 str r2,[r3,#12]
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Initialise Energy to zero */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   S->energy = 0.0f;
  75              	 .loc 1 96 0
  76 0040 FB68     	 ldr r3,[r7,#12]
  77 0042 4FF00002 	 mov r2,#0
  78 0046 1A61     	 str r2,[r3,#16]
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   /* Initialise x0 to zero */
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c ****   S->x0 = 0.0f;
  79              	 .loc 1 99 0
  80 0048 FB68     	 ldr r3,[r7,#12]
  81 004a 4FF00002 	 mov r2,#0
  82 004e 5A61     	 str r2,[r3,#20]
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** 
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_norm_init_f32.c **** }
  83              	 .loc 1 101 0
  84 0050 1037     	 adds r7,r7,#16
  85              	.LCFI3:
  86              	 .cfi_def_cfa_offset 8
  87 0052 BD46     	 mov sp,r7
  88              	.LCFI4:
  89              	 .cfi_def_cfa_register 13
  90              	 
  91 0054 80BD     	 pop {r7,pc}
  92              	 .cfi_endproc
  93              	.LFE139:
  95 0056 00BF     	 .text
  96              	.Letext0:
  97              	 .file 2 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  98              	 .file 3 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  99              	 .file 4 "C:\\Workspaces\\DAVE-4.1\\Flightcontroller_PWM_CopterRocks_Working\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_lms_norm_init_f32.c
    {standard input}:20     .text.arm_lms_norm_init_f32:00000000 $t
    {standard input}:25     .text.arm_lms_norm_init_f32:00000000 arm_lms_norm_init_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
