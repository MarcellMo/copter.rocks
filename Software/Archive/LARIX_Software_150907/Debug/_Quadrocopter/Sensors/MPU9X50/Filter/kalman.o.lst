   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"kalman.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.KALMAN_getAngle,"ax",%progbits
  20              		.align	2
  21              		.global	KALMAN_getAngle
  22              		.thumb
  23              		.thumb_func
  25              	KALMAN_getAngle:
  26              	.LFB0:
  27              		.file 1 "../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c"
   1:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** /*
   2:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c ****  * kalman.c
   3:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c ****  *
   4:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c ****  *  Created on: 07.04.2015
   5:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c ****  *      Author: maan
   6:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c ****  */
   7:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
   8:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** #include "kalman.h"
   9:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  10:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** // The angle should be in degrees and the rate should be in degrees per second and the delta time i
  11:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** float KALMAN_getAngle(KALMAN_t *handle, float newAngle, float newRate, float dt)
  12:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** {
  28              		.loc 1 12 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]	@ float
  45 000a 7A60     		str	r2, [r7, #4]	@ float
  46 000c 3B60     		str	r3, [r7, #0]	@ float
  13:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// KasBot V2  -  Kalman filter module - http://www.x-firm.com/?page_id=145
  14:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Modified by Kristian Lauszus
  15:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approa
  16:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  17:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Discrete Kalman filter time update equations - Time Update ("Predict")
  18:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Update xhat - Project the state ahead
  19:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 1 */
  20:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->rate = newRate - handle->bias;
  47              		.loc 1 20 0
  48 000e FB68     		ldr	r3, [r7, #12]
  49 0010 D3ED047A 		flds	s15, [r3, #16]
  50 0014 97ED017A 		flds	s14, [r7, #4]
  51 0018 77EE677A 		fsubs	s15, s14, s15
  52 001c FB68     		ldr	r3, [r7, #12]
  53 001e C3ED057A 		fsts	s15, [r3, #20]
  21:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->angle += dt * handle->rate;
  54              		.loc 1 21 0
  55 0022 FB68     		ldr	r3, [r7, #12]
  56 0024 93ED037A 		flds	s14, [r3, #12]
  57 0028 FB68     		ldr	r3, [r7, #12]
  58 002a D3ED056A 		flds	s13, [r3, #20]
  59 002e D7ED007A 		flds	s15, [r7, #0]
  60 0032 66EEA77A 		fmuls	s15, s13, s15
  61 0036 77EE277A 		fadds	s15, s14, s15
  62 003a FB68     		ldr	r3, [r7, #12]
  63 003c C3ED037A 		fsts	s15, [r3, #12]
  22:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  23:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Update estimation error covariance - Project the error covariance ahead
  24:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 2 */
  25:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[0][0] += dt * (dt*handle->P[1][1] - handle->P[0][1] - handle->P[1][0] + handle->Q_angle)
  64              		.loc 1 25 0
  65 0040 FB68     		ldr	r3, [r7, #12]
  66 0042 93ED067A 		flds	s14, [r3, #24]
  67 0046 FB68     		ldr	r3, [r7, #12]
  68 0048 D3ED096A 		flds	s13, [r3, #36]
  69 004c D7ED007A 		flds	s15, [r7, #0]
  70 0050 66EEA76A 		fmuls	s13, s13, s15
  71 0054 FB68     		ldr	r3, [r7, #12]
  72 0056 D3ED077A 		flds	s15, [r3, #28]
  73 005a 76EEE76A 		fsubs	s13, s13, s15
  74 005e FB68     		ldr	r3, [r7, #12]
  75 0060 D3ED087A 		flds	s15, [r3, #32]
  76 0064 76EEE76A 		fsubs	s13, s13, s15
  77 0068 FB68     		ldr	r3, [r7, #12]
  78 006a D3ED007A 		flds	s15, [r3, #0]
  79 006e 76EEA76A 		fadds	s13, s13, s15
  80 0072 D7ED007A 		flds	s15, [r7, #0]
  81 0076 66EEA77A 		fmuls	s15, s13, s15
  82 007a 77EE277A 		fadds	s15, s14, s15
  83 007e FB68     		ldr	r3, [r7, #12]
  84 0080 C3ED067A 		fsts	s15, [r3, #24]
  26:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[0][1] -= dt * handle->P[1][1];
  85              		.loc 1 26 0
  86 0084 FB68     		ldr	r3, [r7, #12]
  87 0086 93ED077A 		flds	s14, [r3, #28]
  88 008a FB68     		ldr	r3, [r7, #12]
  89 008c D3ED096A 		flds	s13, [r3, #36]
  90 0090 D7ED007A 		flds	s15, [r7, #0]
  91 0094 66EEA77A 		fmuls	s15, s13, s15
  92 0098 77EE677A 		fsubs	s15, s14, s15
  93 009c FB68     		ldr	r3, [r7, #12]
  94 009e C3ED077A 		fsts	s15, [r3, #28]
  27:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[1][0] -= dt * handle->P[1][1];
  95              		.loc 1 27 0
  96 00a2 FB68     		ldr	r3, [r7, #12]
  97 00a4 93ED087A 		flds	s14, [r3, #32]
  98 00a8 FB68     		ldr	r3, [r7, #12]
  99 00aa D3ED096A 		flds	s13, [r3, #36]
 100 00ae D7ED007A 		flds	s15, [r7, #0]
 101 00b2 66EEA77A 		fmuls	s15, s13, s15
 102 00b6 77EE677A 		fsubs	s15, s14, s15
 103 00ba FB68     		ldr	r3, [r7, #12]
 104 00bc C3ED087A 		fsts	s15, [r3, #32]
  28:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[1][1] += handle->Q_bias * dt;
 105              		.loc 1 28 0
 106 00c0 FB68     		ldr	r3, [r7, #12]
 107 00c2 93ED097A 		flds	s14, [r3, #36]
 108 00c6 FB68     		ldr	r3, [r7, #12]
 109 00c8 D3ED016A 		flds	s13, [r3, #4]
 110 00cc D7ED007A 		flds	s15, [r7, #0]
 111 00d0 66EEA77A 		fmuls	s15, s13, s15
 112 00d4 77EE277A 		fadds	s15, s14, s15
 113 00d8 FB68     		ldr	r3, [r7, #12]
 114 00da C3ED097A 		fsts	s15, [r3, #36]
  29:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  30:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
  31:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Calculate Kalman gain - Compute the Kalman gain
  32:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 4 */
  33:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	float S = handle->P[0][0] + handle->R_measure; // Estimate error
 115              		.loc 1 33 0
 116 00de FB68     		ldr	r3, [r7, #12]
 117 00e0 93ED067A 		flds	s14, [r3, #24]
 118 00e4 FB68     		ldr	r3, [r7, #12]
 119 00e6 D3ED027A 		flds	s15, [r3, #8]
 120 00ea 77EE277A 		fadds	s15, s14, s15
 121 00ee C7ED097A 		fsts	s15, [r7, #36]
  34:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 5 */
  35:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	float K[2]; // Kalman gain - This is a 2x1 vector
  36:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	K[0] = handle->P[0][0] / S;
 122              		.loc 1 36 0
 123 00f2 FB68     		ldr	r3, [r7, #12]
 124 00f4 93ED067A 		flds	s14, [r3, #24]
 125 00f8 D7ED097A 		flds	s15, [r7, #36]
 126 00fc C7EE277A 		fdivs	s15, s14, s15
 127 0100 C7ED047A 		fsts	s15, [r7, #16]
  37:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	K[1] = handle->P[1][0] / S;
 128              		.loc 1 37 0
 129 0104 FB68     		ldr	r3, [r7, #12]
 130 0106 93ED087A 		flds	s14, [r3, #32]
 131 010a D7ED097A 		flds	s15, [r7, #36]
 132 010e C7EE277A 		fdivs	s15, s14, s15
 133 0112 C7ED057A 		fsts	s15, [r7, #20]
  38:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  39:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
  40:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 3 */
  41:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	float y = newAngle - handle->angle; // Angle difference
 134              		.loc 1 41 0
 135 0116 FB68     		ldr	r3, [r7, #12]
 136 0118 D3ED037A 		flds	s15, [r3, #12]
 137 011c 97ED027A 		flds	s14, [r7, #8]
 138 0120 77EE677A 		fsubs	s15, s14, s15
 139 0124 C7ED087A 		fsts	s15, [r7, #32]
  42:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 6 */
  43:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->angle += K[0] * y;
 140              		.loc 1 43 0
 141 0128 FB68     		ldr	r3, [r7, #12]
 142 012a 93ED037A 		flds	s14, [r3, #12]
 143 012e D7ED046A 		flds	s13, [r7, #16]
 144 0132 D7ED087A 		flds	s15, [r7, #32]
 145 0136 66EEA77A 		fmuls	s15, s13, s15
 146 013a 77EE277A 		fadds	s15, s14, s15
 147 013e FB68     		ldr	r3, [r7, #12]
 148 0140 C3ED037A 		fsts	s15, [r3, #12]
  44:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->bias += K[1] * y;
 149              		.loc 1 44 0
 150 0144 FB68     		ldr	r3, [r7, #12]
 151 0146 93ED047A 		flds	s14, [r3, #16]
 152 014a D7ED056A 		flds	s13, [r7, #20]
 153 014e D7ED087A 		flds	s15, [r7, #32]
 154 0152 66EEA77A 		fmuls	s15, s13, s15
 155 0156 77EE277A 		fadds	s15, s14, s15
 156 015a FB68     		ldr	r3, [r7, #12]
 157 015c C3ED047A 		fsts	s15, [r3, #16]
  45:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  46:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	// Calculate estimation error covariance - Update the error covariance
  47:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	/* Step 7 */
  48:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	float P00_temp = handle->P[0][0];
 158              		.loc 1 48 0
 159 0160 FB68     		ldr	r3, [r7, #12]
 160 0162 9B69     		ldr	r3, [r3, #24]	@ float
 161 0164 FB61     		str	r3, [r7, #28]	@ float
  49:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	float P01_temp = handle->P[0][1];
 162              		.loc 1 49 0
 163 0166 FB68     		ldr	r3, [r7, #12]
 164 0168 DB69     		ldr	r3, [r3, #28]	@ float
 165 016a BB61     		str	r3, [r7, #24]	@ float
  50:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  51:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[0][0] -= K[0] * P00_temp;
 166              		.loc 1 51 0
 167 016c FB68     		ldr	r3, [r7, #12]
 168 016e 93ED067A 		flds	s14, [r3, #24]
 169 0172 D7ED046A 		flds	s13, [r7, #16]
 170 0176 D7ED077A 		flds	s15, [r7, #28]
 171 017a 66EEA77A 		fmuls	s15, s13, s15
 172 017e 77EE677A 		fsubs	s15, s14, s15
 173 0182 FB68     		ldr	r3, [r7, #12]
 174 0184 C3ED067A 		fsts	s15, [r3, #24]
  52:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[0][1] -= K[0] * P01_temp;
 175              		.loc 1 52 0
 176 0188 FB68     		ldr	r3, [r7, #12]
 177 018a 93ED077A 		flds	s14, [r3, #28]
 178 018e D7ED046A 		flds	s13, [r7, #16]
 179 0192 D7ED067A 		flds	s15, [r7, #24]
 180 0196 66EEA77A 		fmuls	s15, s13, s15
 181 019a 77EE677A 		fsubs	s15, s14, s15
 182 019e FB68     		ldr	r3, [r7, #12]
 183 01a0 C3ED077A 		fsts	s15, [r3, #28]
  53:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[1][0] -= K[1] * P00_temp;
 184              		.loc 1 53 0
 185 01a4 FB68     		ldr	r3, [r7, #12]
 186 01a6 93ED087A 		flds	s14, [r3, #32]
 187 01aa D7ED056A 		flds	s13, [r7, #20]
 188 01ae D7ED077A 		flds	s15, [r7, #28]
 189 01b2 66EEA77A 		fmuls	s15, s13, s15
 190 01b6 77EE677A 		fsubs	s15, s14, s15
 191 01ba FB68     		ldr	r3, [r7, #12]
 192 01bc C3ED087A 		fsts	s15, [r3, #32]
  54:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[1][1] -= K[1] * P01_temp;
 193              		.loc 1 54 0
 194 01c0 FB68     		ldr	r3, [r7, #12]
 195 01c2 93ED097A 		flds	s14, [r3, #36]
 196 01c6 D7ED056A 		flds	s13, [r7, #20]
 197 01ca D7ED067A 		flds	s15, [r7, #24]
 198 01ce 66EEA77A 		fmuls	s15, s13, s15
 199 01d2 77EE677A 		fsubs	s15, s14, s15
 200 01d6 FB68     		ldr	r3, [r7, #12]
 201 01d8 C3ED097A 		fsts	s15, [r3, #36]
  55:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  56:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	return handle->angle;
 202              		.loc 1 56 0
 203 01dc FB68     		ldr	r3, [r7, #12]
 204 01de DB68     		ldr	r3, [r3, #12]	@ float
  57:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** }
 205              		.loc 1 57 0
 206 01e0 1846     		mov	r0, r3	@ float
 207 01e2 07F12C07 		add	r7, r7, #44
 208 01e6 BD46     		mov	sp, r7
 209 01e8 80BC     		pop	{r7}
 210 01ea 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE0:
 214              		.section	.text.KALMAN_Init,"ax",%progbits
 215              		.align	2
 216              		.global	KALMAN_Init
 217              		.thumb
 218              		.thumb_func
 220              	KALMAN_Init:
 221              	.LFB1:
  58:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  59:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** void KALMAN_Init(KALMAN_t *handle, float Q_angle, float Q_bias, float R_measure)
  60:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** {
 222              		.loc 1 60 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 16
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 7, -4
 231 0002 85B0     		sub	sp, sp, #20
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 24
 234 0004 00AF     		add	r7, sp, #0
 235              	.LCFI5:
 236              		.cfi_def_cfa_register 7
 237 0006 F860     		str	r0, [r7, #12]
 238 0008 B960     		str	r1, [r7, #8]	@ float
 239 000a 7A60     		str	r2, [r7, #4]	@ float
 240 000c 3B60     		str	r3, [r7, #0]	@ float
  61:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c ****     /* We will set the variables like so, these can also be tuned by the user */
  62:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->Q_angle = Q_angle;
 241              		.loc 1 62 0
 242 000e FB68     		ldr	r3, [r7, #12]
 243 0010 BA68     		ldr	r2, [r7, #8]	@ float
 244 0012 1A60     		str	r2, [r3, #0]	@ float
  63:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->Q_bias = Q_bias;
 245              		.loc 1 63 0
 246 0014 FB68     		ldr	r3, [r7, #12]
 247 0016 7A68     		ldr	r2, [r7, #4]	@ float
 248 0018 5A60     		str	r2, [r3, #4]	@ float
  64:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->R_measure = R_measure;
 249              		.loc 1 64 0
 250 001a FB68     		ldr	r3, [r7, #12]
 251 001c 3A68     		ldr	r2, [r7, #0]	@ float
 252 001e 9A60     		str	r2, [r3, #8]	@ float
  65:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  66:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->angle = 0.0f; // Reset the angle
 253              		.loc 1 66 0
 254 0020 FB68     		ldr	r3, [r7, #12]
 255 0022 4FF00002 		mov	r2, #0
 256 0026 DA60     		str	r2, [r3, #12]	@ float
  67:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->bias = 0.0f; // Reset bias
 257              		.loc 1 67 0
 258 0028 FB68     		ldr	r3, [r7, #12]
 259 002a 4FF00002 		mov	r2, #0
 260 002e 1A61     		str	r2, [r3, #16]	@ float
  68:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  69:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use 
 261              		.loc 1 69 0
 262 0030 FB68     		ldr	r3, [r7, #12]
 263 0032 4FF00002 		mov	r2, #0
 264 0036 9A61     		str	r2, [r3, #24]	@ float
  70:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[0][1] = 0.0f;
 265              		.loc 1 70 0
 266 0038 FB68     		ldr	r3, [r7, #12]
 267 003a 4FF00002 		mov	r2, #0
 268 003e DA61     		str	r2, [r3, #28]	@ float
  71:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[1][0] = 0.0f;
 269              		.loc 1 71 0
 270 0040 FB68     		ldr	r3, [r7, #12]
 271 0042 4FF00002 		mov	r2, #0
 272 0046 1A62     		str	r2, [r3, #32]	@ float
  72:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 	handle->P[1][1] = 0.0f;
 273              		.loc 1 72 0
 274 0048 FB68     		ldr	r3, [r7, #12]
 275 004a 4FF00002 		mov	r2, #0
 276 004e 5A62     		str	r2, [r3, #36]	@ float
  73:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** }
 277              		.loc 1 73 0
 278 0050 07F11407 		add	r7, r7, #20
 279 0054 BD46     		mov	sp, r7
 280 0056 80BC     		pop	{r7}
 281 0058 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE1:
 285 005a 00BF     		.section	.text.KALMAN_setAngle,"ax",%progbits
 286              		.align	2
 287              		.global	KALMAN_setAngle
 288              		.thumb
 289              		.thumb_func
 291              	KALMAN_setAngle:
 292              	.LFB2:
  74:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  75:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** void KALMAN_setAngle(KALMAN_t *handle, float newAngle) { handle->angle = newAngle; } // Used to set
 293              		.loc 1 75 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 8
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0000 80B4     		push	{r7}
 299              	.LCFI6:
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 7, -4
 302 0002 83B0     		sub	sp, sp, #12
 303              	.LCFI7:
 304              		.cfi_def_cfa_offset 16
 305 0004 00AF     		add	r7, sp, #0
 306              	.LCFI8:
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
 309 0008 3960     		str	r1, [r7, #0]	@ float
 310              		.loc 1 75 0
 311 000a 7B68     		ldr	r3, [r7, #4]
 312 000c 3A68     		ldr	r2, [r7, #0]	@ float
 313 000e DA60     		str	r2, [r3, #12]	@ float
 314 0010 07F10C07 		add	r7, r7, #12
 315 0014 BD46     		mov	sp, r7
 316 0016 80BC     		pop	{r7}
 317 0018 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE2:
 321 001a 00BF     		.section	.text.KALMAN_getRate,"ax",%progbits
 322              		.align	2
 323              		.global	KALMAN_getRate
 324              		.thumb
 325              		.thumb_func
 327              	KALMAN_getRate:
 328              	.LFB3:
  76:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** float KALMAN_getRate(KALMAN_t *handle) { return handle->rate; } // Return the unbiased rate
 329              		.loc 1 76 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0000 80B4     		push	{r7}
 335              	.LCFI9:
 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 7, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              	.LCFI10:
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI11:
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 345              		.loc 1 76 0
 346 0008 7B68     		ldr	r3, [r7, #4]
 347 000a 5B69     		ldr	r3, [r3, #20]	@ float
 348 000c 1846     		mov	r0, r3	@ float
 349 000e 07F10C07 		add	r7, r7, #12
 350 0012 BD46     		mov	sp, r7
 351 0014 80BC     		pop	{r7}
 352 0016 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE3:
 356              		.section	.text.KALMAN_setQangle,"ax",%progbits
 357              		.align	2
 358              		.global	KALMAN_setQangle
 359              		.thumb
 360              		.thumb_func
 362              	KALMAN_setQangle:
 363              	.LFB4:
  77:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  78:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** /* These are used to tune the Kalman filter */
  79:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** void KALMAN_setQangle(KALMAN_t *handle, float newQ_angle) { handle->Q_angle = newQ_angle; }
 364              		.loc 1 79 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              	.LCFI12:
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 83B0     		sub	sp, sp, #12
 374              	.LCFI13:
 375              		.cfi_def_cfa_offset 16
 376 0004 00AF     		add	r7, sp, #0
 377              	.LCFI14:
 378              		.cfi_def_cfa_register 7
 379 0006 7860     		str	r0, [r7, #4]
 380 0008 3960     		str	r1, [r7, #0]	@ float
 381              		.loc 1 79 0
 382 000a 7B68     		ldr	r3, [r7, #4]
 383 000c 3A68     		ldr	r2, [r7, #0]	@ float
 384 000e 1A60     		str	r2, [r3, #0]	@ float
 385 0010 07F10C07 		add	r7, r7, #12
 386 0014 BD46     		mov	sp, r7
 387 0016 80BC     		pop	{r7}
 388 0018 7047     		bx	lr
 389              		.cfi_endproc
 390              	.LFE4:
 392 001a 00BF     		.section	.text.KALMAN_setQbias,"ax",%progbits
 393              		.align	2
 394              		.global	KALMAN_setQbias
 395              		.thumb
 396              		.thumb_func
 398              	KALMAN_setQbias:
 399              	.LFB5:
  80:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** void KALMAN_setQbias(KALMAN_t *handle, float newQ_bias) { handle->Q_bias = newQ_bias; }
 400              		.loc 1 80 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 0000 80B4     		push	{r7}
 406              	.LCFI15:
 407              		.cfi_def_cfa_offset 4
 408              		.cfi_offset 7, -4
 409 0002 83B0     		sub	sp, sp, #12
 410              	.LCFI16:
 411              		.cfi_def_cfa_offset 16
 412 0004 00AF     		add	r7, sp, #0
 413              	.LCFI17:
 414              		.cfi_def_cfa_register 7
 415 0006 7860     		str	r0, [r7, #4]
 416 0008 3960     		str	r1, [r7, #0]	@ float
 417              		.loc 1 80 0
 418 000a 7B68     		ldr	r3, [r7, #4]
 419 000c 3A68     		ldr	r2, [r7, #0]	@ float
 420 000e 5A60     		str	r2, [r3, #4]	@ float
 421 0010 07F10C07 		add	r7, r7, #12
 422 0014 BD46     		mov	sp, r7
 423 0016 80BC     		pop	{r7}
 424 0018 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE5:
 428 001a 00BF     		.section	.text.KALMAN_setRmeasure,"ax",%progbits
 429              		.align	2
 430              		.global	KALMAN_setRmeasure
 431              		.thumb
 432              		.thumb_func
 434              	KALMAN_setRmeasure:
 435              	.LFB6:
  81:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** void KALMAN_setRmeasure(KALMAN_t *handle, float newR_measure) { handle->R_measure = newR_measure; }
 436              		.loc 1 81 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              	.LCFI18:
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 7, -4
 445 0002 83B0     		sub	sp, sp, #12
 446              	.LCFI19:
 447              		.cfi_def_cfa_offset 16
 448 0004 00AF     		add	r7, sp, #0
 449              	.LCFI20:
 450              		.cfi_def_cfa_register 7
 451 0006 7860     		str	r0, [r7, #4]
 452 0008 3960     		str	r1, [r7, #0]	@ float
 453              		.loc 1 81 0
 454 000a 7B68     		ldr	r3, [r7, #4]
 455 000c 3A68     		ldr	r2, [r7, #0]	@ float
 456 000e 9A60     		str	r2, [r3, #8]	@ float
 457 0010 07F10C07 		add	r7, r7, #12
 458 0014 BD46     		mov	sp, r7
 459 0016 80BC     		pop	{r7}
 460 0018 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE6:
 464 001a 00BF     		.section	.text.KALMAN_getQangle,"ax",%progbits
 465              		.align	2
 466              		.global	KALMAN_getQangle
 467              		.thumb
 468              		.thumb_func
 470              	KALMAN_getQangle:
 471              	.LFB7:
  82:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** 
  83:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** float KALMAN_getQangle(KALMAN_t *handle) { return handle->Q_angle; }
 472              		.loc 1 83 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              	.LCFI21:
 479              		.cfi_def_cfa_offset 4
 480              		.cfi_offset 7, -4
 481 0002 83B0     		sub	sp, sp, #12
 482              	.LCFI22:
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              	.LCFI23:
 486              		.cfi_def_cfa_register 7
 487 0006 7860     		str	r0, [r7, #4]
 488              		.loc 1 83 0
 489 0008 7B68     		ldr	r3, [r7, #4]
 490 000a 1B68     		ldr	r3, [r3, #0]	@ float
 491 000c 1846     		mov	r0, r3	@ float
 492 000e 07F10C07 		add	r7, r7, #12
 493 0012 BD46     		mov	sp, r7
 494 0014 80BC     		pop	{r7}
 495 0016 7047     		bx	lr
 496              		.cfi_endproc
 497              	.LFE7:
 499              		.section	.text.KALMAN_getQbias,"ax",%progbits
 500              		.align	2
 501              		.global	KALMAN_getQbias
 502              		.thumb
 503              		.thumb_func
 505              	KALMAN_getQbias:
 506              	.LFB8:
  84:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** float KALMAN_getQbias(KALMAN_t *handle) { return handle->Q_bias; }
 507              		.loc 1 84 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512 0000 80B4     		push	{r7}
 513              	.LCFI24:
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 7, -4
 516 0002 83B0     		sub	sp, sp, #12
 517              	.LCFI25:
 518              		.cfi_def_cfa_offset 16
 519 0004 00AF     		add	r7, sp, #0
 520              	.LCFI26:
 521              		.cfi_def_cfa_register 7
 522 0006 7860     		str	r0, [r7, #4]
 523              		.loc 1 84 0
 524 0008 7B68     		ldr	r3, [r7, #4]
 525 000a 5B68     		ldr	r3, [r3, #4]	@ float
 526 000c 1846     		mov	r0, r3	@ float
 527 000e 07F10C07 		add	r7, r7, #12
 528 0012 BD46     		mov	sp, r7
 529 0014 80BC     		pop	{r7}
 530 0016 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE8:
 534              		.section	.text.KALMAN_getRmeasure,"ax",%progbits
 535              		.align	2
 536              		.global	KALMAN_getRmeasure
 537              		.thumb
 538              		.thumb_func
 540              	KALMAN_getRmeasure:
 541              	.LFB9:
  85:../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.c **** float KALMAN_getRmeasure(KALMAN_t *handle) { return handle->R_measure; }
 542              		.loc 1 85 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              	.LCFI27:
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
 552              	.LCFI28:
 553              		.cfi_def_cfa_offset 16
 554 0004 00AF     		add	r7, sp, #0
 555              	.LCFI29:
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 558              		.loc 1 85 0
 559 0008 7B68     		ldr	r3, [r7, #4]
 560 000a 9B68     		ldr	r3, [r3, #8]	@ float
 561 000c 1846     		mov	r0, r3	@ float
 562 000e 07F10C07 		add	r7, r7, #12
 563 0012 BD46     		mov	sp, r7
 564 0014 80BC     		pop	{r7}
 565 0016 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE9:
 569              		.text
 570              	.Letext0:
 571              		.file 2 "../_Quadrocopter/Sensors/MPU9X50/Filter/kalman.h"
DEFINED SYMBOLS
                            *ABS*:00000000 kalman.c
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:20     .text.KALMAN_getAngle:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:25     .text.KALMAN_getAngle:00000000 KALMAN_getAngle
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:215    .text.KALMAN_Init:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:220    .text.KALMAN_Init:00000000 KALMAN_Init
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:286    .text.KALMAN_setAngle:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:291    .text.KALMAN_setAngle:00000000 KALMAN_setAngle
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:322    .text.KALMAN_getRate:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:327    .text.KALMAN_getRate:00000000 KALMAN_getRate
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:357    .text.KALMAN_setQangle:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:362    .text.KALMAN_setQangle:00000000 KALMAN_setQangle
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:393    .text.KALMAN_setQbias:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:398    .text.KALMAN_setQbias:00000000 KALMAN_setQbias
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:429    .text.KALMAN_setRmeasure:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:434    .text.KALMAN_setRmeasure:00000000 KALMAN_setRmeasure
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:465    .text.KALMAN_getQangle:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:470    .text.KALMAN_getQangle:00000000 KALMAN_getQangle
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:500    .text.KALMAN_getQbias:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:505    .text.KALMAN_getQbias:00000000 KALMAN_getQbias
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:535    .text.KALMAN_getRmeasure:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccVohpve.s:540    .text.KALMAN_getRmeasure:00000000 KALMAN_getRmeasure
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
