   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"PWMSP003.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWMSP003_lSetCompareEdgeAlign,"ax",%progbits
  20              		.align	2
  21              		.global	PWMSP003_lSetCompareEdgeAlign
  22              		.thumb
  23              		.thumb_func
  25              	PWMSP003_lSetCompareEdgeAlign:
  26              	.LFB112:
  27              		.file 1 "../Dave/Generated/src/PWMSP003/PWMSP003.c"
   1:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /*CODE_BLOCK_BEGIN[pwmsp003.c]*/
   2:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
   3:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /*******************************************************************************
   4:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
   5:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
   6:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** Copyright (C) 2013 Infineon Technologies AG. All rights reserved.          **
   7:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
   8:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** Infineon Technologies AG (Infineon) is supplying this software for use     **
   9:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** with Infineon's microcontrollers.                                          **
  10:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** This file can be freely distributed within development tools that are      **
  11:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** supporting such microcontrollers.                                          **
  12:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  13:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED **
  14:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF         **
  15:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS         **
  16:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** SOFTWARE. INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR          **
  17:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.  **
  18:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  19:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ********************************************************************************
  20:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  21:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** PLATFORM : Infineon XMC4000/XMC1000 Series                                 **
  22:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  23:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** COMPILER : Compiler Independent                                            **
  24:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  25:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** AUTHOR   : App Developer                                                   **
  26:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  27:../Dave/Generated/src/PWMSP003/PWMSP003.c **** *******************************************************************************/
  28:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
  29:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /*******************************************************************************
  30:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                      Revision History                                      **
  31:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ********************************************************************************
  32:../Dave/Generated/src/PWMSP003/PWMSP003.c ****    1.0.4  31-Jan-2014   1. Initial version
  33:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                         2. Minor updates to remove warnings
  34:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                         3. Document automation by DaveDocGen script
  35:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                         4. XMC1000 VQFN package support added
  36:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                            XMC4000 Device support extended for XMC4500 AC step
  37:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                            XMC4400 AB Step and XMC4200 AB Step.
  38:../Dave/Generated/src/PWMSP003/PWMSP003.c **** *******************************************************************************/
  39:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
  40:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /*******************************************************************************
  41:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                      Author(s) Identity                                    **
  42:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ********************************************************************************
  43:../Dave/Generated/src/PWMSP003/PWMSP003.c **** **                                                                            **
  44:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** Initials     Name                                                          **
  45:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** ---------------------------------------------------------------------------**
  46:../Dave/Generated/src/PWMSP003/PWMSP003.c **** ** SSAM         Sridhar Sampath                                               **
  47:../Dave/Generated/src/PWMSP003/PWMSP003.c **** *******************************************************************************/
  48:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
  49:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  50:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @file  PWMSP003.c
  51:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @brief This file contains App parameter data as per GUI configurations
  52:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  53:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
  54:../Dave/Generated/src/PWMSP003/PWMSP003.c **** #include "../../inc/PWMSP003/PWMSP003.h"
  55:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
  56:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /*******************************************************************************
  57:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  **                 Private Function declarations                             **
  58:../Dave/Generated/src/PWMSP003/PWMSP003.c **** *******************************************************************************/
  59:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  60:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @cond INTERNAL_DOCS
  61:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  62:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  63:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @ingroup PWMSP003_privatefunc
  64:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @{
  65:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  66:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
  67:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  /**
  68:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @brief This function initializes CCU4 slice as per GUI configurations.
  69:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  HandlePtr Pointer to PWMSP003_HandleType structure
  70:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @return status_t status
  71:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  72:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_lInit(const PWMSP003_HandleType* HandlePtr);
  73:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  74:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @brief This function will set duty cycle if edge aligned mode
  75:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  *        without timer concatenation is selected.
  76:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  HandlePtr Pointer to PWMSP003_HandleType structure
  77:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  Compare This is duty cycle in percentage
  78:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @return status_t void
  79:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  80:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetCompareEdgeAlign( void* Handle, uint32_t Compare);
  81:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  82:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @brief This function will set duty cycle if center aligned mode is selected.
  83:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  HandlePtr Pointer to PWMSP003_HandleType structure
  84:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  Compare This is duty cycle in percentage
  85:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @return status_t void
  86:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  87:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetCompareCenterAlign(void* Handle, uint32_t Compare);
  88:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  89:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @brief This function will set duty cycle if edge aligned mode without
  90:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  *        timer concatenation is selected.
  91:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  HandlePtr Pointer to PWMSP003_HandleType structure
  92:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  Duty This is duty cycle in percentage
  93:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @return status_t void
  94:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
  95:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetDutyEdgeAlign( void* Handle, float Duty);
  96:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
  97:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @brief This function will set duty cycle if center aligned mode is selected.
  98:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  HandlePtr Pointer to PWMSP003_HandleType structure
  99:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @param[in]  Duty This is duty cycle in percentage
 100:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @return status_t void
 101:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 102:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetDutyCenterAlign(void* Handle, float Duty);
 103:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  /**
 104:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @}
 105:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 106:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 107:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  /*******************************************************************************
 108:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  **                 Function definitions                                      **
 109:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  ******************************************************************************/
 110:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 111:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @ingroup PWMSP003_funcdefines
 112:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * @{
 113:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 114:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 115:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 116:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function is used to change the compare register value
 117:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * in edge-aligned mode.
 118:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 119:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetCompareEdgeAlign( void* Handle, uint32_t Compare)
 120:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
  28              		.loc 1 120 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 3960     		str	r1, [r7, #0]
 121:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 122:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp2;
 123:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   PWMSP003_HandleType* HandlePtr = (PWMSP003_HandleType*)Handle;
  45              		.loc 1 123 0
  46 000a 7B68     		ldr	r3, [r7, #4]
  47 000c 7B61     		str	r3, [r7, #20]
 124:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 125:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yRegsPtr->CRS = (Compare & 0xFFFFU);
  48              		.loc 1 125 0
  49 000e 7B69     		ldr	r3, [r7, #20]
  50 0010 DA69     		ldr	r2, [r3, #28]
  51 0012 3B68     		ldr	r3, [r7, #0]
  52 0014 4FEA0343 		lsl	r3, r3, #16
  53 0018 4FEA1343 		lsr	r3, r3, #16
  54 001c D363     		str	r3, [r2, #60]
 126:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 127:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   /* Request shadow transfer */
 128:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp2 = (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
  55              		.loc 1 128 0
  56 001e 7B69     		ldr	r3, [r7, #20]
  57 0020 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
  58 0024 4FEA8303 		lsl	r3, r3, #2
  59 0028 3B61     		str	r3, [r7, #16]
 129:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 = (uint32_t)CCU4_GCSS_S0SE_Pos + Temp2;
  60              		.loc 1 129 0
  61 002a 3B69     		ldr	r3, [r7, #16]
  62 002c FB60     		str	r3, [r7, #12]
 130:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yKernRegsPtr->GCSS |= ((uint32_t)0x01 << Temp1);
  63              		.loc 1 130 0
  64 002e 7B69     		ldr	r3, [r7, #20]
  65 0030 9B69     		ldr	r3, [r3, #24]
  66 0032 7A69     		ldr	r2, [r7, #20]
  67 0034 9269     		ldr	r2, [r2, #24]
  68 0036 1169     		ldr	r1, [r2, #16]
  69 0038 FA68     		ldr	r2, [r7, #12]
  70 003a 4FF00100 		mov	r0, #1
  71 003e 00FA02F2 		lsl	r2, r0, r2
  72 0042 0A43     		orrs	r2, r2, r1
  73 0044 1A61     		str	r2, [r3, #16]
 131:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
  74              		.loc 1 131 0
  75 0046 07F11C07 		add	r7, r7, #28
  76 004a BD46     		mov	sp, r7
  77 004c 80BC     		pop	{r7}
  78 004e 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE112:
  82              		.section	.text.PWMSP003_lSetCompareCenterAlign,"ax",%progbits
  83              		.align	2
  84              		.global	PWMSP003_lSetCompareCenterAlign
  85              		.thumb
  86              		.thumb_func
  88              	PWMSP003_lSetCompareCenterAlign:
  89              	.LFB113:
 132:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 133:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 134:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function is used to change the compare register value
 135:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * in center-aligned mode.
 136:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 137:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetCompareCenterAlign(void* Handle, uint32_t Compare)
 138:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
  90              		.loc 1 138 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 16
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              	.LCFI3:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 85B0     		sub	sp, sp, #20
 100              	.LCFI4:
 101              		.cfi_def_cfa_offset 24
 102 0004 00AF     		add	r7, sp, #0
 103              	.LCFI5:
 104              		.cfi_def_cfa_register 7
 105 0006 7860     		str	r0, [r7, #4]
 106 0008 3960     		str	r1, [r7, #0]
 139:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 140:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 141:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   PWMSP003_HandleType* HandlePtr = (PWMSP003_HandleType*)Handle;
 107              		.loc 1 141 0
 108 000a 7B68     		ldr	r3, [r7, #4]
 109 000c FB60     		str	r3, [r7, #12]
 142:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 143:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yRegsPtr->CRS = (Compare & 0xFFFFU);
 110              		.loc 1 143 0
 111 000e FB68     		ldr	r3, [r7, #12]
 112 0010 DA69     		ldr	r2, [r3, #28]
 113 0012 3B68     		ldr	r3, [r7, #0]
 114 0014 4FEA0343 		lsl	r3, r3, #16
 115 0018 4FEA1343 		lsr	r3, r3, #16
 116 001c D363     		str	r3, [r2, #60]
 144:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 145:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   /* Request shadow transfer */
 146:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 = ((uint32_t)CCU4_GCSS_S0SE_Pos +\
 147:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                           (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice));
 117              		.loc 1 147 0
 118 001e FB68     		ldr	r3, [r7, #12]
 119 0020 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 146:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 = ((uint32_t)CCU4_GCSS_S0SE_Pos +\
 120              		.loc 1 146 0
 121 0024 4FEA8303 		lsl	r3, r3, #2
 122 0028 BB60     		str	r3, [r7, #8]
 148:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yKernRegsPtr->GCSS |= ((uint32_t)0x01 << Temp1);
 123              		.loc 1 148 0
 124 002a FB68     		ldr	r3, [r7, #12]
 125 002c 9B69     		ldr	r3, [r3, #24]
 126 002e FA68     		ldr	r2, [r7, #12]
 127 0030 9269     		ldr	r2, [r2, #24]
 128 0032 1169     		ldr	r1, [r2, #16]
 129 0034 BA68     		ldr	r2, [r7, #8]
 130 0036 4FF00100 		mov	r0, #1
 131 003a 00FA02F2 		lsl	r2, r0, r2
 132 003e 0A43     		orrs	r2, r2, r1
 133 0040 1A61     		str	r2, [r3, #16]
 149:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 134              		.loc 1 149 0
 135 0042 07F11407 		add	r7, r7, #20
 136 0046 BD46     		mov	sp, r7
 137 0048 80BC     		pop	{r7}
 138 004a 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE113:
 142              		.section	.text.PWMSP003_lSetDutyEdgeAlign,"ax",%progbits
 143              		.align	2
 144              		.global	PWMSP003_lSetDutyEdgeAlign
 145              		.thumb
 146              		.thumb_func
 148              	PWMSP003_lSetDutyEdgeAlign:
 149              	.LFB114:
 150:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 151:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 152:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function is used to change the duty cycle of the PWM waveform
 153:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * in edge-aligned mode
 154:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 155:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetDutyEdgeAlign( void* Handle, float Duty)
 156:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 150              		.loc 1 156 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 32
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 0002 89B0     		sub	sp, sp, #36
 160              	.LCFI7:
 161              		.cfi_def_cfa_offset 40
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI8:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 166 0008 3960     		str	r1, [r7, #0]	@ float
 157:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t CompareVal = (uint32_t)0;
 167              		.loc 1 157 0
 168 000a 4FF00003 		mov	r3, #0
 169 000e FB61     		str	r3, [r7, #28]
 158:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 159:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   float fDuty, fPRS ;
 160:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   PWMSP003_HandleType* HandlePtr = (PWMSP003_HandleType*)Handle;
 170              		.loc 1 160 0
 171 0010 7B68     		ldr	r3, [r7, #4]
 172 0012 BB61     		str	r3, [r7, #24]
 161:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   fDuty = Duty;
 173              		.loc 1 161 0
 174 0014 3B68     		ldr	r3, [r7, #0]	@ float
 175 0016 7B61     		str	r3, [r7, #20]	@ float
 162:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 163:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 164:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 165:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   fDuty = (float)((float)100.00 - (float)fDuty)/(float)100.00;
 176              		.loc 1 165 0
 177 0018 9FED1F7A 		flds	s14, .L4
 178 001c D7ED057A 		flds	s15, [r7, #20]
 179 0020 37EE677A 		fsubs	s14, s14, s15
 180 0024 DFED1C7A 		flds	s15, .L4
 181 0028 C7EE277A 		fdivs	s15, s14, s15
 182 002c C7ED057A 		fsts	s15, [r7, #20]
 166:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   fPRS = (float)((uint32_t)HandlePtr->CC4yRegsPtr->PRS + 1U);
 183              		.loc 1 166 0
 184 0030 BB69     		ldr	r3, [r7, #24]
 185 0032 DB69     		ldr	r3, [r3, #28]
 186 0034 5B6B     		ldr	r3, [r3, #52]
 187 0036 03F10103 		add	r3, r3, #1
 188 003a 07EE103A 		fmsr	s14, r3	@ int
 189 003e F8EE477A 		fuitos	s15, s14
 190 0042 C7ED047A 		fsts	s15, [r7, #16]
 167:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   CompareVal = (uint32_t)( fPRS * fDuty);
 191              		.loc 1 167 0
 192 0046 97ED047A 		flds	s14, [r7, #16]
 193 004a D7ED057A 		flds	s15, [r7, #20]
 194 004e 67EE277A 		fmuls	s15, s14, s15
 195 0052 FCEEE77A 		ftouizs	s15, s15
 196 0056 C7ED077A 		fsts	s15, [r7, #28]	@ int
 168:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yRegsPtr->CRS = CompareVal  & 0xFFFFU;
 197              		.loc 1 168 0
 198 005a BB69     		ldr	r3, [r7, #24]
 199 005c DA69     		ldr	r2, [r3, #28]
 200 005e FB69     		ldr	r3, [r7, #28]
 201 0060 4FEA0343 		lsl	r3, r3, #16
 202 0064 4FEA1343 		lsr	r3, r3, #16
 203 0068 D363     		str	r3, [r2, #60]
 169:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 170:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   /*Shadow transfer */
 171:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 =  ((uint32_t)CCU4_GCSS_S0SE_Pos +\
 172:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                 ((uint32_t)PWMSP003_NO_OF_SLICES *(uint32_t)HandlePtr->Slice));
 204              		.loc 1 172 0
 205 006a BB69     		ldr	r3, [r7, #24]
 206 006c 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 171:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 =  ((uint32_t)CCU4_GCSS_S0SE_Pos +\
 207              		.loc 1 171 0
 208 0070 4FEA8303 		lsl	r3, r3, #2
 209 0074 FB60     		str	r3, [r7, #12]
 173:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yKernRegsPtr->GCSS |=\
 210              		.loc 1 173 0
 211 0076 BB69     		ldr	r3, [r7, #24]
 212 0078 9B69     		ldr	r3, [r3, #24]
 213 007a BA69     		ldr	r2, [r7, #24]
 214 007c 9269     		ldr	r2, [r2, #24]
 215 007e 1169     		ldr	r1, [r2, #16]
 174:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                  (uint32_t)((uint32_t)0x01 << (uint32_t)Temp1);
 216              		.loc 1 174 0
 217 0080 FA68     		ldr	r2, [r7, #12]
 218 0082 4FF00100 		mov	r0, #1
 219 0086 00FA02F2 		lsl	r2, r0, r2
 173:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yKernRegsPtr->GCSS |=\
 220              		.loc 1 173 0
 221 008a 0A43     		orrs	r2, r2, r1
 222 008c 1A61     		str	r2, [r3, #16]
 175:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 176:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 223              		.loc 1 176 0
 224 008e 07F12407 		add	r7, r7, #36
 225 0092 BD46     		mov	sp, r7
 226 0094 80BC     		pop	{r7}
 227 0096 7047     		bx	lr
 228              	.L5:
 229              		.align	2
 230              	.L4:
 231 0098 0000C842 		.word	1120403456
 232              		.cfi_endproc
 233              	.LFE114:
 235              		.section	.text.PWMSP003_lSetDutyCenterAlign,"ax",%progbits
 236              		.align	2
 237              		.global	PWMSP003_lSetDutyCenterAlign
 238              		.thumb
 239              		.thumb_func
 241              	PWMSP003_lSetDutyCenterAlign:
 242              	.LFB115:
 177:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 178:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 179:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function is used to change the duty cycle of the PWM waveform
 180:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * in center-aligned mode
 181:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 182:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_lSetDutyCenterAlign(void* Handle, float Duty)
 183:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 243              		.loc 1 183 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 32
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248 0000 80B4     		push	{r7}
 249              	.LCFI9:
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 7, -4
 252 0002 89B0     		sub	sp, sp, #36
 253              	.LCFI10:
 254              		.cfi_def_cfa_offset 40
 255 0004 00AF     		add	r7, sp, #0
 256              	.LCFI11:
 257              		.cfi_def_cfa_register 7
 258 0006 7860     		str	r0, [r7, #4]
 259 0008 3960     		str	r1, [r7, #0]	@ float
 184:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t CompareVal = (uint32_t)0x00;
 260              		.loc 1 184 0
 261 000a 4FF00003 		mov	r3, #0
 262 000e FB61     		str	r3, [r7, #28]
 185:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 186:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   float fDuty, fPRS ;
 187:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   PWMSP003_HandleType* HandlePtr = (PWMSP003_HandleType*)Handle;
 263              		.loc 1 187 0
 264 0010 7B68     		ldr	r3, [r7, #4]
 265 0012 BB61     		str	r3, [r7, #24]
 188:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   fDuty = Duty;
 266              		.loc 1 188 0
 267 0014 3B68     		ldr	r3, [r7, #0]	@ float
 268 0016 7B61     		str	r3, [r7, #20]	@ float
 189:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 190:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   fDuty = (float)((float)100.00 - (float)fDuty)/(float)100.00;
 269              		.loc 1 190 0
 270 0018 9FED1E7A 		flds	s14, .L7
 271 001c D7ED057A 		flds	s15, [r7, #20]
 272 0020 37EE677A 		fsubs	s14, s14, s15
 273 0024 DFED1B7A 		flds	s15, .L7
 274 0028 C7EE277A 		fdivs	s15, s14, s15
 275 002c C7ED057A 		fsts	s15, [r7, #20]
 191:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   fPRS = (float)HandlePtr->CC4yRegsPtr->PRS;
 276              		.loc 1 191 0
 277 0030 BB69     		ldr	r3, [r7, #24]
 278 0032 DB69     		ldr	r3, [r3, #28]
 279 0034 D3ED0D7A 		flds	s15, [r3, #52]	@ int
 280 0038 F8EE677A 		fuitos	s15, s15
 281 003c C7ED047A 		fsts	s15, [r7, #16]
 192:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   CompareVal = (uint32_t)( fPRS * fDuty);
 282              		.loc 1 192 0
 283 0040 97ED047A 		flds	s14, [r7, #16]
 284 0044 D7ED057A 		flds	s15, [r7, #20]
 285 0048 67EE277A 		fmuls	s15, s14, s15
 286 004c FCEEE77A 		ftouizs	s15, s15
 287 0050 C7ED077A 		fsts	s15, [r7, #28]	@ int
 193:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yRegsPtr->CRS = (uint32_t)CompareVal  & 0xFFFFU;
 288              		.loc 1 193 0
 289 0054 BB69     		ldr	r3, [r7, #24]
 290 0056 DA69     		ldr	r2, [r3, #28]
 291 0058 FB69     		ldr	r3, [r7, #28]
 292 005a 4FEA0343 		lsl	r3, r3, #16
 293 005e 4FEA1343 		lsr	r3, r3, #16
 294 0062 D363     		str	r3, [r2, #60]
 194:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 195:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   /*shadow transfer */
 196:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 = ((uint32_t)CCU4_GCSS_S0SE_Pos +\
 197:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                          (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice));
 295              		.loc 1 197 0
 296 0064 BB69     		ldr	r3, [r7, #24]
 297 0066 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 196:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   Temp1 = ((uint32_t)CCU4_GCSS_S0SE_Pos +\
 298              		.loc 1 196 0
 299 006a 4FEA8303 		lsl	r3, r3, #2
 300 006e FB60     		str	r3, [r7, #12]
 198:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yKernRegsPtr->GCSS |=\
 301              		.loc 1 198 0
 302 0070 BB69     		ldr	r3, [r7, #24]
 303 0072 9B69     		ldr	r3, [r3, #24]
 304 0074 BA69     		ldr	r2, [r7, #24]
 305 0076 9269     		ldr	r2, [r2, #24]
 306 0078 1169     		ldr	r1, [r2, #16]
 199:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                  (uint32_t)((uint32_t)0x01 << (uint32_t)Temp1);
 307              		.loc 1 199 0
 308 007a FA68     		ldr	r2, [r7, #12]
 309 007c 4FF00100 		mov	r0, #1
 310 0080 00FA02F2 		lsl	r2, r0, r2
 198:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   HandlePtr->CC4yKernRegsPtr->GCSS |=\
 311              		.loc 1 198 0
 312 0084 0A43     		orrs	r2, r2, r1
 313 0086 1A61     		str	r2, [r3, #16]
 200:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 314              		.loc 1 200 0
 315 0088 07F12407 		add	r7, r7, #36
 316 008c BD46     		mov	sp, r7
 317 008e 80BC     		pop	{r7}
 318 0090 7047     		bx	lr
 319              	.L8:
 320 0092 00BF     		.align	2
 321              	.L7:
 322 0094 0000C842 		.word	1120403456
 323              		.cfi_endproc
 324              	.LFE115:
 326              		.section	.text.PWMSP003_Init,"ax",%progbits
 327              		.align	2
 328              		.global	PWMSP003_Init
 329              		.thumb
 330              		.thumb_func
 332              	PWMSP003_Init:
 333              	.LFB116:
 201:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 202:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 203:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function initializes the app
 204:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 205:../Dave/Generated/src/PWMSP003/PWMSP003.c **** void PWMSP003_Init(void)
 206:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 334              		.loc 1 206 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 8
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338 0000 80B5     		push	{r7, lr}
 339              	.LCFI12:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 7, -8
 342              		.cfi_offset 14, -4
 343 0002 82B0     		sub	sp, sp, #8
 344              	.LCFI13:
 345              		.cfi_def_cfa_offset 16
 346 0004 00AF     		add	r7, sp, #0
 347              	.LCFI14:
 348              		.cfi_def_cfa_register 7
 207:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Error = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 349              		.loc 1 207 0
 350 0006 4FF00103 		mov	r3, #1
 351 000a 3B60     		str	r3, [r7, #0]
 208:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint8_t HandleNum;
 209:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 210:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   for(HandleNum = 0; HandleNum < PWMSP003_NUM_INSTANCES; HandleNum++)
 352              		.loc 1 210 0
 353 000c 4FF00003 		mov	r3, #0
 354 0010 FB71     		strb	r3, [r7, #7]
 355 0012 26E0     		b	.L10
 356              	.L12:
 211:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 212:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Error = PWMSP003_lInit((PWMSP003_HandleType*)PWMSP003_HandleArr[HandleNum]);
 357              		.loc 1 212 0
 358 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 359 0016 40F20003 		movw	r3, #:lower16:PWMSP003_HandleArr
 360 001a C0F20003 		movt	r3, #:upper16:PWMSP003_HandleArr
 361 001e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 362 0022 1846     		mov	r0, r3
 363 0024 FFF7FEFF 		bl	PWMSP003_lInit
 364 0028 3860     		str	r0, [r7, #0]
 213:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 214:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Start the app if "Start after initialization" is checked */
 215:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(Error == (uint32_t)DAVEApp_SUCCESS)
 365              		.loc 1 215 0
 366 002a 3B68     		ldr	r3, [r7, #0]
 367 002c 002B     		cmp	r3, #0
 368 002e 14D1     		bne	.L11
 216:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 217:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if (PWMSP003_HandleArr[HandleNum]->StartControl == (uint8_t)SET)
 369              		.loc 1 217 0
 370 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 371 0032 40F20003 		movw	r3, #:lower16:PWMSP003_HandleArr
 372 0036 C0F20003 		movt	r3, #:upper16:PWMSP003_HandleArr
 373 003a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 374 003e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 375 0040 012B     		cmp	r3, #1
 376 0042 0AD1     		bne	.L11
 218:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 219:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         Error = PWMSP003_Start((PWMSP003_HandleType*)
 377              		.loc 1 219 0
 378 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 379 0046 40F20003 		movw	r3, #:lower16:PWMSP003_HandleArr
 380 004a C0F20003 		movt	r3, #:upper16:PWMSP003_HandleArr
 381 004e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 382 0052 1846     		mov	r0, r3
 383 0054 FFF7FEFF 		bl	PWMSP003_Start
 384 0058 3860     		str	r0, [r7, #0]
 385              	.L11:
 210:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   for(HandleNum = 0; HandleNum < PWMSP003_NUM_INSTANCES; HandleNum++)
 386              		.loc 1 210 0
 387 005a FB79     		ldrb	r3, [r7, #7]
 388 005c 03F10103 		add	r3, r3, #1
 389 0060 FB71     		strb	r3, [r7, #7]
 390              	.L10:
 210:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   for(HandleNum = 0; HandleNum < PWMSP003_NUM_INSTANCES; HandleNum++)
 391              		.loc 1 210 0 is_stmt 0 discriminator 1
 392 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 393 0064 012B     		cmp	r3, #1
 394 0066 D5D9     		bls	.L12
 220:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                             PWMSP003_HandleArr[HandleNum]);
 221:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 222:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 223:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 224:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 395              		.loc 1 224 0 is_stmt 1
 396 0068 07F10807 		add	r7, r7, #8
 397 006c BD46     		mov	sp, r7
 398 006e 80BD     		pop	{r7, pc}
 399              		.cfi_endproc
 400              	.LFE116:
 402              		.section	.text.PWMSP003_lInit,"ax",%progbits
 403              		.align	2
 404              		.global	PWMSP003_lInit
 405              		.thumb
 406              		.thumb_func
 408              	PWMSP003_lInit:
 409              	.LFB117:
 225:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 226:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 227:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function initializes an instance of the app
 228:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 229:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_lInit(const PWMSP003_HandleType* HandlePtr)
 230:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 410              		.loc 1 230 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 24
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415 0000 90B4     		push	{r4, r7}
 416              	.LCFI15:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 7, -4
 420 0002 86B0     		sub	sp, sp, #24
 421              	.LCFI16:
 422              		.cfi_def_cfa_offset 32
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI17:
 425              		.cfi_def_cfa_register 7
 426 0006 7860     		str	r0, [r7, #4]
 231:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 427              		.loc 1 231 0
 428 0008 4FF00103 		mov	r3, #1
 429 000c 7B61     		str	r3, [r7, #20]
 232:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp;
 233:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   PWMSP003_EdgeTriggerType EdgeSelection = PWMSP003_NO_TRIGGER;
 430              		.loc 1 233 0
 431 000e 4FF00003 		mov	r3, #0
 432 0012 FB73     		strb	r3, [r7, #15]
 234:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   PWMSP003_ActiveLevelType LevelSelection = PWMSP003_ACTIVE_ON_HIGH;
 433              		.loc 1 234 0
 434 0014 4FF00003 		mov	r3, #0
 435 0018 BB73     		strb	r3, [r7, #14]
 235:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 236:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   do
 237:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 238:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 436              		.loc 1 238 0
 437 001a 7B68     		ldr	r3, [r7, #4]
 438 001c DB6D     		ldr	r3, [r3, #92]
 439 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 440 0020 002B     		cmp	r3, #0
 441 0022 40F00584 		bne	.L55
 442              	.L14:
 239:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 240:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       break;
 241:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 242:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->TCCLR = PWMSP003_SLICE_CLEAR;
 443              		.loc 1 242 0
 444 0026 7B68     		ldr	r3, [r7, #4]
 445 0028 DB69     		ldr	r3, [r3, #28]
 446 002a 4FF00702 		mov	r2, #7
 447 002e 1A61     		str	r2, [r3, #16]
 243:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 244:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(HandlePtr->kEvent0Function != PWMSP003_NO_FUNCTION)
 448              		.loc 1 244 0
 449 0030 7B68     		ldr	r3, [r7, #4]
 450 0032 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 451 0036 5BB2     		sxtb	r3, r3
 452 0038 B3F1FF3F 		cmp	r3, #-1
 453 003c 00F0A280 		beq	.L16
 245:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 246:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_START)
 454              		.loc 1 246 0
 455 0040 7B68     		ldr	r3, [r7, #4]
 456 0042 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 457 0046 002B     		cmp	r3, #0
 458 0048 04D1     		bne	.L17
 247:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 248:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kStartEdge;
 459              		.loc 1 248 0
 460 004a 7B68     		ldr	r3, [r7, #4]
 461 004c 93F84330 		ldrb	r3, [r3, #67]
 462 0050 FB73     		strb	r3, [r7, #15]
 463 0052 23E0     		b	.L18
 464              	.L17:
 249:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 250:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_STOP)
 465              		.loc 1 250 0
 466 0054 7B68     		ldr	r3, [r7, #4]
 467 0056 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 468 005a 5BB2     		sxtb	r3, r3
 469 005c 022B     		cmp	r3, #2
 470 005e 04D1     		bne	.L19
 251:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 252:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kStopEdge;
 471              		.loc 1 252 0
 472 0060 7B68     		ldr	r3, [r7, #4]
 473 0062 93F84430 		ldrb	r3, [r3, #68]
 474 0066 FB73     		strb	r3, [r7, #15]
 475 0068 18E0     		b	.L18
 476              	.L19:
 253:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 254:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_LOAD)
 477              		.loc 1 254 0
 478 006a 7B68     		ldr	r3, [r7, #4]
 479 006c 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 480 0070 5BB2     		sxtb	r3, r3
 481 0072 0C2B     		cmp	r3, #12
 482 0074 04D1     		bne	.L20
 255:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 256:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kLoadEventEdge;
 483              		.loc 1 256 0
 484 0076 7B68     		ldr	r3, [r7, #4]
 485 0078 93F84030 		ldrb	r3, [r3, #64]
 486 007c FB73     		strb	r3, [r7, #15]
 487 007e 0DE0     		b	.L18
 488              	.L20:
 257:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 258:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_COUNT)
 489              		.loc 1 258 0
 490 0080 7B68     		ldr	r3, [r7, #4]
 491 0082 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 492 0086 5BB2     		sxtb	r3, r3
 493 0088 0E2B     		cmp	r3, #14
 494 008a 04D1     		bne	.L21
 259:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 260:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kCountEventEdge;
 495              		.loc 1 260 0
 496 008c 7B68     		ldr	r3, [r7, #4]
 497 008e 93F83F30 		ldrb	r3, [r3, #63]
 498 0092 FB73     		strb	r3, [r7, #15]
 499 0094 02E0     		b	.L18
 500              	.L21:
 261:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 262:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 263:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 264:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = PWMSP003_RISING_EDGE;
 501              		.loc 1 264 0
 502 0096 4FF00103 		mov	r3, #1
 503 009a FB73     		strb	r3, [r7, #15]
 504              	.L18:
 265:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 266:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 267:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_COUNT_DIRECTION)
 505              		.loc 1 267 0
 506 009c 7B68     		ldr	r3, [r7, #4]
 507 009e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 508 00a2 5BB2     		sxtb	r3, r3
 509 00a4 0A2B     		cmp	r3, #10
 510 00a6 04D1     		bne	.L22
 268:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 269:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kCntDirActiveLevel;
 511              		.loc 1 269 0
 512 00a8 7B68     		ldr	r3, [r7, #4]
 513 00aa 93F83630 		ldrb	r3, [r3, #54]
 514 00ae BB73     		strb	r3, [r7, #14]
 515 00b0 14E0     		b	.L23
 516              	.L22:
 270:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 271:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_MODULATION)
 517              		.loc 1 271 0
 518 00b2 7B68     		ldr	r3, [r7, #4]
 519 00b4 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 520 00b8 5BB2     		sxtb	r3, r3
 521 00ba 122B     		cmp	r3, #18
 522 00bc 04D1     		bne	.L24
 272:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 273:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kModulationActiveLevel;
 523              		.loc 1 273 0
 524 00be 7B68     		ldr	r3, [r7, #4]
 525 00c0 93F83330 		ldrb	r3, [r3, #51]
 526 00c4 BB73     		strb	r3, [r7, #14]
 527 00c6 09E0     		b	.L23
 528              	.L24:
 274:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 275:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent0Function == PWMSP003_EXTERNAL_GATING)
 529              		.loc 1 275 0
 530 00c8 7B68     		ldr	r3, [r7, #4]
 531 00ca 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 532 00ce 5BB2     		sxtb	r3, r3
 533 00d0 082B     		cmp	r3, #8
 534 00d2 03D1     		bne	.L23
 276:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 277:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kGateEventActiveLevel;
 535              		.loc 1 277 0
 536 00d4 7B68     		ldr	r3, [r7, #4]
 537 00d6 93F83E30 		ldrb	r3, [r3, #62]
 538 00da BB73     		strb	r3, [r7, #14]
 539              	.L23:
 278:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 279:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 280:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 281:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /** */
 282:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 283:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 284:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_EV0EM_Msk,\
 540              		.loc 1 284 0
 541 00dc 7B68     		ldr	r3, [r7, #4]
 542 00de DB69     		ldr	r3, [r3, #28]
 543 00e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 544 00e2 4FEA0242 		lsl	r2, r2, #16
 545 00e6 02F44031 		and	r1, r2, #196608
 546 00ea 7A68     		ldr	r2, [r7, #4]
 547 00ec D269     		ldr	r2, [r2, #28]
 548 00ee 1268     		ldr	r2, [r2, #0]
 549 00f0 22F44032 		bic	r2, r2, #196608
 550 00f4 0A43     		orrs	r2, r2, r1
 551 00f6 1A60     		str	r2, [r3, #0]
 285:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_EV0EM_Pos, (uint32_t)EdgeSelection);
 286:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 287:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_EV0LM_Msk,\
 552              		.loc 1 287 0
 553 00f8 7B68     		ldr	r3, [r7, #4]
 554 00fa DB69     		ldr	r3, [r3, #28]
 555 00fc BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 556 00fe 4FEA8252 		lsl	r2, r2, #22
 557 0102 02F48001 		and	r1, r2, #4194304
 558 0106 7A68     		ldr	r2, [r7, #4]
 559 0108 D269     		ldr	r2, [r2, #28]
 560 010a 1268     		ldr	r2, [r2, #0]
 561 010c 22F48002 		bic	r2, r2, #4194304
 562 0110 0A43     		orrs	r2, r2, r1
 563 0112 1A60     		str	r2, [r3, #0]
 288:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_EV0LM_Pos, (uint32_t)LevelSelection);
 289:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 290:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_LPF0M_Msk,\
 564              		.loc 1 290 0
 565 0114 7B68     		ldr	r3, [r7, #4]
 566 0116 DB69     		ldr	r3, [r3, #28]
 567 0118 7A68     		ldr	r2, [r7, #4]
 568 011a 92F83020 		ldrb	r2, [r2, #48]	@ zero_extendqisi2
 569 011e 4FEA4262 		lsl	r2, r2, #25
 570 0122 02F0C061 		and	r1, r2, #100663296
 571 0126 7A68     		ldr	r2, [r7, #4]
 572 0128 D269     		ldr	r2, [r2, #28]
 573 012a 1268     		ldr	r2, [r2, #0]
 574 012c 22F0C062 		bic	r2, r2, #100663296
 575 0130 0A43     		orrs	r2, r2, r1
 576 0132 1A60     		str	r2, [r3, #0]
 291:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_LPF0M_Pos, HandlePtr->kEvent0_lpfconfig);
 292:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 293:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent0Function != PWMSP003_EXTERNAL_START)
 577              		.loc 1 293 0
 578 0134 7B68     		ldr	r3, [r7, #4]
 579 0136 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 580 013a 002B     		cmp	r3, #0
 581 013c 22D0     		beq	.L16
 294:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 295:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 582              		.loc 1 295 0
 583 013e 7B68     		ldr	r3, [r7, #4]
 584 0140 DB69     		ldr	r3, [r3, #28]
 585 0142 7A68     		ldr	r2, [r7, #4]
 586 0144 92F82420 		ldrb	r2, [r2, #36]	@ zero_extendqisi2
 587 0148 52B2     		sxtb	r2, r2
 588 014a 4FF00101 		mov	r1, #1
 589 014e 01FA02F1 		lsl	r1, r1, r2
 590 0152 7A68     		ldr	r2, [r7, #4]
 591 0154 92F82420 		ldrb	r2, [r2, #36]	@ zero_extendqisi2
 592 0158 52B2     		sxtb	r2, r2
 593 015a 4FF00300 		mov	r0, #3
 594 015e 00FA02F2 		lsl	r2, r0, r2
 595 0162 1140     		ands	r1, r1, r2
 596 0164 7A68     		ldr	r2, [r7, #4]
 597 0166 D269     		ldr	r2, [r2, #28]
 598 0168 5068     		ldr	r0, [r2, #4]
 599 016a 7A68     		ldr	r2, [r7, #4]
 600 016c 92F82420 		ldrb	r2, [r2, #36]	@ zero_extendqisi2
 601 0170 52B2     		sxtb	r2, r2
 602 0172 4FF00304 		mov	r4, #3
 603 0176 04FA02F2 		lsl	r2, r4, r2
 604 017a 6FEA0202 		mvn	r2, r2
 605 017e 0240     		ands	r2, r2, r0
 606 0180 0A43     		orrs	r2, r2, r1
 607 0182 5A60     		str	r2, [r3, #4]
 608              	.L16:
 296:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)(CCU4_CC4_CMC_STRTS_Msk << HandlePtr->kEvent0Function),\
 297:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)(CCU4_CC4_CMC_STRTS_Pos + HandlePtr->kEvent0Function),\
 298:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                PWMSP003_EVENT_0);
 299:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 300:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 301:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 302:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Reset to default */
 303:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     EdgeSelection = PWMSP003_NO_TRIGGER;
 609              		.loc 1 303 0
 610 0184 4FF00003 		mov	r3, #0
 611 0188 FB73     		strb	r3, [r7, #15]
 304:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     LevelSelection = PWMSP003_ACTIVE_ON_HIGH;
 612              		.loc 1 304 0
 613 018a 4FF00003 		mov	r3, #0
 614 018e BB73     		strb	r3, [r7, #14]
 305:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 306:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(HandlePtr->kEvent1Function != PWMSP003_NO_FUNCTION)
 615              		.loc 1 306 0
 616 0190 7B68     		ldr	r3, [r7, #4]
 617 0192 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 618 0196 5BB2     		sxtb	r3, r3
 619 0198 B3F1FF3F 		cmp	r3, #-1
 620 019c 00F0E880 		beq	.L25
 307:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 308:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_START)
 621              		.loc 1 308 0
 622 01a0 7B68     		ldr	r3, [r7, #4]
 623 01a2 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 624 01a6 002B     		cmp	r3, #0
 625 01a8 04D1     		bne	.L26
 309:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 310:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kStartEdge;
 626              		.loc 1 310 0
 627 01aa 7B68     		ldr	r3, [r7, #4]
 628 01ac 93F84330 		ldrb	r3, [r3, #67]
 629 01b0 FB73     		strb	r3, [r7, #15]
 630 01b2 23E0     		b	.L27
 631              	.L26:
 311:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 312:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_STOP)
 632              		.loc 1 312 0
 633 01b4 7B68     		ldr	r3, [r7, #4]
 634 01b6 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 635 01ba 5BB2     		sxtb	r3, r3
 636 01bc 022B     		cmp	r3, #2
 637 01be 04D1     		bne	.L28
 313:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 314:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kStopEdge;
 638              		.loc 1 314 0
 639 01c0 7B68     		ldr	r3, [r7, #4]
 640 01c2 93F84430 		ldrb	r3, [r3, #68]
 641 01c6 FB73     		strb	r3, [r7, #15]
 642 01c8 18E0     		b	.L27
 643              	.L28:
 315:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 316:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_LOAD)
 644              		.loc 1 316 0
 645 01ca 7B68     		ldr	r3, [r7, #4]
 646 01cc 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 647 01d0 5BB2     		sxtb	r3, r3
 648 01d2 0C2B     		cmp	r3, #12
 649 01d4 04D1     		bne	.L29
 317:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 318:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kLoadEventEdge;
 650              		.loc 1 318 0
 651 01d6 7B68     		ldr	r3, [r7, #4]
 652 01d8 93F84030 		ldrb	r3, [r3, #64]
 653 01dc FB73     		strb	r3, [r7, #15]
 654 01de 0DE0     		b	.L27
 655              	.L29:
 319:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 320:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_COUNT)
 656              		.loc 1 320 0
 657 01e0 7B68     		ldr	r3, [r7, #4]
 658 01e2 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 659 01e6 5BB2     		sxtb	r3, r3
 660 01e8 0E2B     		cmp	r3, #14
 661 01ea 04D1     		bne	.L30
 321:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 322:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kCountEventEdge;
 662              		.loc 1 322 0
 663 01ec 7B68     		ldr	r3, [r7, #4]
 664 01ee 93F83F30 		ldrb	r3, [r3, #63]
 665 01f2 FB73     		strb	r3, [r7, #15]
 666 01f4 02E0     		b	.L27
 667              	.L30:
 323:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 324:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 325:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 326:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = PWMSP003_RISING_EDGE;
 668              		.loc 1 326 0
 669 01f6 4FF00103 		mov	r3, #1
 670 01fa FB73     		strb	r3, [r7, #15]
 671              	.L27:
 327:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 328:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 329:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_COUNT_DIRECTION)
 672              		.loc 1 329 0
 673 01fc 7B68     		ldr	r3, [r7, #4]
 674 01fe 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 675 0202 5BB2     		sxtb	r3, r3
 676 0204 0A2B     		cmp	r3, #10
 677 0206 04D1     		bne	.L31
 330:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 331:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kCntDirActiveLevel;
 678              		.loc 1 331 0
 679 0208 7B68     		ldr	r3, [r7, #4]
 680 020a 93F83630 		ldrb	r3, [r3, #54]
 681 020e BB73     		strb	r3, [r7, #14]
 682 0210 1FE0     		b	.L32
 683              	.L31:
 332:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 333:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_MODULATION)
 684              		.loc 1 333 0
 685 0212 7B68     		ldr	r3, [r7, #4]
 686 0214 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 687 0218 5BB2     		sxtb	r3, r3
 688 021a 122B     		cmp	r3, #18
 689 021c 04D1     		bne	.L33
 334:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 335:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kModulationActiveLevel;
 690              		.loc 1 335 0
 691 021e 7B68     		ldr	r3, [r7, #4]
 692 0220 93F83330 		ldrb	r3, [r3, #51]
 693 0224 BB73     		strb	r3, [r7, #14]
 694 0226 14E0     		b	.L32
 695              	.L33:
 336:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 337:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_OVERRIDE)
 696              		.loc 1 337 0
 697 0228 7B68     		ldr	r3, [r7, #4]
 698 022a 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 699 022e 5BB2     		sxtb	r3, r3
 700 0230 102B     		cmp	r3, #16
 701 0232 04D1     		bne	.L34
 338:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 339:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kOverrideActiveLevel;
 702              		.loc 1 339 0
 703 0234 7B68     		ldr	r3, [r7, #4]
 704 0236 93F84230 		ldrb	r3, [r3, #66]
 705 023a BB73     		strb	r3, [r7, #14]
 706 023c 09E0     		b	.L32
 707              	.L34:
 340:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 341:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_GATING)
 708              		.loc 1 341 0
 709 023e 7B68     		ldr	r3, [r7, #4]
 710 0240 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 711 0244 5BB2     		sxtb	r3, r3
 712 0246 082B     		cmp	r3, #8
 713 0248 03D1     		bne	.L32
 342:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 343:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kGateEventActiveLevel;
 714              		.loc 1 343 0
 715 024a 7B68     		ldr	r3, [r7, #4]
 716 024c 93F83E30 		ldrb	r3, [r3, #62]
 717 0250 BB73     		strb	r3, [r7, #14]
 718              	.L32:
 344:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 345:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 346:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 347:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /** */
 348:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 349:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 350:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_EV1EM_Msk,\
 719              		.loc 1 350 0
 720 0252 7B68     		ldr	r3, [r7, #4]
 721 0254 DB69     		ldr	r3, [r3, #28]
 722 0256 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 723 0258 4FEA8242 		lsl	r2, r2, #18
 724 025c 02F44021 		and	r1, r2, #786432
 725 0260 7A68     		ldr	r2, [r7, #4]
 726 0262 D269     		ldr	r2, [r2, #28]
 727 0264 1268     		ldr	r2, [r2, #0]
 728 0266 22F44022 		bic	r2, r2, #786432
 729 026a 0A43     		orrs	r2, r2, r1
 730 026c 1A60     		str	r2, [r3, #0]
 351:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_EV1EM_Pos, (uint32_t)EdgeSelection);
 352:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 353:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_EV1LM_Msk,\
 731              		.loc 1 353 0
 732 026e 7B68     		ldr	r3, [r7, #4]
 733 0270 DB69     		ldr	r3, [r3, #28]
 734 0272 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 735 0274 4FEAC252 		lsl	r2, r2, #23
 736 0278 02F40001 		and	r1, r2, #8388608
 737 027c 7A68     		ldr	r2, [r7, #4]
 738 027e D269     		ldr	r2, [r2, #28]
 739 0280 1268     		ldr	r2, [r2, #0]
 740 0282 22F40002 		bic	r2, r2, #8388608
 741 0286 0A43     		orrs	r2, r2, r1
 742 0288 1A60     		str	r2, [r3, #0]
 354:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_EV1LM_Pos, (uint32_t)LevelSelection);
 355:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 356:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_LPF1M_Msk,\
 743              		.loc 1 356 0
 744 028a 7B68     		ldr	r3, [r7, #4]
 745 028c DB69     		ldr	r3, [r3, #28]
 746 028e 7A68     		ldr	r2, [r7, #4]
 747 0290 92F83120 		ldrb	r2, [r2, #49]	@ zero_extendqisi2
 748 0294 4FEAC262 		lsl	r2, r2, #27
 749 0298 02F0C051 		and	r1, r2, #402653184
 750 029c 7A68     		ldr	r2, [r7, #4]
 751 029e D269     		ldr	r2, [r2, #28]
 752 02a0 1268     		ldr	r2, [r2, #0]
 753 02a2 22F0C052 		bic	r2, r2, #402653184
 754 02a6 0A43     		orrs	r2, r2, r1
 755 02a8 1A60     		str	r2, [r3, #0]
 357:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_LPF1M_Pos, HandlePtr->kEvent1_lpfconfig);
 358:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 359:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent1Function != PWMSP003_EXTERNAL_START)
 756              		.loc 1 359 0
 757 02aa 7B68     		ldr	r3, [r7, #4]
 758 02ac 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 759 02b0 002B     		cmp	r3, #0
 760 02b2 5DD0     		beq	.L25
 360:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 361:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /* Override Config in CMC Register is only one bit each */
 362:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /* START/STOP etc. are 2 bits each */
 363:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_OVERRIDE)
 761              		.loc 1 363 0
 762 02b4 7B68     		ldr	r3, [r7, #4]
 763 02b6 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 764 02ba 5BB2     		sxtb	r3, r3
 765 02bc 102B     		cmp	r3, #16
 766 02be 03D1     		bne	.L35
 364:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 365:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           /* Mask for Trap, 1 bit */
 366:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp = PWMSP003_OVERRIDEEVENT_BITMASK;
 767              		.loc 1 366 0
 768 02c0 4FF00103 		mov	r3, #1
 769 02c4 3B61     		str	r3, [r7, #16]
 770 02c6 02E0     		b	.L36
 771              	.L35:
 367:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 368:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         else
 369:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 370:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           /* Mask for START,STOP etc. functions, 2 bits */
 371:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp = PWMSP003_STARTEVENT_BITMASK;
 772              		.loc 1 371 0
 773 02c8 4FF00303 		mov	r3, #3
 774 02cc 3B61     		str	r3, [r7, #16]
 775              	.L36:
 372:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 373:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 374:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         if(HandlePtr->kEvent1Function == PWMSP003_EXTERNAL_OVERRIDE)
 776              		.loc 1 374 0
 777 02ce 7B68     		ldr	r3, [r7, #4]
 778 02d0 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 779 02d4 5BB2     		sxtb	r3, r3
 780 02d6 102B     		cmp	r3, #16
 781 02d8 25D1     		bne	.L37
 375:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 376:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 782              		.loc 1 376 0
 783 02da 7B68     		ldr	r3, [r7, #4]
 784 02dc DB69     		ldr	r3, [r3, #28]
 785 02de 7A68     		ldr	r2, [r7, #4]
 786 02e0 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 787 02e4 52B2     		sxtb	r2, r2
 788 02e6 4FF00101 		mov	r1, #1
 789 02ea 01FA02F1 		lsl	r1, r1, r2
 790 02ee 3A69     		ldr	r2, [r7, #16]
 791 02f0 02F00300 		and	r0, r2, #3
 792 02f4 7A68     		ldr	r2, [r7, #4]
 793 02f6 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 794 02fa 52B2     		sxtb	r2, r2
 795 02fc 00FA02F2 		lsl	r2, r0, r2
 796 0300 1140     		ands	r1, r1, r2
 797 0302 7A68     		ldr	r2, [r7, #4]
 798 0304 D269     		ldr	r2, [r2, #28]
 799 0306 5068     		ldr	r0, [r2, #4]
 800 0308 3A69     		ldr	r2, [r7, #16]
 801 030a 02F00304 		and	r4, r2, #3
 802 030e 7A68     		ldr	r2, [r7, #4]
 803 0310 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 804 0314 52B2     		sxtb	r2, r2
 805 0316 04FA02F2 		lsl	r2, r4, r2
 806 031a 6FEA0202 		mvn	r2, r2
 807 031e 0240     		ands	r2, r2, r0
 808 0320 0A43     		orrs	r2, r2, r1
 809 0322 5A60     		str	r2, [r3, #4]
 810 0324 24E0     		b	.L25
 811              	.L37:
 377:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)((CCU4_CC4_CMC_STRTS_Msk & Temp) <<\
 378:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               HandlePtr->kEvent1Function),\
 379:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)(CCU4_CC4_CMC_STRTS_Pos + HandlePtr->kEvent1Function),\
 380:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               0x01U);
 381:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 382:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         else
 383:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 384:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 812              		.loc 1 384 0
 813 0326 7B68     		ldr	r3, [r7, #4]
 814 0328 DB69     		ldr	r3, [r3, #28]
 815 032a 7A68     		ldr	r2, [r7, #4]
 816 032c 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 817 0330 52B2     		sxtb	r2, r2
 818 0332 4FF00201 		mov	r1, #2
 819 0336 01FA02F1 		lsl	r1, r1, r2
 820 033a 3A69     		ldr	r2, [r7, #16]
 821 033c 02F00300 		and	r0, r2, #3
 822 0340 7A68     		ldr	r2, [r7, #4]
 823 0342 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 824 0346 52B2     		sxtb	r2, r2
 825 0348 00FA02F2 		lsl	r2, r0, r2
 826 034c 1140     		ands	r1, r1, r2
 827 034e 7A68     		ldr	r2, [r7, #4]
 828 0350 D269     		ldr	r2, [r2, #28]
 829 0352 5068     		ldr	r0, [r2, #4]
 830 0354 3A69     		ldr	r2, [r7, #16]
 831 0356 02F00304 		and	r4, r2, #3
 832 035a 7A68     		ldr	r2, [r7, #4]
 833 035c 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 834 0360 52B2     		sxtb	r2, r2
 835 0362 04FA02F2 		lsl	r2, r4, r2
 836 0366 6FEA0202 		mvn	r2, r2
 837 036a 0240     		ands	r2, r2, r0
 838 036c 0A43     		orrs	r2, r2, r1
 839 036e 5A60     		str	r2, [r3, #4]
 840              	.L25:
 385:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)((CCU4_CC4_CMC_STRTS_Msk & Temp) <<\
 386:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               HandlePtr->kEvent1Function),\
 387:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)(CCU4_CC4_CMC_STRTS_Pos + HandlePtr->kEvent1Function),\
 388:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               PWMSP003_EVENT_1);
 389:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 390:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 391:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 392:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 393:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Reset to default */
 394:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     EdgeSelection = PWMSP003_NO_TRIGGER;
 841              		.loc 1 394 0
 842 0370 4FF00003 		mov	r3, #0
 843 0374 FB73     		strb	r3, [r7, #15]
 395:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     LevelSelection = PWMSP003_ACTIVE_ON_HIGH;
 844              		.loc 1 395 0
 845 0376 4FF00003 		mov	r3, #0
 846 037a BB73     		strb	r3, [r7, #14]
 396:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 397:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(HandlePtr->kEvent2Function != PWMSP003_NO_FUNCTION)
 847              		.loc 1 397 0
 848 037c 7B68     		ldr	r3, [r7, #4]
 849 037e 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 850 0382 5BB2     		sxtb	r3, r3
 851 0384 B3F1FF3F 		cmp	r3, #-1
 852 0388 00F0FC80 		beq	.L38
 398:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 399:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_START)
 853              		.loc 1 399 0
 854 038c 7B68     		ldr	r3, [r7, #4]
 855 038e 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 856 0392 002B     		cmp	r3, #0
 857 0394 04D1     		bne	.L39
 400:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 401:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kStartEdge;
 858              		.loc 1 401 0
 859 0396 7B68     		ldr	r3, [r7, #4]
 860 0398 93F84330 		ldrb	r3, [r3, #67]
 861 039c FB73     		strb	r3, [r7, #15]
 862 039e 23E0     		b	.L40
 863              	.L39:
 402:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 403:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_STOP)
 864              		.loc 1 403 0
 865 03a0 7B68     		ldr	r3, [r7, #4]
 866 03a2 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 867 03a6 5BB2     		sxtb	r3, r3
 868 03a8 022B     		cmp	r3, #2
 869 03aa 04D1     		bne	.L41
 404:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 405:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kStopEdge;
 870              		.loc 1 405 0
 871 03ac 7B68     		ldr	r3, [r7, #4]
 872 03ae 93F84430 		ldrb	r3, [r3, #68]
 873 03b2 FB73     		strb	r3, [r7, #15]
 874 03b4 18E0     		b	.L40
 875              	.L41:
 406:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 407:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_LOAD)
 876              		.loc 1 407 0
 877 03b6 7B68     		ldr	r3, [r7, #4]
 878 03b8 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 879 03bc 5BB2     		sxtb	r3, r3
 880 03be 0C2B     		cmp	r3, #12
 881 03c0 04D1     		bne	.L42
 408:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 409:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kLoadEventEdge;
 882              		.loc 1 409 0
 883 03c2 7B68     		ldr	r3, [r7, #4]
 884 03c4 93F84030 		ldrb	r3, [r3, #64]
 885 03c8 FB73     		strb	r3, [r7, #15]
 886 03ca 0DE0     		b	.L40
 887              	.L42:
 410:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 411:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_COUNT)
 888              		.loc 1 411 0
 889 03cc 7B68     		ldr	r3, [r7, #4]
 890 03ce 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 891 03d2 5BB2     		sxtb	r3, r3
 892 03d4 0E2B     		cmp	r3, #14
 893 03d6 04D1     		bne	.L43
 412:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 413:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = HandlePtr->kCountEventEdge;
 894              		.loc 1 413 0
 895 03d8 7B68     		ldr	r3, [r7, #4]
 896 03da 93F83F30 		ldrb	r3, [r3, #63]
 897 03de FB73     		strb	r3, [r7, #15]
 898 03e0 02E0     		b	.L40
 899              	.L43:
 414:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 415:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 416:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 417:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         EdgeSelection = PWMSP003_RISING_EDGE;
 900              		.loc 1 417 0
 901 03e2 4FF00103 		mov	r3, #1
 902 03e6 FB73     		strb	r3, [r7, #15]
 903              	.L40:
 418:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 419:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 420:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_COUNT_DIRECTION)
 904              		.loc 1 420 0
 905 03e8 7B68     		ldr	r3, [r7, #4]
 906 03ea 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 907 03ee 5BB2     		sxtb	r3, r3
 908 03f0 0A2B     		cmp	r3, #10
 909 03f2 04D1     		bne	.L44
 421:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 422:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kCntDirActiveLevel;
 910              		.loc 1 422 0
 911 03f4 7B68     		ldr	r3, [r7, #4]
 912 03f6 93F83630 		ldrb	r3, [r3, #54]
 913 03fa BB73     		strb	r3, [r7, #14]
 914 03fc 29E0     		b	.L45
 915              	.L44:
 423:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 424:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_TRAP)
 916              		.loc 1 424 0
 917 03fe 7B68     		ldr	r3, [r7, #4]
 918 0400 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 919 0404 5BB2     		sxtb	r3, r3
 920 0406 112B     		cmp	r3, #17
 921 0408 03D1     		bne	.L46
 425:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 426:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kTrapLevel;
 922              		.loc 1 426 0
 923 040a 7B68     		ldr	r3, [r7, #4]
 924 040c 9B7C     		ldrb	r3, [r3, #18]
 925 040e BB73     		strb	r3, [r7, #14]
 926 0410 1FE0     		b	.L45
 927              	.L46:
 427:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 428:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_MODULATION)
 928              		.loc 1 428 0
 929 0412 7B68     		ldr	r3, [r7, #4]
 930 0414 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 931 0418 5BB2     		sxtb	r3, r3
 932 041a 122B     		cmp	r3, #18
 933 041c 04D1     		bne	.L47
 429:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 430:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kModulationActiveLevel;
 934              		.loc 1 430 0
 935 041e 7B68     		ldr	r3, [r7, #4]
 936 0420 93F83330 		ldrb	r3, [r3, #51]
 937 0424 BB73     		strb	r3, [r7, #14]
 938 0426 14E0     		b	.L45
 939              	.L47:
 431:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 432:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_OVERRIDE)
 940              		.loc 1 432 0
 941 0428 7B68     		ldr	r3, [r7, #4]
 942 042a 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 943 042e 5BB2     		sxtb	r3, r3
 944 0430 102B     		cmp	r3, #16
 945 0432 04D1     		bne	.L48
 433:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 434:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kOverrideActiveLevel;
 946              		.loc 1 434 0
 947 0434 7B68     		ldr	r3, [r7, #4]
 948 0436 93F84230 		ldrb	r3, [r3, #66]
 949 043a BB73     		strb	r3, [r7, #14]
 950 043c 09E0     		b	.L45
 951              	.L48:
 435:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 436:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_GATING)
 952              		.loc 1 436 0
 953 043e 7B68     		ldr	r3, [r7, #4]
 954 0440 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 955 0444 5BB2     		sxtb	r3, r3
 956 0446 082B     		cmp	r3, #8
 957 0448 03D1     		bne	.L45
 437:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 438:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         LevelSelection = HandlePtr->kGateEventActiveLevel;
 958              		.loc 1 438 0
 959 044a 7B68     		ldr	r3, [r7, #4]
 960 044c 93F83E30 		ldrb	r3, [r3, #62]
 961 0450 BB73     		strb	r3, [r7, #14]
 962              	.L45:
 439:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 440:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 441:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 442:../Dave/Generated/src/PWMSP003/PWMSP003.c ****        /** */
 443:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 444:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 445:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_EV2EM_Msk,\
 963              		.loc 1 445 0
 964 0452 7B68     		ldr	r3, [r7, #4]
 965 0454 DB69     		ldr	r3, [r3, #28]
 966 0456 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 967 0458 4FEA0252 		lsl	r2, r2, #20
 968 045c 02F44011 		and	r1, r2, #3145728
 969 0460 7A68     		ldr	r2, [r7, #4]
 970 0462 D269     		ldr	r2, [r2, #28]
 971 0464 1268     		ldr	r2, [r2, #0]
 972 0466 22F44012 		bic	r2, r2, #3145728
 973 046a 0A43     		orrs	r2, r2, r1
 974 046c 1A60     		str	r2, [r3, #0]
 446:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_EV2EM_Pos, (uint32_t)EdgeSelection);
 447:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 448:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_EV2LM_Msk,\
 975              		.loc 1 448 0
 976 046e 7B68     		ldr	r3, [r7, #4]
 977 0470 DB69     		ldr	r3, [r3, #28]
 978 0472 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 979 0474 4FEA0262 		lsl	r2, r2, #24
 980 0478 02F08071 		and	r1, r2, #16777216
 981 047c 7A68     		ldr	r2, [r7, #4]
 982 047e D269     		ldr	r2, [r2, #28]
 983 0480 1268     		ldr	r2, [r2, #0]
 984 0482 22F08072 		bic	r2, r2, #16777216
 985 0486 0A43     		orrs	r2, r2, r1
 986 0488 1A60     		str	r2, [r3, #0]
 449:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_EV2LM_Pos, (uint32_t)LevelSelection);
 450:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 451:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->INS, (uint32_t)CCU4_CC4_INS_LPF2M_Msk,\
 987              		.loc 1 451 0
 988 048a 7B68     		ldr	r3, [r7, #4]
 989 048c DB69     		ldr	r3, [r3, #28]
 990 048e 7A68     		ldr	r2, [r7, #4]
 991 0490 92F83220 		ldrb	r2, [r2, #50]	@ zero_extendqisi2
 992 0494 4FEA4272 		lsl	r2, r2, #29
 993 0498 02F0C041 		and	r1, r2, #1610612736
 994 049c 7A68     		ldr	r2, [r7, #4]
 995 049e D269     		ldr	r2, [r2, #28]
 996 04a0 1268     		ldr	r2, [r2, #0]
 997 04a2 22F0C042 		bic	r2, r2, #1610612736
 998 04a6 0A43     		orrs	r2, r2, r1
 999 04a8 1A60     		str	r2, [r3, #0]
 452:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_INS_LPF2M_Pos, HandlePtr->kEvent2_lpfconfig);
 453:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 454:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(HandlePtr->kEvent2Function != PWMSP003_EXTERNAL_START)
 1000              		.loc 1 454 0
 1001 04aa 7B68     		ldr	r3, [r7, #4]
 1002 04ac 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 1003 04b0 002B     		cmp	r3, #0
 1004 04b2 67D0     		beq	.L38
 455:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 456:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /* Trap and Override Config in CMC Register is only one bit each */
 457:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /* START/STOP etc. are 2 bits each */
 458:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_OVERRIDE)
 1005              		.loc 1 458 0
 1006 04b4 7B68     		ldr	r3, [r7, #4]
 1007 04b6 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 1008 04ba 5BB2     		sxtb	r3, r3
 1009 04bc 102B     		cmp	r3, #16
 1010 04be 03D1     		bne	.L49
 459:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 460:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           /* Mask for Trap, 1 bit */
 461:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp = PWMSP003_OVERRIDEEVENT_BITMASK;
 1011              		.loc 1 461 0
 1012 04c0 4FF00103 		mov	r3, #1
 1013 04c4 3B61     		str	r3, [r7, #16]
 1014 04c6 0CE0     		b	.L50
 1015              	.L49:
 462:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 463:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         else if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_TRAP)
 1016              		.loc 1 463 0
 1017 04c8 7B68     		ldr	r3, [r7, #4]
 1018 04ca 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 1019 04ce 5BB2     		sxtb	r3, r3
 1020 04d0 112B     		cmp	r3, #17
 1021 04d2 03D1     		bne	.L51
 464:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 465:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           /* Mask for Trap, 1 bit */
 466:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp = PWMSP003_TRAPEVENT_BITMASK;
 1022              		.loc 1 466 0
 1023 04d4 4FF00103 		mov	r3, #1
 1024 04d8 3B61     		str	r3, [r7, #16]
 1025 04da 02E0     		b	.L50
 1026              	.L51:
 467:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 468:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         else
 469:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 470:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           /* Mask for START,STOP etc. functions, 2 bits */
 471:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp = PWMSP003_STARTEVENT_BITMASK;
 1027              		.loc 1 471 0
 1028 04dc 4FF00303 		mov	r3, #3
 1029 04e0 3B61     		str	r3, [r7, #16]
 1030              	.L50:
 472:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 473:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 474:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         if(HandlePtr->kEvent2Function == PWMSP003_EXTERNAL_OVERRIDE)
 1031              		.loc 1 474 0
 1032 04e2 7B68     		ldr	r3, [r7, #4]
 1033 04e4 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 1034 04e8 5BB2     		sxtb	r3, r3
 1035 04ea 102B     		cmp	r3, #16
 1036 04ec 25D1     		bne	.L52
 475:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 476:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 1037              		.loc 1 476 0
 1038 04ee 7B68     		ldr	r3, [r7, #4]
 1039 04f0 DB69     		ldr	r3, [r3, #28]
 1040 04f2 7A68     		ldr	r2, [r7, #4]
 1041 04f4 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 1042 04f8 52B2     		sxtb	r2, r2
 1043 04fa 4FF00101 		mov	r1, #1
 1044 04fe 01FA02F1 		lsl	r1, r1, r2
 1045 0502 3A69     		ldr	r2, [r7, #16]
 1046 0504 02F00300 		and	r0, r2, #3
 1047 0508 7A68     		ldr	r2, [r7, #4]
 1048 050a 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 1049 050e 52B2     		sxtb	r2, r2
 1050 0510 00FA02F2 		lsl	r2, r0, r2
 1051 0514 1140     		ands	r1, r1, r2
 1052 0516 7A68     		ldr	r2, [r7, #4]
 1053 0518 D269     		ldr	r2, [r2, #28]
 1054 051a 5068     		ldr	r0, [r2, #4]
 1055 051c 3A69     		ldr	r2, [r7, #16]
 1056 051e 02F00304 		and	r4, r2, #3
 1057 0522 7A68     		ldr	r2, [r7, #4]
 1058 0524 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 1059 0528 52B2     		sxtb	r2, r2
 1060 052a 04FA02F2 		lsl	r2, r4, r2
 1061 052e 6FEA0202 		mvn	r2, r2
 1062 0532 0240     		ands	r2, r2, r0
 1063 0534 0A43     		orrs	r2, r2, r1
 1064 0536 5A60     		str	r2, [r3, #4]
 1065 0538 24E0     		b	.L38
 1066              	.L52:
 477:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)((CCU4_CC4_CMC_STRTS_Msk & Temp) <<\
 478:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               HandlePtr->kEvent2Function),\
 479:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)(CCU4_CC4_CMC_STRTS_Pos + HandlePtr->kEvent2Function),\
 480:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               0x01U);
 481:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 482:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         else
 483:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 484:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 1067              		.loc 1 484 0
 1068 053a 7B68     		ldr	r3, [r7, #4]
 1069 053c DB69     		ldr	r3, [r3, #28]
 1070 053e 7A68     		ldr	r2, [r7, #4]
 1071 0540 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 1072 0544 52B2     		sxtb	r2, r2
 1073 0546 4FF00301 		mov	r1, #3
 1074 054a 01FA02F1 		lsl	r1, r1, r2
 1075 054e 3A69     		ldr	r2, [r7, #16]
 1076 0550 02F00300 		and	r0, r2, #3
 1077 0554 7A68     		ldr	r2, [r7, #4]
 1078 0556 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 1079 055a 52B2     		sxtb	r2, r2
 1080 055c 00FA02F2 		lsl	r2, r0, r2
 1081 0560 1140     		ands	r1, r1, r2
 1082 0562 7A68     		ldr	r2, [r7, #4]
 1083 0564 D269     		ldr	r2, [r2, #28]
 1084 0566 5068     		ldr	r0, [r2, #4]
 1085 0568 3A69     		ldr	r2, [r7, #16]
 1086 056a 02F00304 		and	r4, r2, #3
 1087 056e 7A68     		ldr	r2, [r7, #4]
 1088 0570 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 1089 0574 52B2     		sxtb	r2, r2
 1090 0576 04FA02F2 		lsl	r2, r4, r2
 1091 057a 6FEA0202 		mvn	r2, r2
 1092 057e 0240     		ands	r2, r2, r0
 1093 0580 0A43     		orrs	r2, r2, r1
 1094 0582 5A60     		str	r2, [r3, #4]
 1095              	.L38:
 485:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)((CCU4_CC4_CMC_STRTS_Msk & Temp) <<\
 486:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               HandlePtr->kEvent2Function),\
 487:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)(CCU4_CC4_CMC_STRTS_Pos + HandlePtr->kEvent2Function),\
 488:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               PWMSP003_EVENT_2);
 489:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 490:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 491:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 492:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 493:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Slice Timer Control */
 494:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->TC &= ~(CCU4_CC4_TC_TCM_Msk |\
 1096              		.loc 1 494 0
 1097 0584 7B68     		ldr	r3, [r7, #4]
 1098 0586 DA69     		ldr	r2, [r3, #28]
 1099 0588 7B68     		ldr	r3, [r7, #4]
 1100 058a DB69     		ldr	r3, [r3, #28]
 1101 058c 5B69     		ldr	r3, [r3, #20]
 1102 058e 23F4CE43 		bic	r3, r3, #26368
 1103 0592 23F00B03 		bic	r3, r3, #11
 1104 0596 5361     		str	r3, [r2, #20]
 495:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       CCU4_CC4_TC_TSSM_Msk | CCU4_CC4_TC_CMOD_Msk |\
 496:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_STRM_Msk | CCU4_CC4_TC_ENDM_Msk | CCU4_CC4_TC_DITHE_Msk);
 497:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 498:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Timer control configurations */
 499:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->TC |= (((uint32_t)HandlePtr->CountingModeType <<\
 1105              		.loc 1 499 0
 1106 0598 7B68     		ldr	r3, [r7, #4]
 1107 059a DB69     		ldr	r3, [r3, #28]
 1108 059c 7A68     		ldr	r2, [r7, #4]
 1109 059e D269     		ldr	r2, [r2, #28]
 1110 05a0 5169     		ldr	r1, [r2, #20]
 1111 05a2 7A68     		ldr	r2, [r7, #4]
 1112 05a4 92F85620 		ldrb	r2, [r2, #86]	@ zero_extendqisi2
 500:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_TCM_Pos) & CCU4_CC4_TC_TCM_Msk) |\
 1113              		.loc 1 500 0
 1114 05a8 02F00100 		and	r0, r2, #1
 501:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         (((uint32_t)HandlePtr->kTimerMode  << CCU4_CC4_TC_TSSM_Pos) &\
 1115              		.loc 1 501 0
 1116 05ac 7A68     		ldr	r2, [r7, #4]
 1117 05ae 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1118 05b0 4FEA4202 		lsl	r2, r2, #1
 1119 05b4 02F00202 		and	r2, r2, #2
 502:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_TSSM_Msk)|(((uint32_t)PWMSP003_COMPARE_MODE <<\
 1120              		.loc 1 502 0
 1121 05b8 1043     		orrs	r0, r0, r2
 503:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_CMOD_Pos)& CCU4_CC4_TC_CMOD_Msk) |\
 504:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         (((uint32_t)HandlePtr->ExtStartConfigType <<CCU4_CC4_TC_STRM_Pos) &\
 1122              		.loc 1 504 0
 1123 05ba 7A68     		ldr	r2, [r7, #4]
 1124 05bc 92F85420 		ldrb	r2, [r2, #84]	@ zero_extendqisi2
 1125 05c0 4FEA8222 		lsl	r2, r2, #10
 1126 05c4 02F48062 		and	r2, r2, #1024
 503:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_CMOD_Pos)& CCU4_CC4_TC_CMOD_Msk) |\
 1127              		.loc 1 503 0
 1128 05c8 1043     		orrs	r0, r0, r2
 505:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_STRM_Msk)|(((uint32_t)HandlePtr->ExtStopConfigType <<\
 1129              		.loc 1 505 0
 1130 05ca 7A68     		ldr	r2, [r7, #4]
 1131 05cc 92F85520 		ldrb	r2, [r2, #85]	@ zero_extendqisi2
 1132 05d0 4FEA0222 		lsl	r2, r2, #8
 506:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_ENDM_Pos)& CCU4_CC4_TC_ENDM_Msk);
 1133              		.loc 1 506 0
 1134 05d4 02F44072 		and	r2, r2, #768
 505:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TC_STRM_Msk)|(((uint32_t)HandlePtr->ExtStopConfigType <<\
 1135              		.loc 1 505 0
 1136 05d8 0243     		orrs	r2, r2, r0
 499:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->TC |= (((uint32_t)HandlePtr->CountingModeType <<\
 1137              		.loc 1 499 0
 1138 05da 0A43     		orrs	r2, r2, r1
 1139 05dc 5A61     		str	r2, [r3, #20]
 507:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 508:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /*Set the dither mode setting*/
 509:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC,(uint32_t)CCU4_CC4_TC_DITHE_Msk,\
 1140              		.loc 1 509 0
 1141 05de 7B68     		ldr	r3, [r7, #4]
 1142 05e0 DB69     		ldr	r3, [r3, #28]
 1143 05e2 7A68     		ldr	r2, [r7, #4]
 1144 05e4 92F82020 		ldrb	r2, [r2, #32]	@ zero_extendqisi2
 1145 05e8 4FEA4232 		lsl	r2, r2, #13
 1146 05ec 02F4C041 		and	r1, r2, #24576
 1147 05f0 7A68     		ldr	r2, [r7, #4]
 1148 05f2 D269     		ldr	r2, [r2, #28]
 1149 05f4 5269     		ldr	r2, [r2, #20]
 1150 05f6 22F4C042 		bic	r2, r2, #24576
 1151 05fa 0A43     		orrs	r2, r2, r1
 1152 05fc 5A61     		str	r2, [r3, #20]
 510:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       (uint32_t)CCU4_CC4_TC_DITHE_Pos, HandlePtr->kDitherSetting);
 511:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 512:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Set the floating point prescaler mode */
 513:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC,(uint32_t)CCU4_CC4_TC_FPE_Msk,\
 1153              		.loc 1 513 0
 1154 05fe 7B68     		ldr	r3, [r7, #4]
 1155 0600 DB69     		ldr	r3, [r3, #28]
 1156 0602 7A68     		ldr	r2, [r7, #4]
 1157 0604 92F82320 		ldrb	r2, [r2, #35]	@ zero_extendqisi2
 1158 0608 4FEA0242 		lsl	r2, r2, #16
 1159 060c 02F48031 		and	r1, r2, #65536
 1160 0610 7A68     		ldr	r2, [r7, #4]
 1161 0612 D269     		ldr	r2, [r2, #28]
 1162 0614 5269     		ldr	r2, [r2, #20]
 1163 0616 22F48032 		bic	r2, r2, #65536
 1164 061a 0A43     		orrs	r2, r2, r1
 1165 061c 5A61     		str	r2, [r3, #20]
 514:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       (uint32_t)CCU4_CC4_TC_FPE_Pos, HandlePtr->kPrescalerMode);
 515:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 516:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->DITS,(uint32_t)CCU4_CC4_DITS_DCVS_Msk,\
 1166              		.loc 1 516 0
 1167 061e 7B68     		ldr	r3, [r7, #4]
 1168 0620 DB69     		ldr	r3, [r3, #28]
 1169 0622 7A68     		ldr	r2, [r7, #4]
 1170 0624 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1171 0626 02F00F01 		and	r1, r2, #15
 1172 062a 7A68     		ldr	r2, [r7, #4]
 1173 062c D269     		ldr	r2, [r2, #28]
 1174 062e 126A     		ldr	r2, [r2, #32]
 1175 0630 22F00F02 		bic	r2, r2, #15
 1176 0634 0A43     		orrs	r2, r2, r1
 1177 0636 1A62     		str	r2, [r3, #32]
 517:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       (uint32_t)CCU4_CC4_DITS_DCVS_Pos, HandlePtr->kDitherCompare);
 518:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 519:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Configure Trap mode */
 520:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC, (uint32_t)CCU4_CC4_TC_TRPSE_Msk,\
 1178              		.loc 1 520 0
 1179 0638 7B68     		ldr	r3, [r7, #4]
 1180 063a DB69     		ldr	r3, [r3, #28]
 1181 063c 7A68     		ldr	r2, [r7, #4]
 1182 063e D27C     		ldrb	r2, [r2, #19]	@ zero_extendqisi2
 1183 0640 4FEA4252 		lsl	r2, r2, #21
 1184 0644 02F40011 		and	r1, r2, #2097152
 1185 0648 7A68     		ldr	r2, [r7, #4]
 1186 064a D269     		ldr	r2, [r2, #28]
 1187 064c 5269     		ldr	r2, [r2, #20]
 1188 064e 22F40012 		bic	r2, r2, #2097152
 1189 0652 0A43     		orrs	r2, r2, r1
 1190 0654 5A61     		str	r2, [r3, #20]
 521:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)CCU4_CC4_TC_TRPSE_Pos, HandlePtr->kTrapSync);
 522:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 523:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Configure Trap exit mode */
 524:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC, (uint32_t)CCU4_CC4_TC_TRPSW_Msk,\
 1191              		.loc 1 524 0
 1192 0656 7B68     		ldr	r3, [r7, #4]
 1193 0658 DB69     		ldr	r3, [r3, #28]
 1194 065a 7A68     		ldr	r2, [r7, #4]
 1195 065c 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 1196 065e 4FEA8252 		lsl	r2, r2, #22
 1197 0662 02F48001 		and	r1, r2, #4194304
 1198 0666 7A68     		ldr	r2, [r7, #4]
 1199 0668 D269     		ldr	r2, [r2, #28]
 1200 066a 5269     		ldr	r2, [r2, #20]
 1201 066c 22F48002 		bic	r2, r2, #4194304
 1202 0670 0A43     		orrs	r2, r2, r1
 1203 0672 5A61     		str	r2, [r3, #20]
 525:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)CCU4_CC4_TC_TRPSW_Pos, HandlePtr->kTrapExitControl);
 526:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 527:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* External modulation sync  */
 528:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC, (uint32_t)CCU4_CC4_TC_EMS_Msk,\
 1204              		.loc 1 528 0
 1205 0674 7B68     		ldr	r3, [r7, #4]
 1206 0676 DB69     		ldr	r3, [r3, #28]
 1207 0678 7A68     		ldr	r2, [r7, #4]
 1208 067a 92F83520 		ldrb	r2, [r2, #53]	@ zero_extendqisi2
 1209 067e 4FEAC252 		lsl	r2, r2, #23
 1210 0682 02F40001 		and	r1, r2, #8388608
 1211 0686 7A68     		ldr	r2, [r7, #4]
 1212 0688 D269     		ldr	r2, [r2, #28]
 1213 068a 5269     		ldr	r2, [r2, #20]
 1214 068c 22F40002 		bic	r2, r2, #8388608
 1215 0690 0A43     		orrs	r2, r2, r1
 1216 0692 5A61     		str	r2, [r3, #20]
 529:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)CCU4_CC4_TC_EMS_Pos, HandlePtr->kModulationSync);
 530:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 531:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* External modulation type  */
 532:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC, (uint32_t)CCU4_CC4_TC_EMT_Msk,\
 1217              		.loc 1 532 0
 1218 0694 7B68     		ldr	r3, [r7, #4]
 1219 0696 DB69     		ldr	r3, [r3, #28]
 1220 0698 7A68     		ldr	r2, [r7, #4]
 1221 069a 92F83420 		ldrb	r2, [r2, #52]	@ zero_extendqisi2
 1222 069e 4FEA0262 		lsl	r2, r2, #24
 1223 06a2 02F08071 		and	r1, r2, #16777216
 1224 06a6 7A68     		ldr	r2, [r7, #4]
 1225 06a8 D269     		ldr	r2, [r2, #28]
 1226 06aa 5269     		ldr	r2, [r2, #20]
 1227 06ac 22F08072 		bic	r2, r2, #16777216
 1228 06b0 0A43     		orrs	r2, r2, r1
 1229 06b2 5A61     		str	r2, [r3, #20]
 533:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)CCU4_CC4_TC_EMT_Pos, HandlePtr->kModulationMode);
 534:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 535:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Set the prescaler divider and passive level of the o/p signal */
 536:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->PSC, (uint32_t)CCU4_CC4_PSC_PSIV_Msk,\
 1230              		.loc 1 536 0
 1231 06b4 7B68     		ldr	r3, [r7, #4]
 1232 06b6 DB69     		ldr	r3, [r3, #28]
 1233 06b8 7A68     		ldr	r2, [r7, #4]
 1234 06ba 92F82120 		ldrb	r2, [r2, #33]	@ zero_extendqisi2
 1235 06be 02F00F01 		and	r1, r2, #15
 1236 06c2 7A68     		ldr	r2, [r7, #4]
 1237 06c4 D269     		ldr	r2, [r2, #28]
 1238 06c6 526A     		ldr	r2, [r2, #36]
 1239 06c8 22F00F02 		bic	r2, r2, #15
 1240 06cc 0A43     		orrs	r2, r2, r1
 1241 06ce 5A62     		str	r2, [r3, #36]
 537:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       (uint32_t)CCU4_CC4_PSC_PSIV_Pos, HandlePtr->kCCUPrescaler);
 538:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 539:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* if Selected prescaler is Floating Prescaler, set FP register */
 540:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(HandlePtr->kPrescalerMode ==
 1242              		.loc 1 540 0
 1243 06d0 7B68     		ldr	r3, [r7, #4]
 1244 06d2 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 1245 06d6 012B     		cmp	r3, #1
 1246 06d8 05D1     		bne	.L53
 541:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                         (PWMSP003_PrescalerModeType)PWMSP003_FLOATING_PRESCALER)
 542:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 543:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yRegsPtr->FPCS =\
 1247              		.loc 1 543 0
 1248 06da 7B68     		ldr	r3, [r7, #4]
 1249 06dc DB69     		ldr	r3, [r3, #28]
 544:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                         (uint32_t)HandlePtr->kFloatingPrescalepcmpvalue;
 1250              		.loc 1 544 0
 1251 06de 7A68     		ldr	r2, [r7, #4]
 1252 06e0 92F82220 		ldrb	r2, [r2, #34]	@ zero_extendqisi2
 543:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yRegsPtr->FPCS =\
 1253              		.loc 1 543 0
 1254 06e4 DA62     		str	r2, [r3, #44]
 1255              	.L53:
 545:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 546:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->PSL = HandlePtr->kPassiveLevel;
 1256              		.loc 1 546 0
 1257 06e6 7B68     		ldr	r3, [r7, #4]
 1258 06e8 DB69     		ldr	r3, [r3, #28]
 1259 06ea 7A68     		ldr	r2, [r7, #4]
 1260 06ec 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1261 06ee 9A61     		str	r2, [r3, #24]
 547:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 548:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Setting period register's value */
 549:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->PRS = (uint32_t)(HandlePtr->kPeriodVal & 0xFFFFU);
 1262              		.loc 1 549 0
 1263 06f0 7B68     		ldr	r3, [r7, #4]
 1264 06f2 DA69     		ldr	r2, [r3, #28]
 1265 06f4 7B68     		ldr	r3, [r7, #4]
 1266 06f6 9B6C     		ldr	r3, [r3, #72]
 1267 06f8 4FEA0343 		lsl	r3, r3, #16
 1268 06fc 4FEA1343 		lsr	r3, r3, #16
 1269 0700 5363     		str	r3, [r2, #52]
 550:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /*Setting compare register's value*/
 551:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->CRS = (uint32_t)(HandlePtr->kCompareValue &0xFFFFU);
 1270              		.loc 1 551 0
 1271 0702 7B68     		ldr	r3, [r7, #4]
 1272 0704 DA69     		ldr	r2, [r3, #28]
 1273 0706 7B68     		ldr	r3, [r7, #4]
 1274 0708 9B68     		ldr	r3, [r3, #8]
 1275 070a 4FEA0343 		lsl	r3, r3, #16
 1276 070e 4FEA1343 		lsr	r3, r3, #16
 1277 0712 D363     		str	r3, [r2, #60]
 552:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->SWR |= PWMSP003_ALL_CCU4_INTR_CLEAR;
 1278              		.loc 1 552 0
 1279 0714 7B68     		ldr	r3, [r7, #4]
 1280 0716 DA69     		ldr	r2, [r3, #28]
 1281 0718 7B68     		ldr	r3, [r7, #4]
 1282 071a DB69     		ldr	r3, [r3, #28]
 1283 071c D3F8B030 		ldr	r3, [r3, #176]
 1284 0720 43F47063 		orr	r3, r3, #3840
 1285 0724 43F00F03 		orr	r3, r3, #15
 1286 0728 C2F8B030 		str	r3, [r2, #176]
 553:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 554:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Applying Interrupt settings */
 555:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->INTE |= HandlePtr->InterruptControl;
 1287              		.loc 1 555 0
 1288 072c 7B68     		ldr	r3, [r7, #4]
 1289 072e DB69     		ldr	r3, [r3, #28]
 1290 0730 7A68     		ldr	r2, [r7, #4]
 1291 0732 D269     		ldr	r2, [r2, #28]
 1292 0734 D2F8A410 		ldr	r1, [r2, #164]
 1293 0738 7A68     		ldr	r2, [r7, #4]
 1294 073a 126D     		ldr	r2, [r2, #80]
 1295 073c 0A43     		orrs	r2, r2, r1
 1296 073e C3F8A420 		str	r2, [r3, #164]
 556:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 557:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Request SW shadow transfer for period, compare, dither and prescaler */
 558:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GCSS |=\
 1297              		.loc 1 558 0
 1298 0742 7B68     		ldr	r3, [r7, #4]
 1299 0744 9B69     		ldr	r3, [r3, #24]
 1300 0746 7A68     		ldr	r2, [r7, #4]
 1301 0748 9269     		ldr	r2, [r2, #24]
 1302 074a 1169     		ldr	r1, [r2, #16]
 559:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     (((uint32_t)0x1U << (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice)) |\
 1303              		.loc 1 559 0
 1304 074c 7A68     		ldr	r2, [r7, #4]
 1305 074e 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 1306 0752 4FEA8202 		lsl	r2, r2, #2
 1307 0756 4FF00100 		mov	r0, #1
 1308 075a 00FA02F0 		lsl	r0, r0, r2
 560:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((uint32_t)0x1U <<\
 561:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice) + (uint32_t)0x1U)) |\
 1309              		.loc 1 561 0
 1310 075e 7A68     		ldr	r2, [r7, #4]
 1311 0760 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 1312 0764 4FEA8202 		lsl	r2, r2, #2
 1313 0768 02F10102 		add	r2, r2, #1
 560:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((uint32_t)0x1U <<\
 1314              		.loc 1 560 0
 1315 076c 4FF00104 		mov	r4, #1
 1316 0770 04FA02F2 		lsl	r2, r4, r2
 559:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     (((uint32_t)0x1U << (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice)) |\
 1317              		.loc 1 559 0
 1318 0774 1043     		orrs	r0, r0, r2
 562:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((uint32_t)0x1U <<\
 563:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice) + (uint32_t)0x2U)));
 1319              		.loc 1 563 0
 1320 0776 7A68     		ldr	r2, [r7, #4]
 1321 0778 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 1322 077c 4FEA8202 		lsl	r2, r2, #2
 1323 0780 02F10202 		add	r2, r2, #2
 562:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((uint32_t)0x1U <<\
 1324              		.loc 1 562 0
 1325 0784 4FF00104 		mov	r4, #1
 1326 0788 04FA02F2 		lsl	r2, r4, r2
 561:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     ((PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice) + (uint32_t)0x1U)) |\
 1327              		.loc 1 561 0
 1328 078c 0243     		orrs	r2, r2, r0
 558:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GCSS |=\
 1329              		.loc 1 558 0
 1330 078e 0A43     		orrs	r2, r2, r1
 1331 0790 1A61     		str	r2, [r3, #16]
 564:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 565:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Multi channel shadow transfer enable or disable */
 566:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC,  (uint32_t)CCU4_CC4_TC_MCME_Msk,\
 1332              		.loc 1 566 0
 1333 0792 7B68     		ldr	r3, [r7, #4]
 1334 0794 DB69     		ldr	r3, [r3, #28]
 1335 0796 7A68     		ldr	r2, [r7, #4]
 1336 0798 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1337 079c 4FEA4262 		lsl	r2, r2, #25
 1338 07a0 02F00071 		and	r1, r2, #33554432
 1339 07a4 7A68     		ldr	r2, [r7, #4]
 1340 07a6 D269     		ldr	r2, [r2, #28]
 1341 07a8 5269     		ldr	r2, [r2, #20]
 1342 07aa 22F00072 		bic	r2, r2, #33554432
 1343 07ae 0A43     		orrs	r2, r2, r1
 1344 07b0 5A61     		str	r2, [r3, #20]
 567:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                         (uint32_t)CCU4_CC4_TC_MCME_Pos, HandlePtr->kMCMode);
 568:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 569:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Multi channel shadow transfer source select */
 570:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yKernRegsPtr->GCTRL,
 1345              		.loc 1 570 0
 1346 07b2 7B68     		ldr	r3, [r7, #4]
 1347 07b4 9B69     		ldr	r3, [r3, #24]
 1348 07b6 7A68     		ldr	r2, [r7, #4]
 1349 07b8 92F83820 		ldrb	r2, [r2, #56]	@ zero_extendqisi2
 1350 07bc 1146     		mov	r1, r2
 1351 07be 7A68     		ldr	r2, [r7, #4]
 1352 07c0 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 1353 07c4 02F10A02 		add	r2, r2, #10
 1354 07c8 01FA02F1 		lsl	r1, r1, r2
 1355 07cc 7A68     		ldr	r2, [r7, #4]
 1356 07ce 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 1357 07d2 4FF48060 		mov	r0, #1024
 1358 07d6 00FA02F2 		lsl	r2, r0, r2
 1359 07da 1140     		ands	r1, r1, r2
 1360 07dc 7A68     		ldr	r2, [r7, #4]
 1361 07de 9269     		ldr	r2, [r2, #24]
 1362 07e0 1068     		ldr	r0, [r2, #0]
 1363 07e2 7A68     		ldr	r2, [r7, #4]
 1364 07e4 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 1365 07e8 4FF48064 		mov	r4, #1024
 1366 07ec 04FA02F2 		lsl	r2, r4, r2
 1367 07f0 6FEA0202 		mvn	r2, r2
 1368 07f4 0240     		ands	r2, r2, r0
 1369 07f6 0A43     		orrs	r2, r2, r1
 1370 07f8 1A60     		str	r2, [r3, #0]
 571:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             (uint32_t)(CCU4_GCTRL_MSE0_Msk << HandlePtr->Slice),\
 572:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             (uint32_t)(CCU4_GCTRL_MSE0_Pos + HandlePtr->Slice),\
 573:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             (uint32_t)HandlePtr->kMCModeShadowRequest);
 574:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 575:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Multi channel shadow transfer configuration */
 576:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yKernRegsPtr->GCTRL,
 1371              		.loc 1 576 0
 1372 07fa 7B68     		ldr	r3, [r7, #4]
 1373 07fc 9A69     		ldr	r2, [r3, #24]
 1374 07fe 7B68     		ldr	r3, [r7, #4]
 1375 0800 93F83930 		ldrb	r3, [r3, #57]	@ zero_extendqisi2
 1376 0804 4FEA8333 		lsl	r3, r3, #14
 1377 0808 4FEA0343 		lsl	r3, r3, #16
 1378 080c 4FEA1343 		lsr	r3, r3, #16
 1379 0810 7968     		ldr	r1, [r7, #4]
 1380 0812 8969     		ldr	r1, [r1, #24]
 1381 0814 0968     		ldr	r1, [r1, #0]
 1382 0816 21F44041 		bic	r1, r1, #49152
 1383 081a 0B43     		orrs	r3, r3, r1
 1384 081c 1360     		str	r3, [r2, #0]
 577:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (uint32_t)CCU4_GCTRL_MSDE_Msk,\
 578:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             (uint32_t)CCU4_GCTRL_MSDE_Pos,
 579:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             (uint32_t)HandlePtr->kMCModeShadowConfig);
 580:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 581:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1385              		.loc 1 581 0
 1386 081e 4FF00003 		mov	r3, #0
 1387 0822 7B61     		str	r3, [r7, #20]
 582:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->DynamicDataType->StateType = PWMSP003_INITIALIZED;
 1388              		.loc 1 582 0
 1389 0824 7B68     		ldr	r3, [r7, #4]
 1390 0826 DB6D     		ldr	r3, [r3, #92]
 1391 0828 4FF00102 		mov	r2, #1
 1392 082c 1A70     		strb	r2, [r3, #0]
 1393 082e 00E0     		b	.L15
 1394              	.L55:
 240:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       break;
 1395              		.loc 1 240 0
 1396 0830 00BF     		nop
 1397              	.L15:
 583:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   } while (0);
 584:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 585:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1398              		.loc 1 585 0
 1399 0832 7B69     		ldr	r3, [r7, #20]
 586:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1400              		.loc 1 586 0
 1401 0834 1846     		mov	r0, r3
 1402 0836 07F11807 		add	r7, r7, #24
 1403 083a BD46     		mov	sp, r7
 1404 083c 90BC     		pop	{r4, r7}
 1405 083e 7047     		bx	lr
 1406              		.cfi_endproc
 1407              	.LFE117:
 1409              		.section	.text.PWMSP003_Start,"ax",%progbits
 1410              		.align	2
 1411              		.global	PWMSP003_Start
 1412              		.thumb
 1413              		.thumb_func
 1415              	PWMSP003_Start:
 1416              	.LFB118:
 587:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 588:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 589:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function starts the app.
 590:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function should be called even if external start is configured.
 591:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 592:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_Start(const PWMSP003_HandleType* HandlePtr)
 593:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1417              		.loc 1 593 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 16
 1420              		@ frame_needed = 1, uses_anonymous_args = 0
 1421              		@ link register save eliminated.
 1422 0000 80B4     		push	{r7}
 1423              	.LCFI18:
 1424              		.cfi_def_cfa_offset 4
 1425              		.cfi_offset 7, -4
 1426 0002 85B0     		sub	sp, sp, #20
 1427              	.LCFI19:
 1428              		.cfi_def_cfa_offset 24
 1429 0004 00AF     		add	r7, sp, #0
 1430              	.LCFI20:
 1431              		.cfi_def_cfa_register 7
 1432 0006 7860     		str	r0, [r7, #4]
 594:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1433              		.loc 1 594 0
 1434 0008 4FF00103 		mov	r3, #1
 1435 000c FB60     		str	r3, [r7, #12]
 595:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 596:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   do
 597:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 598:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if((HandlePtr->DynamicDataType->StateType == PWMSP003_UNINITIALIZED) ||
 1436              		.loc 1 598 0
 1437 000e 7B68     		ldr	r3, [r7, #4]
 1438 0010 DB6D     		ldr	r3, [r3, #92]
 1439 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1440 0014 002B     		cmp	r3, #0
 1441 0016 53D0     		beq	.L57
 599:../Dave/Generated/src/PWMSP003/PWMSP003.c ****        (HandlePtr->DynamicDataType->StateType == PWMSP003_RUNNING))
 1442              		.loc 1 599 0 discriminator 1
 1443 0018 7B68     		ldr	r3, [r7, #4]
 1444 001a DB6D     		ldr	r3, [r3, #92]
 1445 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 598:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if((HandlePtr->DynamicDataType->StateType == PWMSP003_UNINITIALIZED) ||
 1446              		.loc 1 598 0 discriminator 1
 1447 001e 022B     		cmp	r3, #2
 1448 0020 4ED0     		beq	.L57
 600:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 601:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       break;
 602:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 603:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 604:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->SWR = PWMSP003_ALL_CCU4_INTR_CLEAR;
 1449              		.loc 1 604 0
 1450 0022 7B68     		ldr	r3, [r7, #4]
 1451 0024 DB69     		ldr	r3, [r3, #28]
 1452 0026 40F60F72 		movw	r2, #3855
 1453 002a C3F8B020 		str	r2, [r3, #176]
 605:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 606:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Start the Prescaler */
 607:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLC |=\
 1454              		.loc 1 607 0
 1455 002e 7B68     		ldr	r3, [r7, #4]
 1456 0030 9B69     		ldr	r3, [r3, #24]
 1457 0032 7A68     		ldr	r2, [r7, #4]
 1458 0034 9269     		ldr	r2, [r2, #24]
 1459 0036 D268     		ldr	r2, [r2, #12]
 1460 0038 42F48072 		orr	r2, r2, #256
 1461 003c DA60     		str	r2, [r3, #12]
 608:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             ((uint32_t)0x1U << ((uint32_t)CCU4_GIDLC_SPRB_Pos));
 609:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 610:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Start the timer slice */
 611:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLC |=\
 1462              		.loc 1 611 0
 1463 003e 7B68     		ldr	r3, [r7, #4]
 1464 0040 9B69     		ldr	r3, [r3, #24]
 1465 0042 7A68     		ldr	r2, [r7, #4]
 1466 0044 9269     		ldr	r2, [r2, #24]
 1467 0046 D168     		ldr	r1, [r2, #12]
 612:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         ((uint32_t)0x1U << ((uint32_t)CCU4_GIDLC_CS0I_Pos +\
 613:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             (uint32_t)HandlePtr->Slice));
 1468              		.loc 1 613 0
 1469 0048 7A68     		ldr	r2, [r7, #4]
 1470 004a 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 612:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         ((uint32_t)0x1U << ((uint32_t)CCU4_GIDLC_CS0I_Pos +\
 1471              		.loc 1 612 0
 1472 004e 4FF00100 		mov	r0, #1
 1473 0052 00FA02F2 		lsl	r2, r0, r2
 611:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLC |=\
 1474              		.loc 1 611 0
 1475 0056 0A43     		orrs	r2, r2, r1
 1476 0058 DA60     		str	r2, [r3, #12]
 614:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 615:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->TC, CCU4_CC4_TC_TRAPE_Msk,\
 1477              		.loc 1 615 0
 1478 005a 7B68     		ldr	r3, [r7, #4]
 1479 005c DB69     		ldr	r3, [r3, #28]
 1480 005e 7A68     		ldr	r2, [r7, #4]
 1481 0060 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1482 0062 4FEA4242 		lsl	r2, r2, #17
 1483 0066 02F40031 		and	r1, r2, #131072
 1484 006a 7A68     		ldr	r2, [r7, #4]
 1485 006c D269     		ldr	r2, [r2, #28]
 1486 006e 5269     		ldr	r2, [r2, #20]
 1487 0070 22F40032 		bic	r2, r2, #131072
 1488 0074 0A43     		orrs	r2, r2, r1
 1489 0076 5A61     		str	r2, [r3, #20]
 616:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)CCU4_CC4_TC_TRAPE_Pos, HandlePtr->kTrapEnable);
 617:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 618:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Set run bit of slices if external start is not configured */
 619:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if (HandlePtr->kStartEvent == PWMSP003_NO_EVENT)
 1490              		.loc 1 619 0
 1491 0078 7B68     		ldr	r3, [r7, #4]
 1492 007a 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 1493 007e 002B     		cmp	r3, #0
 1494 0080 08D1     		bne	.L58
 620:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 621:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yRegsPtr->TCSET |= (uint32_t)0x1U;
 1495              		.loc 1 621 0
 1496 0082 7B68     		ldr	r3, [r7, #4]
 1497 0084 DB69     		ldr	r3, [r3, #28]
 1498 0086 7A68     		ldr	r2, [r7, #4]
 1499 0088 D269     		ldr	r2, [r2, #28]
 1500 008a D268     		ldr	r2, [r2, #12]
 1501 008c 42F00102 		orr	r2, r2, #1
 1502 0090 DA60     		str	r2, [r3, #12]
 1503 0092 0DE0     		b	.L59
 1504              	.L58:
 622:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 623:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
 624:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 625:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 1505              		.loc 1 625 0
 1506 0094 7B68     		ldr	r3, [r7, #4]
 1507 0096 DB69     		ldr	r3, [r3, #28]
 1508 0098 7A68     		ldr	r2, [r7, #4]
 1509 009a 92F82720 		ldrb	r2, [r2, #39]	@ zero_extendqisi2
 1510 009e 02F00301 		and	r1, r2, #3
 1511 00a2 7A68     		ldr	r2, [r7, #4]
 1512 00a4 D269     		ldr	r2, [r2, #28]
 1513 00a6 5268     		ldr	r2, [r2, #4]
 1514 00a8 22F00302 		bic	r2, r2, #3
 1515 00ac 0A43     		orrs	r2, r2, r1
 1516 00ae 5A60     		str	r2, [r3, #4]
 1517              	.L59:
 626:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_CMC_STRTS_Msk,\
 627:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                (uint32_t)CCU4_CC4_CMC_STRTS_Pos,\
 628:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                HandlePtr->kStartEvent);
 629:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 630:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 631:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->DynamicDataType->StateType = PWMSP003_RUNNING;
 1518              		.loc 1 631 0
 1519 00b0 7B68     		ldr	r3, [r7, #4]
 1520 00b2 DB6D     		ldr	r3, [r3, #92]
 1521 00b4 4FF00202 		mov	r2, #2
 1522 00b8 1A70     		strb	r2, [r3, #0]
 632:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1523              		.loc 1 632 0
 1524 00ba 4FF00003 		mov	r3, #0
 1525 00be FB60     		str	r3, [r7, #12]
 1526              	.L57:
 633:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   } while (0);
 634:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 635:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1527              		.loc 1 635 0
 1528 00c0 FB68     		ldr	r3, [r7, #12]
 636:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1529              		.loc 1 636 0
 1530 00c2 1846     		mov	r0, r3
 1531 00c4 07F11407 		add	r7, r7, #20
 1532 00c8 BD46     		mov	sp, r7
 1533 00ca 80BC     		pop	{r7}
 1534 00cc 7047     		bx	lr
 1535              		.cfi_endproc
 1536              	.LFE118:
 1538 00ce 00BF     		.section	.text.PWMSP003_Deinit,"ax",%progbits
 1539              		.align	2
 1540              		.global	PWMSP003_Deinit
 1541              		.thumb
 1542              		.thumb_func
 1544              	PWMSP003_Deinit:
 1545              	.LFB119:
 637:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 638:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 639:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function will reset CCU4_CCy slice registers with default values.
 640:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 641:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_Deinit(const PWMSP003_HandleType* HandlePtr)
 642:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1546              		.loc 1 642 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 16
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550              		@ link register save eliminated.
 1551 0000 80B4     		push	{r7}
 1552              	.LCFI21:
 1553              		.cfi_def_cfa_offset 4
 1554              		.cfi_offset 7, -4
 1555 0002 85B0     		sub	sp, sp, #20
 1556              	.LCFI22:
 1557              		.cfi_def_cfa_offset 24
 1558 0004 00AF     		add	r7, sp, #0
 1559              	.LCFI23:
 1560              		.cfi_def_cfa_register 7
 1561 0006 7860     		str	r0, [r7, #4]
 643:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1562              		.loc 1 643 0
 1563 0008 4FF00103 		mov	r3, #1
 1564 000c FB60     		str	r3, [r7, #12]
 644:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 645:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 1565              		.loc 1 645 0
 1566 000e 7B68     		ldr	r3, [r7, #4]
 1567 0010 DB6D     		ldr	r3, [r3, #92]
 1568 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1569 0014 002B     		cmp	r3, #0
 1570 0016 50D0     		beq	.L62
 646:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 647:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Stop and Clear the timer */
 648:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->TCCLR = PWMSP003_SLICE_CLEAR;
 1571              		.loc 1 648 0
 1572 0018 7B68     		ldr	r3, [r7, #4]
 1573 001a DB69     		ldr	r3, [r3, #28]
 1574 001c 4FF00702 		mov	r2, #7
 1575 0020 1A61     		str	r2, [r3, #16]
 649:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Clear the interrupts */
 650:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->SWR = PWMSP003_ALL_CCU4_INTR_CLEAR;
 1576              		.loc 1 650 0
 1577 0022 7B68     		ldr	r3, [r7, #4]
 1578 0024 DB69     		ldr	r3, [r3, #28]
 1579 0026 40F60F72 		movw	r2, #3855
 1580 002a C3F8B020 		str	r2, [r3, #176]
 651:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Disable all CCU4 Interrupts */
 652:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->INTE = RESET;
 1581              		.loc 1 652 0
 1582 002e 7B68     		ldr	r3, [r7, #4]
 1583 0030 DB69     		ldr	r3, [r3, #28]
 1584 0032 4FF00002 		mov	r2, #0
 1585 0036 C3F8A420 		str	r2, [r3, #164]
 653:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 654:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /*Set IDLE mode for selected slice*/
 655:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLS |= (((uint32_t)0x1U <<\
 1586              		.loc 1 655 0
 1587 003a 7B68     		ldr	r3, [r7, #4]
 1588 003c 9B69     		ldr	r3, [r3, #24]
 1589 003e 7A68     		ldr	r2, [r7, #4]
 1590 0040 9269     		ldr	r2, [r2, #24]
 1591 0042 9168     		ldr	r1, [r2, #8]
 656:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                             ((uint32_t)CCU4_GIDLS_SS0I_Pos +\
 657:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                             (uint32_t)HandlePtr->Slice)) |\
 1592              		.loc 1 657 0
 1593 0044 7A68     		ldr	r2, [r7, #4]
 1594 0046 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 655:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLS |= (((uint32_t)0x1U <<\
 1595              		.loc 1 655 0
 1596 004a 4FF00100 		mov	r0, #1
 1597 004e 00FA02F2 		lsl	r2, r0, r2
 1598 0052 0A43     		orrs	r2, r2, r1
 1599 0054 42F44072 		orr	r2, r2, #768
 1600 0058 9A60     		str	r2, [r3, #8]
 658:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                             ((uint32_t)0x1U << (uint32_t)CCU4_GIDLS_CPRB_Pos) |\
 659:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                             ((uint32_t)0x1U << (uint32_t)CCU4_GIDLS_PSIC_Pos));
 660:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 661:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /*Clear all the registers*/
 662:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->INS = RESET;
 1601              		.loc 1 662 0
 1602 005a 7B68     		ldr	r3, [r7, #4]
 1603 005c DB69     		ldr	r3, [r3, #28]
 1604 005e 4FF00002 		mov	r2, #0
 1605 0062 1A60     		str	r2, [r3, #0]
 663:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->CMC = RESET;
 1606              		.loc 1 663 0
 1607 0064 7B68     		ldr	r3, [r7, #4]
 1608 0066 DB69     		ldr	r3, [r3, #28]
 1609 0068 4FF00002 		mov	r2, #0
 1610 006c 5A60     		str	r2, [r3, #4]
 664:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->TC = RESET;
 1611              		.loc 1 664 0
 1612 006e 7B68     		ldr	r3, [r7, #4]
 1613 0070 DB69     		ldr	r3, [r3, #28]
 1614 0072 4FF00002 		mov	r2, #0
 1615 0076 5A61     		str	r2, [r3, #20]
 665:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->PSC = RESET;
 1616              		.loc 1 665 0
 1617 0078 7B68     		ldr	r3, [r7, #4]
 1618 007a DB69     		ldr	r3, [r3, #28]
 1619 007c 4FF00002 		mov	r2, #0
 1620 0080 5A62     		str	r2, [r3, #36]
 666:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->PSL = RESET;
 1621              		.loc 1 666 0
 1622 0082 7B68     		ldr	r3, [r7, #4]
 1623 0084 DB69     		ldr	r3, [r3, #28]
 1624 0086 4FF00002 		mov	r2, #0
 1625 008a 9A61     		str	r2, [r3, #24]
 667:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->DITS = RESET;
 1626              		.loc 1 667 0
 1627 008c 7B68     		ldr	r3, [r7, #4]
 1628 008e DB69     		ldr	r3, [r3, #28]
 1629 0090 4FF00002 		mov	r2, #0
 1630 0094 1A62     		str	r2, [r3, #32]
 668:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->CRS = RESET;
 1631              		.loc 1 668 0
 1632 0096 7B68     		ldr	r3, [r7, #4]
 1633 0098 DB69     		ldr	r3, [r3, #28]
 1634 009a 4FF00002 		mov	r2, #0
 1635 009e DA63     		str	r2, [r3, #60]
 669:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yRegsPtr->PRS = RESET;
 1636              		.loc 1 669 0
 1637 00a0 7B68     		ldr	r3, [r7, #4]
 1638 00a2 DB69     		ldr	r3, [r3, #28]
 1639 00a4 4FF00002 		mov	r2, #0
 1640 00a8 5A63     		str	r2, [r3, #52]
 670:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 671:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->DynamicDataType->StateType = PWMSP003_UNINITIALIZED;
 1641              		.loc 1 671 0
 1642 00aa 7B68     		ldr	r3, [r7, #4]
 1643 00ac DB6D     		ldr	r3, [r3, #92]
 1644 00ae 4FF00002 		mov	r2, #0
 1645 00b2 1A70     		strb	r2, [r3, #0]
 672:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 673:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1646              		.loc 1 673 0
 1647 00b4 4FF00003 		mov	r3, #0
 1648 00b8 FB60     		str	r3, [r7, #12]
 1649              	.L62:
 674:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 675:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 676:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1650              		.loc 1 676 0
 1651 00ba FB68     		ldr	r3, [r7, #12]
 677:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1652              		.loc 1 677 0
 1653 00bc 1846     		mov	r0, r3
 1654 00be 07F11407 		add	r7, r7, #20
 1655 00c2 BD46     		mov	sp, r7
 1656 00c4 80BC     		pop	{r7}
 1657 00c6 7047     		bx	lr
 1658              		.cfi_endproc
 1659              	.LFE119:
 1661              		.section	.text.PWMSP003_Stop,"ax",%progbits
 1662              		.align	2
 1663              		.global	PWMSP003_Stop
 1664              		.thumb
 1665              		.thumb_func
 1667              	PWMSP003_Stop:
 1668              	.LFB120:
 678:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 679:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 680:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function will stop the Single Phase PWM APP which will eventually
 681:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * stop the CCU4_CCy slice. This disables the interrupts and sets the IDLE mode
 682:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * of the CCU slice.
 683:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 684:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_Stop(const PWMSP003_HandleType* HandlePtr)
 685:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1669              		.loc 1 685 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 24
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673              		@ link register save eliminated.
 1674 0000 80B4     		push	{r7}
 1675              	.LCFI24:
 1676              		.cfi_def_cfa_offset 4
 1677              		.cfi_offset 7, -4
 1678 0002 87B0     		sub	sp, sp, #28
 1679              	.LCFI25:
 1680              		.cfi_def_cfa_offset 32
 1681 0004 00AF     		add	r7, sp, #0
 1682              	.LCFI26:
 1683              		.cfi_def_cfa_register 7
 1684 0006 7860     		str	r0, [r7, #4]
 686:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1685              		.loc 1 686 0
 1686 0008 4FF00103 		mov	r3, #1
 1687 000c 7B61     		str	r3, [r7, #20]
 687:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 688:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp2;
 689:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 690:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   do
 691:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 692:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if (HandlePtr->DynamicDataType->StateType != PWMSP003_RUNNING)
 1688              		.loc 1 692 0
 1689 000e 7B68     		ldr	r3, [r7, #4]
 1690 0010 DB6D     		ldr	r3, [r3, #92]
 1691 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1692 0014 022B     		cmp	r3, #2
 1693 0016 22D1     		bne	.L68
 1694              	.L65:
 693:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 694:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       break;
 695:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 696:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
 697:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 698:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /* Clear the timer run bits, Reset the Prescaler */
 699:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = ((uint32_t)CCU4_GIDLS_SS0I_Pos + (uint32_t)HandlePtr->Slice);
 1695              		.loc 1 699 0
 1696 0018 7B68     		ldr	r3, [r7, #4]
 1697 001a 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 1698 001e 3B61     		str	r3, [r7, #16]
 700:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp2 = ((uint32_t)0x01 << CCU4_GIDLS_PSIC_Pos);
 1699              		.loc 1 700 0
 1700 0020 4FF40073 		mov	r3, #512
 1701 0024 FB60     		str	r3, [r7, #12]
 701:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yRegsPtr->TCCLR = PWMSP003_SLICE_CLEAR;
 1702              		.loc 1 701 0
 1703 0026 7B68     		ldr	r3, [r7, #4]
 1704 0028 DB69     		ldr	r3, [r3, #28]
 1705 002a 4FF00702 		mov	r2, #7
 1706 002e 1A61     		str	r2, [r3, #16]
 702:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GIDLS |= (((uint32_t)0x01 << Temp1) | Temp2 );
 1707              		.loc 1 702 0
 1708 0030 7B68     		ldr	r3, [r7, #4]
 1709 0032 9B69     		ldr	r3, [r3, #24]
 1710 0034 7A68     		ldr	r2, [r7, #4]
 1711 0036 9269     		ldr	r2, [r2, #24]
 1712 0038 9168     		ldr	r1, [r2, #8]
 1713 003a 3A69     		ldr	r2, [r7, #16]
 1714 003c 4FF00100 		mov	r0, #1
 1715 0040 00FA02F0 		lsl	r0, r0, r2
 1716 0044 FA68     		ldr	r2, [r7, #12]
 1717 0046 0243     		orrs	r2, r2, r0
 1718 0048 0A43     		orrs	r2, r2, r1
 1719 004a 9A60     		str	r2, [r3, #8]
 703:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 704:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->DynamicDataType->StateType = PWMSP003_STOPPED;
 1720              		.loc 1 704 0
 1721 004c 7B68     		ldr	r3, [r7, #4]
 1722 004e DB6D     		ldr	r3, [r3, #92]
 1723 0050 4FF00302 		mov	r2, #3
 1724 0054 1A70     		strb	r2, [r3, #0]
 705:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 1725              		.loc 1 705 0
 1726 0056 4FF00003 		mov	r3, #0
 1727 005a 7B61     		str	r3, [r7, #20]
 1728 005c 00E0     		b	.L66
 1729              	.L68:
 694:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       break;
 1730              		.loc 1 694 0
 1731 005e 00BF     		nop
 1732              	.L66:
 706:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 707:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   } while (0);
 708:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 709:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1733              		.loc 1 709 0
 1734 0060 7B69     		ldr	r3, [r7, #20]
 710:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1735              		.loc 1 710 0
 1736 0062 1846     		mov	r0, r3
 1737 0064 07F11C07 		add	r7, r7, #28
 1738 0068 BD46     		mov	sp, r7
 1739 006a 80BC     		pop	{r7}
 1740 006c 7047     		bx	lr
 1741              		.cfi_endproc
 1742              	.LFE120:
 1744 006e 00BF     		.section	.text.PWMSP003_GetSliceIdleStatus,"ax",%progbits
 1745              		.align	2
 1746              		.global	PWMSP003_GetSliceIdleStatus
 1747              		.thumb
 1748              		.thumb_func
 1750              	PWMSP003_GetSliceIdleStatus:
 1751              	.LFB121:
 711:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 712:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 713:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function reads the idle status of the given CCU4 slice
 714:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 715:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetSliceIdleStatus(const PWMSP003_HandleType * HandlePtr,
 716:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                      uint32_t * State)
 717:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1752              		.loc 1 717 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 16
 1755              		@ frame_needed = 1, uses_anonymous_args = 0
 1756              		@ link register save eliminated.
 1757 0000 80B4     		push	{r7}
 1758              	.LCFI27:
 1759              		.cfi_def_cfa_offset 4
 1760              		.cfi_offset 7, -4
 1761 0002 85B0     		sub	sp, sp, #20
 1762              	.LCFI28:
 1763              		.cfi_def_cfa_offset 24
 1764 0004 00AF     		add	r7, sp, #0
 1765              	.LCFI29:
 1766              		.cfi_def_cfa_register 7
 1767 0006 7860     		str	r0, [r7, #4]
 1768 0008 3960     		str	r1, [r7, #0]
 718:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1769              		.loc 1 718 0
 1770 000a 4FF00103 		mov	r3, #1
 1771 000e FB60     		str	r3, [r7, #12]
 719:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 720:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if(HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 1772              		.loc 1 720 0
 1773 0010 7B68     		ldr	r3, [r7, #4]
 1774 0012 DB6D     		ldr	r3, [r3, #92]
 1775 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1776 0016 002B     		cmp	r3, #0
 1777 0018 14D0     		beq	.L70
 721:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 722:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Get the slice idle status */
 723:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *State = (uint32_t)RD_REG(HandlePtr->CC4yKernRegsPtr->GSTAT,\
 1778              		.loc 1 723 0
 1779 001a 7B68     		ldr	r3, [r7, #4]
 1780 001c 9B69     		ldr	r3, [r3, #24]
 1781 001e 5A68     		ldr	r2, [r3, #4]
 1782 0020 7B68     		ldr	r3, [r7, #4]
 1783 0022 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 1784 0026 4FF00101 		mov	r1, #1
 1785 002a 01FA03F3 		lsl	r3, r1, r3
 1786 002e 1A40     		ands	r2, r2, r3
 1787 0030 7B68     		ldr	r3, [r7, #4]
 1788 0032 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 1789 0036 22FA03F2 		lsr	r2, r2, r3
 1790 003a 3B68     		ldr	r3, [r7, #0]
 1791 003c 1A60     		str	r2, [r3, #0]
 724:../Dave/Generated/src/PWMSP003/PWMSP003.c ****              (uint32_t)(CCU4_GSTAT_S0I_Msk << (uint32_t)HandlePtr->Slice),\
 725:../Dave/Generated/src/PWMSP003/PWMSP003.c ****              (uint32_t)(CCU4_GSTAT_S0I_Pos + (uint32_t)HandlePtr->Slice));
 726:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 727:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1792              		.loc 1 727 0
 1793 003e 4FF00003 		mov	r3, #0
 1794 0042 FB60     		str	r3, [r7, #12]
 1795              	.L70:
 728:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 729:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 730:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1796              		.loc 1 730 0
 1797 0044 FB68     		ldr	r3, [r7, #12]
 731:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1798              		.loc 1 731 0
 1799 0046 1846     		mov	r0, r3
 1800 0048 07F11407 		add	r7, r7, #20
 1801 004c BD46     		mov	sp, r7
 1802 004e 80BC     		pop	{r7}
 1803 0050 7047     		bx	lr
 1804              		.cfi_endproc
 1805              	.LFE121:
 1807 0052 00BF     		.section	.text.PWMSP003_SetSliceIdleState,"ax",%progbits
 1808              		.align	2
 1809              		.global	PWMSP003_SetSliceIdleState
 1810              		.thumb
 1811              		.thumb_func
 1813              	PWMSP003_SetSliceIdleState:
 1814              	.LFB122:
 732:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 733:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 734:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function sets the given CCU4 slice to idle state
 735:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 736:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_SetSliceIdleState(const PWMSP003_HandleType * HandlePtr)
 737:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1815              		.loc 1 737 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 16
 1818              		@ frame_needed = 1, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820 0000 80B4     		push	{r7}
 1821              	.LCFI30:
 1822              		.cfi_def_cfa_offset 4
 1823              		.cfi_offset 7, -4
 1824 0002 85B0     		sub	sp, sp, #20
 1825              	.LCFI31:
 1826              		.cfi_def_cfa_offset 24
 1827 0004 00AF     		add	r7, sp, #0
 1828              	.LCFI32:
 1829              		.cfi_def_cfa_register 7
 1830 0006 7860     		str	r0, [r7, #4]
 738:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1831              		.loc 1 738 0
 1832 0008 4FF00103 		mov	r3, #1
 1833 000c FB60     		str	r3, [r7, #12]
 739:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 740:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if(HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 1834              		.loc 1 740 0
 1835 000e 7B68     		ldr	r3, [r7, #4]
 1836 0010 DB6D     		ldr	r3, [r3, #92]
 1837 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1838 0014 002B     		cmp	r3, #0
 1839 0016 10D0     		beq	.L73
 741:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 742:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Set the slice idle state */
 743:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLS |= (uint32_t)(CCU4_GIDLS_SS0I_Msk << \
 1840              		.loc 1 743 0
 1841 0018 7B68     		ldr	r3, [r7, #4]
 1842 001a 9B69     		ldr	r3, [r3, #24]
 1843 001c 7A68     		ldr	r2, [r7, #4]
 1844 001e 9269     		ldr	r2, [r2, #24]
 1845 0020 9168     		ldr	r1, [r2, #8]
 744:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                              (uint32_t)HandlePtr->Slice);
 1846              		.loc 1 744 0
 1847 0022 7A68     		ldr	r2, [r7, #4]
 1848 0024 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 743:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLS |= (uint32_t)(CCU4_GIDLS_SS0I_Msk << \
 1849              		.loc 1 743 0
 1850 0028 4FF00100 		mov	r0, #1
 1851 002c 00FA02F2 		lsl	r2, r0, r2
 1852 0030 0A43     		orrs	r2, r2, r1
 1853 0032 9A60     		str	r2, [r3, #8]
 745:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 746:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1854              		.loc 1 746 0
 1855 0034 4FF00003 		mov	r3, #0
 1856 0038 FB60     		str	r3, [r7, #12]
 1857              	.L73:
 747:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 748:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 749:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1858              		.loc 1 749 0
 1859 003a FB68     		ldr	r3, [r7, #12]
 750:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1860              		.loc 1 750 0
 1861 003c 1846     		mov	r0, r3
 1862 003e 07F11407 		add	r7, r7, #20
 1863 0042 BD46     		mov	sp, r7
 1864 0044 80BC     		pop	{r7}
 1865 0046 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE122:
 1869              		.section	.text.PWMSP003_RemoveSliceIdleState,"ax",%progbits
 1870              		.align	2
 1871              		.global	PWMSP003_RemoveSliceIdleState
 1872              		.thumb
 1873              		.thumb_func
 1875              	PWMSP003_RemoveSliceIdleState:
 1876              	.LFB123:
 751:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 752:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 753:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function brings the given CCU4 slice out of idle state
 754:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 755:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_RemoveSliceIdleState(const PWMSP003_HandleType * HandlePtr)
 756:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1877              		.loc 1 756 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 16
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881              		@ link register save eliminated.
 1882 0000 80B4     		push	{r7}
 1883              	.LCFI33:
 1884              		.cfi_def_cfa_offset 4
 1885              		.cfi_offset 7, -4
 1886 0002 85B0     		sub	sp, sp, #20
 1887              	.LCFI34:
 1888              		.cfi_def_cfa_offset 24
 1889 0004 00AF     		add	r7, sp, #0
 1890              	.LCFI35:
 1891              		.cfi_def_cfa_register 7
 1892 0006 7860     		str	r0, [r7, #4]
 757:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1893              		.loc 1 757 0
 1894 0008 4FF00103 		mov	r3, #1
 1895 000c FB60     		str	r3, [r7, #12]
 758:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 759:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if(HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 1896              		.loc 1 759 0
 1897 000e 7B68     		ldr	r3, [r7, #4]
 1898 0010 DB6D     		ldr	r3, [r3, #92]
 1899 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1900 0014 002B     		cmp	r3, #0
 1901 0016 10D0     		beq	.L76
 760:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 761:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Clear the slice idle state */
 762:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLC |= (uint32_t)(CCU4_GIDLC_CS0I_Msk << \
 1902              		.loc 1 762 0
 1903 0018 7B68     		ldr	r3, [r7, #4]
 1904 001a 9B69     		ldr	r3, [r3, #24]
 1905 001c 7A68     		ldr	r2, [r7, #4]
 1906 001e 9269     		ldr	r2, [r2, #24]
 1907 0020 D168     		ldr	r1, [r2, #12]
 763:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                              (uint32_t)HandlePtr->Slice);
 1908              		.loc 1 763 0
 1909 0022 7A68     		ldr	r2, [r7, #4]
 1910 0024 92F85820 		ldrb	r2, [r2, #88]	@ zero_extendqisi2
 762:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     HandlePtr->CC4yKernRegsPtr->GIDLC |= (uint32_t)(CCU4_GIDLC_CS0I_Msk << \
 1911              		.loc 1 762 0
 1912 0028 4FF00100 		mov	r0, #1
 1913 002c 00FA02F2 		lsl	r2, r0, r2
 1914 0030 0A43     		orrs	r2, r2, r1
 1915 0032 DA60     		str	r2, [r3, #12]
 764:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1916              		.loc 1 764 0
 1917 0034 4FF00003 		mov	r3, #0
 1918 0038 FB60     		str	r3, [r7, #12]
 1919              	.L76:
 765:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 766:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 767:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1920              		.loc 1 767 0
 1921 003a FB68     		ldr	r3, [r7, #12]
 768:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1922              		.loc 1 768 0
 1923 003c 1846     		mov	r0, r3
 1924 003e 07F11407 		add	r7, r7, #20
 1925 0042 BD46     		mov	sp, r7
 1926 0044 80BC     		pop	{r7}
 1927 0046 7047     		bx	lr
 1928              		.cfi_endproc
 1929              	.LFE123:
 1931              		.section	.text.PWMSP003_StartTimer,"ax",%progbits
 1932              		.align	2
 1933              		.global	PWMSP003_StartTimer
 1934              		.thumb
 1935              		.thumb_func
 1937              	PWMSP003_StartTimer:
 1938              	.LFB124:
 769:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 770:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 771:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function starts the timer
 772:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 773:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_StartTimer(const PWMSP003_HandleType * HandlePtr)
 774:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1939              		.loc 1 774 0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 16
 1942              		@ frame_needed = 1, uses_anonymous_args = 0
 1943              		@ link register save eliminated.
 1944 0000 80B4     		push	{r7}
 1945              	.LCFI36:
 1946              		.cfi_def_cfa_offset 4
 1947              		.cfi_offset 7, -4
 1948 0002 85B0     		sub	sp, sp, #20
 1949              	.LCFI37:
 1950              		.cfi_def_cfa_offset 24
 1951 0004 00AF     		add	r7, sp, #0
 1952              	.LCFI38:
 1953              		.cfi_def_cfa_register 7
 1954 0006 7860     		str	r0, [r7, #4]
 775:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 1955              		.loc 1 775 0
 1956 0008 4FF00103 		mov	r3, #1
 1957 000c FB60     		str	r3, [r7, #12]
 776:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 777:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 1958              		.loc 1 777 0
 1959 000e 7B68     		ldr	r3, [r7, #4]
 1960 0010 DB6D     		ldr	r3, [r3, #92]
 1961 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1962 0014 002B     		cmp	r3, #0
 1963 0016 0AD0     		beq	.L79
 778:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 779:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     SET_BIT(HandlePtr->CC4yRegsPtr->TCSET, CCU4_CC4_TCSET_TRBS_Pos);
 1964              		.loc 1 779 0
 1965 0018 7B68     		ldr	r3, [r7, #4]
 1966 001a DB69     		ldr	r3, [r3, #28]
 1967 001c 7A68     		ldr	r2, [r7, #4]
 1968 001e D269     		ldr	r2, [r2, #28]
 1969 0020 D268     		ldr	r2, [r2, #12]
 1970 0022 42F00102 		orr	r2, r2, #1
 1971 0026 DA60     		str	r2, [r3, #12]
 780:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1972              		.loc 1 780 0
 1973 0028 4FF00003 		mov	r3, #0
 1974 002c FB60     		str	r3, [r7, #12]
 1975              	.L79:
 781:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 782:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 783:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 1976              		.loc 1 783 0
 1977 002e FB68     		ldr	r3, [r7, #12]
 784:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 1978              		.loc 1 784 0
 1979 0030 1846     		mov	r0, r3
 1980 0032 07F11407 		add	r7, r7, #20
 1981 0036 BD46     		mov	sp, r7
 1982 0038 80BC     		pop	{r7}
 1983 003a 7047     		bx	lr
 1984              		.cfi_endproc
 1985              	.LFE124:
 1987              		.section	.text.PWMSP003_StopTimer,"ax",%progbits
 1988              		.align	2
 1989              		.global	PWMSP003_StopTimer
 1990              		.thumb
 1991              		.thumb_func
 1993              	PWMSP003_StopTimer:
 1994              	.LFB125:
 785:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 786:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 787:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function stops the timer of the given slice
 788:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 789:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_StopTimer(const PWMSP003_HandleType * HandlePtr)
 790:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 1995              		.loc 1 790 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 16
 1998              		@ frame_needed = 1, uses_anonymous_args = 0
 1999              		@ link register save eliminated.
 2000 0000 80B4     		push	{r7}
 2001              	.LCFI39:
 2002              		.cfi_def_cfa_offset 4
 2003              		.cfi_offset 7, -4
 2004 0002 85B0     		sub	sp, sp, #20
 2005              	.LCFI40:
 2006              		.cfi_def_cfa_offset 24
 2007 0004 00AF     		add	r7, sp, #0
 2008              	.LCFI41:
 2009              		.cfi_def_cfa_register 7
 2010 0006 7860     		str	r0, [r7, #4]
 791:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2011              		.loc 1 791 0
 2012 0008 4FF00103 		mov	r3, #1
 2013 000c FB60     		str	r3, [r7, #12]
 792:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 793:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType == PWMSP003_RUNNING)
 2014              		.loc 1 793 0
 2015 000e 7B68     		ldr	r3, [r7, #4]
 2016 0010 DB6D     		ldr	r3, [r3, #92]
 2017 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2018 0014 022B     		cmp	r3, #2
 2019 0016 0AD1     		bne	.L82
 794:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 795:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     SET_BIT(HandlePtr->CC4yRegsPtr->TCCLR, CCU4_CC4_TCCLR_TRBC_Pos);
 2020              		.loc 1 795 0
 2021 0018 7B68     		ldr	r3, [r7, #4]
 2022 001a DB69     		ldr	r3, [r3, #28]
 2023 001c 7A68     		ldr	r2, [r7, #4]
 2024 001e D269     		ldr	r2, [r2, #28]
 2025 0020 1269     		ldr	r2, [r2, #16]
 2026 0022 42F00102 		orr	r2, r2, #1
 2027 0026 1A61     		str	r2, [r3, #16]
 796:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2028              		.loc 1 796 0
 2029 0028 4FF00003 		mov	r3, #0
 2030 002c FB60     		str	r3, [r7, #12]
 2031              	.L82:
 797:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 798:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 799:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2032              		.loc 1 799 0
 2033 002e FB68     		ldr	r3, [r7, #12]
 800:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2034              		.loc 1 800 0
 2035 0030 1846     		mov	r0, r3
 2036 0032 07F11407 		add	r7, r7, #20
 2037 0036 BD46     		mov	sp, r7
 2038 0038 80BC     		pop	{r7}
 2039 003a 7047     		bx	lr
 2040              		.cfi_endproc
 2041              	.LFE125:
 2043              		.section	.text.PWMSP003_GetTimerValue,"ax",%progbits
 2044              		.align	2
 2045              		.global	PWMSP003_GetTimerValue
 2046              		.thumb
 2047              		.thumb_func
 2049              	PWMSP003_GetTimerValue:
 2050              	.LFB126:
 801:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 802:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 803:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function returns the timer registers of the given slice
 804:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 805:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetTimerValue(const PWMSP003_HandleType * HandlePtr,
 806:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                       PWMSP003_TimerRegsType* TimerRegs)
 807:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2051              		.loc 1 807 0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 16
 2054              		@ frame_needed = 1, uses_anonymous_args = 0
 2055              		@ link register save eliminated.
 2056 0000 80B4     		push	{r7}
 2057              	.LCFI42:
 2058              		.cfi_def_cfa_offset 4
 2059              		.cfi_offset 7, -4
 2060 0002 85B0     		sub	sp, sp, #20
 2061              	.LCFI43:
 2062              		.cfi_def_cfa_offset 24
 2063 0004 00AF     		add	r7, sp, #0
 2064              	.LCFI44:
 2065              		.cfi_def_cfa_register 7
 2066 0006 7860     		str	r0, [r7, #4]
 2067 0008 3960     		str	r1, [r7, #0]
 808:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2068              		.loc 1 808 0
 2069 000a 4FF00103 		mov	r3, #1
 2070 000e FB60     		str	r3, [r7, #12]
 809:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 810:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 2071              		.loc 1 810 0
 2072 0010 7B68     		ldr	r3, [r7, #4]
 2073 0012 DB6D     		ldr	r3, [r3, #92]
 2074 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2075 0016 002B     		cmp	r3, #0
 2076 0018 14D0     		beq	.L85
 811:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 812:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     TimerRegs->TimerReg = (uint32_t)RD_REG(HandlePtr->CC4yRegsPtr->TIMER,
 2077              		.loc 1 812 0
 2078 001a 7B68     		ldr	r3, [r7, #4]
 2079 001c DB69     		ldr	r3, [r3, #28]
 2080 001e 1B6F     		ldr	r3, [r3, #112]
 2081 0020 9AB2     		uxth	r2, r3
 2082 0022 3B68     		ldr	r3, [r7, #0]
 2083 0024 9A80     		strh	r2, [r3, #4]	@ movhi
 813:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         CCU4_CC4_TIMER_TVAL_Msk, CCU4_CC4_TIMER_TVAL_Pos);
 814:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 815:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     TimerRegs->CompReg = HandlePtr->CC4yRegsPtr->CRS;
 2084              		.loc 1 815 0
 2085 0026 7B68     		ldr	r3, [r7, #4]
 2086 0028 DB69     		ldr	r3, [r3, #28]
 2087 002a DB6B     		ldr	r3, [r3, #60]
 2088 002c 9AB2     		uxth	r2, r3
 2089 002e 3B68     		ldr	r3, [r7, #0]
 2090 0030 1A80     		strh	r2, [r3, #0]	@ movhi
 816:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     TimerRegs->PeriodReg = HandlePtr->CC4yRegsPtr->PRS;
 2091              		.loc 1 816 0
 2092 0032 7B68     		ldr	r3, [r7, #4]
 2093 0034 DB69     		ldr	r3, [r3, #28]
 2094 0036 5B6B     		ldr	r3, [r3, #52]
 2095 0038 9AB2     		uxth	r2, r3
 2096 003a 3B68     		ldr	r3, [r7, #0]
 2097 003c 5A80     		strh	r2, [r3, #2]	@ movhi
 817:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 818:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2098              		.loc 1 818 0
 2099 003e 4FF00003 		mov	r3, #0
 2100 0042 FB60     		str	r3, [r7, #12]
 2101              	.L85:
 819:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 820:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2102              		.loc 1 820 0
 2103 0044 FB68     		ldr	r3, [r7, #12]
 821:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2104              		.loc 1 821 0
 2105 0046 1846     		mov	r0, r3
 2106 0048 07F11407 		add	r7, r7, #20
 2107 004c BD46     		mov	sp, r7
 2108 004e 80BC     		pop	{r7}
 2109 0050 7047     		bx	lr
 2110              		.cfi_endproc
 2111              	.LFE126:
 2113 0052 00BF     		.section	.text.PWMSP003_GetTimerStatus,"ax",%progbits
 2114              		.align	2
 2115              		.global	PWMSP003_GetTimerStatus
 2116              		.thumb
 2117              		.thumb_func
 2119              	PWMSP003_GetTimerStatus:
 2120              	.LFB127:
 822:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 823:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 824:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function returns the timer status - Running or Idle
 825:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 826:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetTimerStatus(const PWMSP003_HandleType * HandlePtr,
 827:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                  uint32_t* TimerStatus)
 828:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2121              		.loc 1 828 0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 16
 2124              		@ frame_needed = 1, uses_anonymous_args = 0
 2125              		@ link register save eliminated.
 2126 0000 80B4     		push	{r7}
 2127              	.LCFI45:
 2128              		.cfi_def_cfa_offset 4
 2129              		.cfi_offset 7, -4
 2130 0002 85B0     		sub	sp, sp, #20
 2131              	.LCFI46:
 2132              		.cfi_def_cfa_offset 24
 2133 0004 00AF     		add	r7, sp, #0
 2134              	.LCFI47:
 2135              		.cfi_def_cfa_register 7
 2136 0006 7860     		str	r0, [r7, #4]
 2137 0008 3960     		str	r1, [r7, #0]
 829:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2138              		.loc 1 829 0
 2139 000a 4FF00103 		mov	r3, #1
 2140 000e FB60     		str	r3, [r7, #12]
 830:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 831:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 2141              		.loc 1 831 0
 2142 0010 7B68     		ldr	r3, [r7, #4]
 2143 0012 DB6D     		ldr	r3, [r3, #92]
 2144 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2145 0016 002B     		cmp	r3, #0
 2146 0018 09D0     		beq	.L88
 832:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 833:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *TimerStatus = (uint32_t) RD_REG(HandlePtr->CC4yRegsPtr->TCST,
 2147              		.loc 1 833 0
 2148 001a 7B68     		ldr	r3, [r7, #4]
 2149 001c DB69     		ldr	r3, [r3, #28]
 2150 001e 9B68     		ldr	r3, [r3, #8]
 2151 0020 03F00102 		and	r2, r3, #1
 2152 0024 3B68     		ldr	r3, [r7, #0]
 2153 0026 1A60     		str	r2, [r3, #0]
 834:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                               CCU4_CC4_TCST_TRB_Msk, CCU4_CC4_TCST_TRB_Pos);
 835:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 836:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2154              		.loc 1 836 0
 2155 0028 4FF00003 		mov	r3, #0
 2156 002c FB60     		str	r3, [r7, #12]
 2157              	.L88:
 837:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 838:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 839:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2158              		.loc 1 839 0
 2159 002e FB68     		ldr	r3, [r7, #12]
 840:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2160              		.loc 1 840 0
 2161 0030 1846     		mov	r0, r3
 2162 0032 07F11407 		add	r7, r7, #20
 2163 0036 BD46     		mov	sp, r7
 2164 0038 80BC     		pop	{r7}
 2165 003a 7047     		bx	lr
 2166              		.cfi_endproc
 2167              	.LFE127:
 2169              		.section	.text.PWMSP003_GetCompareMatchStatus,"ax",%progbits
 2170              		.align	2
 2171              		.global	PWMSP003_GetCompareMatchStatus
 2172              		.thumb
 2173              		.thumb_func
 2175              	PWMSP003_GetCompareMatchStatus:
 2176              	.LFB128:
 841:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 842:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 843:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function reads the compare match status (ST bit) of the given slice.
 844:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 845:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetCompareMatchStatus(const PWMSP003_HandleType * HandlePtr,
 846:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                         uint8_t * CompareMatchStatus)
 847:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2177              		.loc 1 847 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 16
 2180              		@ frame_needed = 1, uses_anonymous_args = 0
 2181              		@ link register save eliminated.
 2182 0000 80B4     		push	{r7}
 2183              	.LCFI48:
 2184              		.cfi_def_cfa_offset 4
 2185              		.cfi_offset 7, -4
 2186 0002 85B0     		sub	sp, sp, #20
 2187              	.LCFI49:
 2188              		.cfi_def_cfa_offset 24
 2189 0004 00AF     		add	r7, sp, #0
 2190              	.LCFI50:
 2191              		.cfi_def_cfa_register 7
 2192 0006 7860     		str	r0, [r7, #4]
 2193 0008 3960     		str	r1, [r7, #0]
 848:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2194              		.loc 1 848 0
 2195 000a 4FF00103 		mov	r3, #1
 2196 000e FB60     		str	r3, [r7, #12]
 849:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 850:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 2197              		.loc 1 850 0
 2198 0010 7B68     		ldr	r3, [r7, #4]
 2199 0012 DB6D     		ldr	r3, [r3, #92]
 2200 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2201 0016 002B     		cmp	r3, #0
 2202 0018 17D0     		beq	.L91
 851:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 852:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *CompareMatchStatus = (uint32_t) RD_REG(HandlePtr->CC4yKernRegsPtr->GCST,\
 2203              		.loc 1 852 0
 2204 001a 7B68     		ldr	r3, [r7, #4]
 2205 001c 9B69     		ldr	r3, [r3, #24]
 2206 001e 9A69     		ldr	r2, [r3, #24]
 2207 0020 7B68     		ldr	r3, [r7, #4]
 2208 0022 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2209 0026 4FF48031 		mov	r1, #65536
 2210 002a 01FA03F3 		lsl	r3, r1, r3
 2211 002e 1A40     		ands	r2, r2, r3
 2212 0030 7B68     		ldr	r3, [r7, #4]
 2213 0032 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2214 0036 03F11003 		add	r3, r3, #16
 2215 003a 22FA03F3 		lsr	r3, r2, r3
 2216 003e DAB2     		uxtb	r2, r3
 2217 0040 3B68     		ldr	r3, [r7, #0]
 2218 0042 1A70     		strb	r2, [r3, #0]
 853:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                           (CCU4_GCST_CC40ST_Msk << (uint32_t)HandlePtr->Slice),\
 854:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                           (CCU4_GCST_CC40ST_Pos + (uint32_t)HandlePtr->Slice));
 855:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 856:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2219              		.loc 1 856 0
 2220 0044 4FF00003 		mov	r3, #0
 2221 0048 FB60     		str	r3, [r7, #12]
 2222              	.L91:
 857:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 858:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2223              		.loc 1 858 0
 2224 004a FB68     		ldr	r3, [r7, #12]
 859:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2225              		.loc 1 859 0
 2226 004c 1846     		mov	r0, r3
 2227 004e 07F11407 		add	r7, r7, #20
 2228 0052 BD46     		mov	sp, r7
 2229 0054 80BC     		pop	{r7}
 2230 0056 7047     		bx	lr
 2231              		.cfi_endproc
 2232              	.LFE128:
 2234              		.section	.text.PWMSP003_UpdatePeriod,"ax",%progbits
 2235              		.align	2
 2236              		.global	PWMSP003_UpdatePeriod
 2237              		.thumb
 2238              		.thumb_func
 2240              	PWMSP003_UpdatePeriod:
 2241              	.LFB129:
 860:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 861:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 862:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function changes the PWM frequency.
 863:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * Input parameter is the period register value.
 864:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 865:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_UpdatePeriod(const PWMSP003_HandleType * HandlePtr,
 866:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                 uint32_t Period, uint8_t Recall)
 867:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2242              		.loc 1 867 0
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 24
 2245              		@ frame_needed = 1, uses_anonymous_args = 0
 2246              		@ link register save eliminated.
 2247 0000 80B4     		push	{r7}
 2248              	.LCFI51:
 2249              		.cfi_def_cfa_offset 4
 2250              		.cfi_offset 7, -4
 2251 0002 87B0     		sub	sp, sp, #28
 2252              	.LCFI52:
 2253              		.cfi_def_cfa_offset 32
 2254 0004 00AF     		add	r7, sp, #0
 2255              	.LCFI53:
 2256              		.cfi_def_cfa_register 7
 2257 0006 F860     		str	r0, [r7, #12]
 2258 0008 B960     		str	r1, [r7, #8]
 2259 000a 1346     		mov	r3, r2
 2260 000c FB71     		strb	r3, [r7, #7]
 868:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2261              		.loc 1 868 0
 2262 000e 4FF00103 		mov	r3, #1
 2263 0012 7B61     		str	r3, [r7, #20]
 869:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 870:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 871:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED))
 2264              		.loc 1 871 0
 2265 0014 FB68     		ldr	r3, [r7, #12]
 2266 0016 DB6D     		ldr	r3, [r3, #92]
 2267 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2268 001a 002B     		cmp	r3, #0
 2269 001c 42D0     		beq	.L94
 872:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 873:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(Recall != TRUE)
 2270              		.loc 1 873 0
 2271 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2272 0020 012B     		cmp	r3, #1
 2273 0022 2DD0     		beq	.L95
 874:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 875:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(Period == (uint32_t)0)
 2274              		.loc 1 875 0
 2275 0024 BB68     		ldr	r3, [r7, #8]
 2276 0026 002B     		cmp	r3, #0
 2277 0028 03D1     		bne	.L96
 876:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 877:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         Status = (uint32_t)PWMSP003_INVALID_PARAM_ERROR;
 2278              		.loc 1 877 0
 2279 002a 4FF00203 		mov	r3, #2
 2280 002e 7B61     		str	r3, [r7, #20]
 2281 0030 38E0     		b	.L94
 2282              	.L96:
 878:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 879:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 880:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 881:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         if(Period > (uint32_t)HandlePtr->kMaxPeriodVal)
 2283              		.loc 1 881 0
 2284 0032 FB68     		ldr	r3, [r7, #12]
 2285 0034 DA6C     		ldr	r2, [r3, #76]
 2286 0036 BB68     		ldr	r3, [r7, #8]
 2287 0038 9A42     		cmp	r2, r3
 2288 003a 03D2     		bcs	.L97
 882:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 883:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Status = (uint32_t)PWMSP003_INVALID_PARAM_ERROR;
 2289              		.loc 1 883 0
 2290 003c 4FF00203 		mov	r3, #2
 2291 0040 7B61     		str	r3, [r7, #20]
 2292 0042 2FE0     		b	.L94
 2293              	.L97:
 884:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 885:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         else
 886:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         {
 887:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 888:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           HandlePtr->CC4yRegsPtr->PRS = (Period & 0xFFFFU);
 2294              		.loc 1 888 0
 2295 0044 FB68     		ldr	r3, [r7, #12]
 2296 0046 DA69     		ldr	r2, [r3, #28]
 2297 0048 BB68     		ldr	r3, [r7, #8]
 2298 004a 4FEA0343 		lsl	r3, r3, #16
 2299 004e 4FEA1343 		lsr	r3, r3, #16
 2300 0052 5363     		str	r3, [r2, #52]
 889:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 890:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           /*Request shadow transfer for the slice*/
 891:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp1 = (uint32_t)CCU4_GCSS_S0SE_Pos +\
 892:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                   ((uint32_t)PWMSP003_NO_OF_SLICES*(uint32_t)HandlePtr->Slice);
 2301              		.loc 1 892 0
 2302 0054 FB68     		ldr	r3, [r7, #12]
 2303 0056 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 891:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Temp1 = (uint32_t)CCU4_GCSS_S0SE_Pos +\
 2304              		.loc 1 891 0
 2305 005a 4FEA8303 		lsl	r3, r3, #2
 2306 005e 3B61     		str	r3, [r7, #16]
 893:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 894:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           HandlePtr->CC4yKernRegsPtr->GCSS |=    ((uint32_t)0x01 << Temp1);
 2307              		.loc 1 894 0
 2308 0060 FB68     		ldr	r3, [r7, #12]
 2309 0062 9B69     		ldr	r3, [r3, #24]
 2310 0064 FA68     		ldr	r2, [r7, #12]
 2311 0066 9269     		ldr	r2, [r2, #24]
 2312 0068 1169     		ldr	r1, [r2, #16]
 2313 006a 3A69     		ldr	r2, [r7, #16]
 2314 006c 4FF00100 		mov	r0, #1
 2315 0070 00FA02F2 		lsl	r2, r0, r2
 2316 0074 0A43     		orrs	r2, r2, r1
 2317 0076 1A61     		str	r2, [r3, #16]
 895:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 896:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           Status = (uint32_t)DAVEApp_SUCCESS;
 2318              		.loc 1 896 0
 2319 0078 4FF00003 		mov	r3, #0
 2320 007c 7B61     		str	r3, [r7, #20]
 2321 007e 11E0     		b	.L94
 2322              	.L95:
 897:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         }
 898:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 899:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 900:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 901:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
 902:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 903:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /* Cancel any pending shadow transfer for the slice */
 904:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = (uint32_t)CCU4_GCSC_S0SC_Pos +\
 905:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               ((uint32_t)PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2323              		.loc 1 905 0
 2324 0080 FB68     		ldr	r3, [r7, #12]
 2325 0082 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 904:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = (uint32_t)CCU4_GCSC_S0SC_Pos +\
 2326              		.loc 1 904 0
 2327 0086 4FEA8303 		lsl	r3, r3, #2
 2328 008a 3B61     		str	r3, [r7, #16]
 906:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 907:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GCSC |=  ((uint32_t)0x01 << Temp1);
 2329              		.loc 1 907 0
 2330 008c FB68     		ldr	r3, [r7, #12]
 2331 008e 9B69     		ldr	r3, [r3, #24]
 2332 0090 FA68     		ldr	r2, [r7, #12]
 2333 0092 9269     		ldr	r2, [r2, #24]
 2334 0094 5169     		ldr	r1, [r2, #20]
 2335 0096 3A69     		ldr	r2, [r7, #16]
 2336 0098 4FF00100 		mov	r0, #1
 2337 009c 00FA02F2 		lsl	r2, r0, r2
 2338 00a0 0A43     		orrs	r2, r2, r1
 2339 00a2 5A61     		str	r2, [r3, #20]
 2340              	.L94:
 908:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 909:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 910:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2341              		.loc 1 910 0
 2342 00a4 7B69     		ldr	r3, [r7, #20]
 911:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2343              		.loc 1 911 0
 2344 00a6 1846     		mov	r0, r3
 2345 00a8 07F11C07 		add	r7, r7, #28
 2346 00ac BD46     		mov	sp, r7
 2347 00ae 80BC     		pop	{r7}
 2348 00b0 7047     		bx	lr
 2349              		.cfi_endproc
 2350              	.LFE129:
 2352 00b2 00BF     		.section	.text.PWMSP003_UpdateCompare,"ax",%progbits
 2353              		.align	2
 2354              		.global	PWMSP003_UpdateCompare
 2355              		.thumb
 2356              		.thumb_func
 2358              	PWMSP003_UpdateCompare:
 2359              	.LFB130:
 912:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 913:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 914:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function changes the compare register value.
 915:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 916:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_UpdateCompare(const PWMSP003_HandleType * HandlePtr,
 917:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                 uint32_t CompareVal, uint8_t Recall)
 918:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2360              		.loc 1 918 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 24
 2363              		@ frame_needed = 1, uses_anonymous_args = 0
 2364              		@ link register save eliminated.
 2365 0000 80B4     		push	{r7}
 2366              	.LCFI54:
 2367              		.cfi_def_cfa_offset 4
 2368              		.cfi_offset 7, -4
 2369 0002 87B0     		sub	sp, sp, #28
 2370              	.LCFI55:
 2371              		.cfi_def_cfa_offset 32
 2372 0004 00AF     		add	r7, sp, #0
 2373              	.LCFI56:
 2374              		.cfi_def_cfa_register 7
 2375 0006 F860     		str	r0, [r7, #12]
 2376 0008 B960     		str	r1, [r7, #8]
 2377 000a 1346     		mov	r3, r2
 2378 000c FB71     		strb	r3, [r7, #7]
 919:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2379              		.loc 1 919 0
 2380 000e 4FF00103 		mov	r3, #1
 2381 0012 7B61     		str	r3, [r7, #20]
 920:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 921:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 922:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED))
 2382              		.loc 1 922 0
 2383 0014 FB68     		ldr	r3, [r7, #12]
 2384 0016 DB6D     		ldr	r3, [r3, #92]
 2385 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2386 001a 002B     		cmp	r3, #0
 2387 001c 32D0     		beq	.L100
 923:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 924:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(Recall != TRUE)
 2388              		.loc 1 924 0
 2389 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2390 0020 012B     		cmp	r3, #1
 2391 0022 1DD0     		beq	.L101
 925:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 926:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yRegsPtr->CRS = (CompareVal & 0xFFFFU);
 2392              		.loc 1 926 0
 2393 0024 FB68     		ldr	r3, [r7, #12]
 2394 0026 DA69     		ldr	r2, [r3, #28]
 2395 0028 BB68     		ldr	r3, [r7, #8]
 2396 002a 4FEA0343 		lsl	r3, r3, #16
 2397 002e 4FEA1343 		lsr	r3, r3, #16
 2398 0032 D363     		str	r3, [r2, #60]
 927:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 928:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /*Request shadow transfer for the slice*/
 929:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = CCU4_GCSS_S0SE_Pos +\
 930:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2399              		.loc 1 930 0
 2400 0034 FB68     		ldr	r3, [r7, #12]
 2401 0036 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 929:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = CCU4_GCSS_S0SE_Pos +\
 2402              		.loc 1 929 0
 2403 003a 4FEA8303 		lsl	r3, r3, #2
 2404 003e 3B61     		str	r3, [r7, #16]
 931:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 932:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GCSS |=    ((uint32_t)0x01 << Temp1);
 2405              		.loc 1 932 0
 2406 0040 FB68     		ldr	r3, [r7, #12]
 2407 0042 9B69     		ldr	r3, [r3, #24]
 2408 0044 FA68     		ldr	r2, [r7, #12]
 2409 0046 9269     		ldr	r2, [r2, #24]
 2410 0048 1169     		ldr	r1, [r2, #16]
 2411 004a 3A69     		ldr	r2, [r7, #16]
 2412 004c 4FF00100 		mov	r0, #1
 2413 0050 00FA02F2 		lsl	r2, r0, r2
 2414 0054 0A43     		orrs	r2, r2, r1
 2415 0056 1A61     		str	r2, [r3, #16]
 933:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 934:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2416              		.loc 1 934 0
 2417 0058 4FF00003 		mov	r3, #0
 2418 005c 7B61     		str	r3, [r7, #20]
 2419 005e 11E0     		b	.L100
 2420              	.L101:
 935:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 936:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 937:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
 938:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 939:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /* Cancel any pending shadow transfer of the slice */
 940:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = CCU4_GCSC_S0SC_Pos +\
 941:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                       (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2421              		.loc 1 941 0
 2422 0060 FB68     		ldr	r3, [r7, #12]
 2423 0062 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 940:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = CCU4_GCSC_S0SC_Pos +\
 2424              		.loc 1 940 0
 2425 0066 4FEA8303 		lsl	r3, r3, #2
 2426 006a 3B61     		str	r3, [r7, #16]
 942:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 943:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GCSC |=  ((uint32_t)0x01 << Temp1);
 2427              		.loc 1 943 0
 2428 006c FB68     		ldr	r3, [r7, #12]
 2429 006e 9B69     		ldr	r3, [r3, #24]
 2430 0070 FA68     		ldr	r2, [r7, #12]
 2431 0072 9269     		ldr	r2, [r2, #24]
 2432 0074 5169     		ldr	r1, [r2, #20]
 2433 0076 3A69     		ldr	r2, [r7, #16]
 2434 0078 4FF00100 		mov	r0, #1
 2435 007c 00FA02F2 		lsl	r2, r0, r2
 2436 0080 0A43     		orrs	r2, r2, r1
 2437 0082 5A61     		str	r2, [r3, #20]
 2438              	.L100:
 944:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 945:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 946:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 947:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2439              		.loc 1 947 0
 2440 0084 7B69     		ldr	r3, [r7, #20]
 948:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2441              		.loc 1 948 0
 2442 0086 1846     		mov	r0, r3
 2443 0088 07F11C07 		add	r7, r7, #28
 2444 008c BD46     		mov	sp, r7
 2445 008e 80BC     		pop	{r7}
 2446 0090 7047     		bx	lr
 2447              		.cfi_endproc
 2448              	.LFE130:
 2450 0092 00BF     		.section	.text.PWMSP003_SetDutyCycle,"ax",%progbits
 2451              		.align	2
 2452              		.global	PWMSP003_SetDutyCycle
 2453              		.thumb
 2454              		.thumb_func
 2456              	PWMSP003_SetDutyCycle:
 2457              	.LFB131:
 949:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 950:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 951:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function is used to change the duty cycle of the PWM waveform
 952:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 953:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_SetDutyCycle(const PWMSP003_HandleType* HandlePtr,
 954:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                float Duty)
 955:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2458              		.loc 1 955 0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 16
 2461              		@ frame_needed = 1, uses_anonymous_args = 0
 2462 0000 80B5     		push	{r7, lr}
 2463              	.LCFI57:
 2464              		.cfi_def_cfa_offset 8
 2465              		.cfi_offset 7, -8
 2466              		.cfi_offset 14, -4
 2467 0002 84B0     		sub	sp, sp, #16
 2468              	.LCFI58:
 2469              		.cfi_def_cfa_offset 24
 2470 0004 00AF     		add	r7, sp, #0
 2471              	.LCFI59:
 2472              		.cfi_def_cfa_register 7
 2473 0006 7860     		str	r0, [r7, #4]
 2474 0008 3960     		str	r1, [r7, #0]	@ float
 956:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2475              		.loc 1 956 0
 2476 000a 4FF00103 		mov	r3, #1
 2477 000e FB60     		str	r3, [r7, #12]
 957:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 958:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ( HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 2478              		.loc 1 958 0
 2479 0010 7B68     		ldr	r3, [r7, #4]
 2480 0012 DB6D     		ldr	r3, [r3, #92]
 2481 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2482 0016 002B     		cmp	r3, #0
 2483 0018 1BD0     		beq	.L104
 959:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 960:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if((Duty > (float)100) || (Duty < (float)0))
 2484              		.loc 1 960 0
 2485 001a 97ED007A 		flds	s14, [r7, #0]
 2486 001e DFED107A 		flds	s15, .L110
 2487 0022 B4EEE77A 		fcmpes	s14, s15
 2488 0026 F1EE10FA 		fmstat
 2489 002a 06DC     		bgt	.L105
 2490              		.loc 1 960 0 is_stmt 0 discriminator 1
 2491 002c D7ED007A 		flds	s15, [r7, #0]
 2492 0030 F5EEC07A 		fcmpezs	s15
 2493 0034 F1EE10FA 		fmstat
 2494 0038 03D5     		bpl	.L109
 2495              	.L105:
 961:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 962:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)PWMSP003_INVALID_PARAM_ERROR;
 2496              		.loc 1 962 0 is_stmt 1
 2497 003a 4FF00203 		mov	r3, #2
 2498 003e FB60     		str	r3, [r7, #12]
 2499 0040 07E0     		b	.L104
 2500              	.L109:
 963:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 964:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
 965:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 966:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /* Call the function as per configured mode */
 967:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->SetDutyFuncPtr((const void*)HandlePtr, Duty);
 2501              		.loc 1 967 0
 2502 0042 7B68     		ldr	r3, [r7, #4]
 2503 0044 5B6E     		ldr	r3, [r3, #100]
 2504 0046 7868     		ldr	r0, [r7, #4]
 2505 0048 3968     		ldr	r1, [r7, #0]	@ float
 2506 004a 9847     		blx	r3
 968:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2507              		.loc 1 968 0
 2508 004c 4FF00003 		mov	r3, #0
 2509 0050 FB60     		str	r3, [r7, #12]
 2510              	.L104:
 969:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
 970:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
 971:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 972:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return (Status);
 2511              		.loc 1 972 0
 2512 0052 FB68     		ldr	r3, [r7, #12]
 973:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2513              		.loc 1 973 0
 2514 0054 1846     		mov	r0, r3
 2515 0056 07F11007 		add	r7, r7, #16
 2516 005a BD46     		mov	sp, r7
 2517 005c 80BD     		pop	{r7, pc}
 2518              	.L111:
 2519 005e 00BF     		.align	2
 2520              	.L110:
 2521 0060 0000C842 		.word	1120403456
 2522              		.cfi_endproc
 2523              	.LFE131:
 2525              		.section	.text.PWMSP003_UpdateFloatingPrescaler,"ax",%progbits
 2526              		.align	2
 2527              		.global	PWMSP003_UpdateFloatingPrescaler
 2528              		.thumb
 2529              		.thumb_func
 2531              	PWMSP003_UpdateFloatingPrescaler:
 2532              	.LFB132:
 974:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 975:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
 976:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function changes the floating prescaler register value
 977:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
 978:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_UpdateFloatingPrescaler(const PWMSP003_HandleType * HandlePtr,
 979:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                           uint16_t FloatingPS, uint8_t Recall)
 980:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2533              		.loc 1 980 0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 16
 2536              		@ frame_needed = 1, uses_anonymous_args = 0
 2537              		@ link register save eliminated.
 2538 0000 80B4     		push	{r7}
 2539              	.LCFI60:
 2540              		.cfi_def_cfa_offset 4
 2541              		.cfi_offset 7, -4
 2542 0002 85B0     		sub	sp, sp, #20
 2543              	.LCFI61:
 2544              		.cfi_def_cfa_offset 24
 2545 0004 00AF     		add	r7, sp, #0
 2546              	.LCFI62:
 2547              		.cfi_def_cfa_register 7
 2548 0006 7860     		str	r0, [r7, #4]
 2549 0008 1346     		mov	r3, r2
 2550 000a 0A46     		mov	r2, r1	@ movhi
 2551 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 2552 000e 7B70     		strb	r3, [r7, #1]
 981:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2553              		.loc 1 981 0
 2554 0010 4FF00103 		mov	r3, #1
 2555 0014 FB60     		str	r3, [r7, #12]
 982:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
 983:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 984:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED))
 2556              		.loc 1 984 0
 2557 0016 7B68     		ldr	r3, [r7, #4]
 2558 0018 DB6D     		ldr	r3, [r3, #92]
 2559 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2560 001c 002B     		cmp	r3, #0
 2561 001e 3BD0     		beq	.L113
 985:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
 986:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(Recall != TRUE)
 2562              		.loc 1 986 0
 2563 0020 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2564 0022 012B     		cmp	r3, #1
 2565 0024 24D0     		beq	.L114
 987:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
 988:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       if(FloatingPS > (uint16_t)0xFU)
 2566              		.loc 1 988 0
 2567 0026 7B88     		ldrh	r3, [r7, #2]
 2568 0028 0F2B     		cmp	r3, #15
 2569 002a 03D9     		bls	.L115
 989:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 990:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         Status = (uint32_t)PWMSP003_INVALID_PARAM_ERROR;
 2570              		.loc 1 990 0
 2571 002c 4FF00203 		mov	r3, #2
 2572 0030 FB60     		str	r3, [r7, #12]
 2573 0032 31E0     		b	.L113
 2574              	.L115:
 991:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
 992:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       else
 993:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       {
 994:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         HandlePtr->CC4yRegsPtr->FPCS = (FloatingPS & 0xFU);
 2575              		.loc 1 994 0
 2576 0034 7B68     		ldr	r3, [r7, #4]
 2577 0036 DB69     		ldr	r3, [r3, #28]
 2578 0038 7A88     		ldrh	r2, [r7, #2]
 2579 003a 02F00F02 		and	r2, r2, #15
 2580 003e DA62     		str	r2, [r3, #44]
 995:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
 996:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         /* Request shadow transfer for the slice */
 997:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         Temp1 = (uint32_t)CCU4_GCSS_S0PSE_Pos +\
 998:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                     (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2581              		.loc 1 998 0
 2582 0040 7B68     		ldr	r3, [r7, #4]
 2583 0042 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2584 0046 4FEA8303 		lsl	r3, r3, #2
 997:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         Temp1 = (uint32_t)CCU4_GCSS_S0PSE_Pos +\
 2585              		.loc 1 997 0
 2586 004a 03F10203 		add	r3, r3, #2
 2587 004e BB60     		str	r3, [r7, #8]
 999:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1000:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         HandlePtr->CC4yKernRegsPtr->GCSS |=    ((uint32_t)0x01 << Temp1);
 2588              		.loc 1 1000 0
 2589 0050 7B68     		ldr	r3, [r7, #4]
 2590 0052 9B69     		ldr	r3, [r3, #24]
 2591 0054 7A68     		ldr	r2, [r7, #4]
 2592 0056 9269     		ldr	r2, [r2, #24]
 2593 0058 1169     		ldr	r1, [r2, #16]
 2594 005a BA68     		ldr	r2, [r7, #8]
 2595 005c 4FF00100 		mov	r0, #1
 2596 0060 00FA02F2 		lsl	r2, r0, r2
 2597 0064 0A43     		orrs	r2, r2, r1
 2598 0066 1A61     		str	r2, [r3, #16]
1001:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1002:../Dave/Generated/src/PWMSP003/PWMSP003.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 2599              		.loc 1 1002 0
 2600 0068 4FF00003 		mov	r3, #0
 2601 006c FB60     		str	r3, [r7, #12]
 2602 006e 13E0     		b	.L113
 2603              	.L114:
1003:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       }
1004:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1005:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1006:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
1007:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1008:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /* Cancel any pending shadow transfer for the slice */
1009:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = (uint32_t)CCU4_GCSC_S0PSC_Pos +\
1010:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                   (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2604              		.loc 1 1010 0
 2605 0070 7B68     		ldr	r3, [r7, #4]
 2606 0072 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2607 0076 4FEA8303 		lsl	r3, r3, #2
1009:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = (uint32_t)CCU4_GCSC_S0PSC_Pos +\
 2608              		.loc 1 1009 0
 2609 007a 03F10203 		add	r3, r3, #2
 2610 007e BB60     		str	r3, [r7, #8]
1011:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1012:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GCSC |=  ((uint32_t)0x01 << Temp1);
 2611              		.loc 1 1012 0
 2612 0080 7B68     		ldr	r3, [r7, #4]
 2613 0082 9B69     		ldr	r3, [r3, #24]
 2614 0084 7A68     		ldr	r2, [r7, #4]
 2615 0086 9269     		ldr	r2, [r2, #24]
 2616 0088 5169     		ldr	r1, [r2, #20]
 2617 008a BA68     		ldr	r2, [r7, #8]
 2618 008c 4FF00100 		mov	r0, #1
 2619 0090 00FA02F2 		lsl	r2, r0, r2
 2620 0094 0A43     		orrs	r2, r2, r1
 2621 0096 5A61     		str	r2, [r3, #20]
 2622              	.L113:
1013:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1014:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1015:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1016:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2623              		.loc 1 1016 0
 2624 0098 FB68     		ldr	r3, [r7, #12]
1017:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2625              		.loc 1 1017 0
 2626 009a 1846     		mov	r0, r3
 2627 009c 07F11407 		add	r7, r7, #20
 2628 00a0 BD46     		mov	sp, r7
 2629 00a2 80BC     		pop	{r7}
 2630 00a4 7047     		bx	lr
 2631              		.cfi_endproc
 2632              	.LFE132:
 2634 00a6 00BF     		.section	.text.PWMSP003_UpdateDither,"ax",%progbits
 2635              		.align	2
 2636              		.global	PWMSP003_UpdateDither
 2637              		.thumb
 2638              		.thumb_func
 2640              	PWMSP003_UpdateDither:
 2641              	.LFB133:
1018:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1019:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1020:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function changes the dither register value.
1021:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1022:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_UpdateDither(const PWMSP003_HandleType * HandlePtr,
1023:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                uint32_t DitherVal, uint8_t Recall)
1024:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2642              		.loc 1 1024 0
 2643              		.cfi_startproc
 2644              		@ args = 0, pretend = 0, frame = 24
 2645              		@ frame_needed = 1, uses_anonymous_args = 0
 2646              		@ link register save eliminated.
 2647 0000 80B4     		push	{r7}
 2648              	.LCFI63:
 2649              		.cfi_def_cfa_offset 4
 2650              		.cfi_offset 7, -4
 2651 0002 87B0     		sub	sp, sp, #28
 2652              	.LCFI64:
 2653              		.cfi_def_cfa_offset 32
 2654 0004 00AF     		add	r7, sp, #0
 2655              	.LCFI65:
 2656              		.cfi_def_cfa_register 7
 2657 0006 F860     		str	r0, [r7, #12]
 2658 0008 B960     		str	r1, [r7, #8]
 2659 000a 1346     		mov	r3, r2
 2660 000c FB71     		strb	r3, [r7, #7]
1025:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2661              		.loc 1 1025 0
 2662 000e 4FF00103 		mov	r3, #1
 2663 0012 7B61     		str	r3, [r7, #20]
1026:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   uint32_t Temp1;
1027:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1028:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED))
 2664              		.loc 1 1028 0
 2665 0014 FB68     		ldr	r3, [r7, #12]
 2666 0016 DB6D     		ldr	r3, [r3, #92]
 2667 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2668 001a 002B     		cmp	r3, #0
 2669 001c 34D0     		beq	.L118
1029:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1030:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(Recall != TRUE)
 2670              		.loc 1 1030 0
 2671 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2672 0020 012B     		cmp	r3, #1
 2673 0022 1DD0     		beq	.L119
1031:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1032:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yRegsPtr->DITS = (DitherVal & 0xFU);
 2674              		.loc 1 1032 0
 2675 0024 FB68     		ldr	r3, [r7, #12]
 2676 0026 DB69     		ldr	r3, [r3, #28]
 2677 0028 BA68     		ldr	r2, [r7, #8]
 2678 002a 02F00F02 		and	r2, r2, #15
 2679 002e 1A62     		str	r2, [r3, #32]
1033:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1034:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /*Request shadow transfer for the slice*/
1035:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = CCU4_GCSS_S0DSE_Pos +\
1036:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                   (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2680              		.loc 1 1036 0
 2681 0030 FB68     		ldr	r3, [r7, #12]
 2682 0032 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2683 0036 4FEA8303 		lsl	r3, r3, #2
1035:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = CCU4_GCSS_S0DSE_Pos +\
 2684              		.loc 1 1035 0
 2685 003a 03F10103 		add	r3, r3, #1
 2686 003e 3B61     		str	r3, [r7, #16]
1037:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1038:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GCSS |=    ((uint32_t)0x01 << Temp1);
 2687              		.loc 1 1038 0
 2688 0040 FB68     		ldr	r3, [r7, #12]
 2689 0042 9B69     		ldr	r3, [r3, #24]
 2690 0044 FA68     		ldr	r2, [r7, #12]
 2691 0046 9269     		ldr	r2, [r2, #24]
 2692 0048 1169     		ldr	r1, [r2, #16]
 2693 004a 3A69     		ldr	r2, [r7, #16]
 2694 004c 4FF00100 		mov	r0, #1
 2695 0050 00FA02F2 		lsl	r2, r0, r2
 2696 0054 0A43     		orrs	r2, r2, r1
 2697 0056 1A61     		str	r2, [r3, #16]
1039:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1040:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2698              		.loc 1 1040 0
 2699 0058 4FF00003 		mov	r3, #0
 2700 005c 7B61     		str	r3, [r7, #20]
 2701 005e 13E0     		b	.L118
 2702              	.L119:
1041:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1042:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1043:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
1044:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1045:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       /* Cancel any pending shadow transfer for the slice */
1046:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = (uint32_t)CCU4_GCSC_S0DSC_Pos +\
1047:../Dave/Generated/src/PWMSP003/PWMSP003.c ****               (PWMSP003_NO_OF_SLICES * (uint32_t)HandlePtr->Slice);
 2703              		.loc 1 1047 0
 2704 0060 FB68     		ldr	r3, [r7, #12]
 2705 0062 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2706 0066 4FEA8303 		lsl	r3, r3, #2
1046:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Temp1 = (uint32_t)CCU4_GCSC_S0DSC_Pos +\
 2707              		.loc 1 1046 0
 2708 006a 03F10103 		add	r3, r3, #1
 2709 006e 3B61     		str	r3, [r7, #16]
1048:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1049:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       HandlePtr->CC4yKernRegsPtr->GCSC |=  ((uint32_t)0x01 << Temp1);
 2710              		.loc 1 1049 0
 2711 0070 FB68     		ldr	r3, [r7, #12]
 2712 0072 9B69     		ldr	r3, [r3, #24]
 2713 0074 FA68     		ldr	r2, [r7, #12]
 2714 0076 9269     		ldr	r2, [r2, #24]
 2715 0078 5169     		ldr	r1, [r2, #20]
 2716 007a 3A69     		ldr	r2, [r7, #16]
 2717 007c 4FF00100 		mov	r0, #1
 2718 0080 00FA02F2 		lsl	r2, r0, r2
 2719 0084 0A43     		orrs	r2, r2, r1
 2720 0086 5A61     		str	r2, [r3, #20]
 2721              	.L118:
1050:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1051:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1052:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1053:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2722              		.loc 1 1053 0
 2723 0088 7B69     		ldr	r3, [r7, #20]
1054:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2724              		.loc 1 1054 0
 2725 008a 1846     		mov	r0, r3
 2726 008c 07F11C07 		add	r7, r7, #28
 2727 0090 BD46     		mov	sp, r7
 2728 0092 80BC     		pop	{r7}
 2729 0094 7047     		bx	lr
 2730              		.cfi_endproc
 2731              	.LFE133:
 2733 0096 00BF     		.section	.text.PWMSP003_GetShadowTransferStatus,"ax",%progbits
 2734              		.align	2
 2735              		.global	PWMSP003_GetShadowTransferStatus
 2736              		.thumb
 2737              		.thumb_func
 2739              	PWMSP003_GetShadowTransferStatus:
 2740              	.LFB134:
1055:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1056:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1057:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function reads the shadow transfer status of the given slice
1058:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1059:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetShadowTransferStatus(const PWMSP003_HandleType * HandlePtr,
1060:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                           PWMSP003_ShadowTransferType Function,
1061:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                           uint8_t * State)
1062:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2741              		.loc 1 1062 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 24
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745              		@ link register save eliminated.
 2746 0000 80B4     		push	{r7}
 2747              	.LCFI66:
 2748              		.cfi_def_cfa_offset 4
 2749              		.cfi_offset 7, -4
 2750 0002 87B0     		sub	sp, sp, #28
 2751              	.LCFI67:
 2752              		.cfi_def_cfa_offset 32
 2753 0004 00AF     		add	r7, sp, #0
 2754              	.LCFI68:
 2755              		.cfi_def_cfa_register 7
 2756 0006 F860     		str	r0, [r7, #12]
 2757 0008 0B46     		mov	r3, r1
 2758 000a 7A60     		str	r2, [r7, #4]
 2759 000c FB72     		strb	r3, [r7, #11]
1063:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2760              		.loc 1 1063 0
 2761 000e 4FF00103 		mov	r3, #1
 2762 0012 7B61     		str	r3, [r7, #20]
1064:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1065:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 2763              		.loc 1 1065 0
 2764 0014 FB68     		ldr	r3, [r7, #12]
 2765 0016 DB6D     		ldr	r3, [r3, #92]
 2766 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2767 001a 002B     		cmp	r3, #0
 2768 001c 11D0     		beq	.L122
1066:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1067:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *State = (uint8_t)RD_REG(HandlePtr->CC4yKernRegsPtr->GCST,\
 2769              		.loc 1 1067 0
 2770 001e FB68     		ldr	r3, [r7, #12]
 2771 0020 9B69     		ldr	r3, [r3, #24]
 2772 0022 9A69     		ldr	r2, [r3, #24]
 2773 0024 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2774 0026 4FF00101 		mov	r1, #1
 2775 002a 01FA03F3 		lsl	r3, r1, r3
 2776 002e 1A40     		ands	r2, r2, r3
 2777 0030 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2778 0032 22FA03F3 		lsr	r3, r2, r3
 2779 0036 DAB2     		uxtb	r2, r3
 2780 0038 7B68     		ldr	r3, [r7, #4]
 2781 003a 1A70     		strb	r2, [r3, #0]
1068:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                            (uint32_t)(CCU4_GCST_S0SS_Msk << (uint32_t)Function),
1069:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                            (uint32_t)(CCU4_GCST_S0SS_Pos + (uint32_t)Function));
1070:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1071:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2782              		.loc 1 1071 0
 2783 003c 4FF00003 		mov	r3, #0
 2784 0040 7B61     		str	r3, [r7, #20]
 2785              	.L122:
1072:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1073:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1074:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2786              		.loc 1 1074 0
 2787 0042 7B69     		ldr	r3, [r7, #20]
1075:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2788              		.loc 1 1075 0
 2789 0044 1846     		mov	r0, r3
 2790 0046 07F11C07 		add	r7, r7, #28
 2791 004a BD46     		mov	sp, r7
 2792 004c 80BC     		pop	{r7}
 2793 004e 7047     		bx	lr
 2794              		.cfi_endproc
 2795              	.LFE134:
 2797              		.section	.text.PWMSP003_GetCountingDirection,"ax",%progbits
 2798              		.align	2
 2799              		.global	PWMSP003_GetCountingDirection
 2800              		.thumb
 2801              		.thumb_func
 2803              	PWMSP003_GetCountingDirection:
 2804              	.LFB135:
1076:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1077:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1078:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function reads the counting direction of the given slice
1079:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1080:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetCountingDirection(const PWMSP003_HandleType * HandlePtr,
1081:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                        PWMSP003_CountDirectionType * CountDir)
1082:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2805              		.loc 1 1082 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 16
 2808              		@ frame_needed = 1, uses_anonymous_args = 0
 2809              		@ link register save eliminated.
 2810 0000 80B4     		push	{r7}
 2811              	.LCFI69:
 2812              		.cfi_def_cfa_offset 4
 2813              		.cfi_offset 7, -4
 2814 0002 85B0     		sub	sp, sp, #20
 2815              	.LCFI70:
 2816              		.cfi_def_cfa_offset 24
 2817 0004 00AF     		add	r7, sp, #0
 2818              	.LCFI71:
 2819              		.cfi_def_cfa_register 7
 2820 0006 7860     		str	r0, [r7, #4]
 2821 0008 3960     		str	r1, [r7, #0]
1083:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2822              		.loc 1 1083 0
 2823 000a 4FF00103 		mov	r3, #1
 2824 000e FB60     		str	r3, [r7, #12]
1084:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1085:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED))
 2825              		.loc 1 1085 0
 2826 0010 7B68     		ldr	r3, [r7, #4]
 2827 0012 DB6D     		ldr	r3, [r3, #92]
 2828 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2829 0016 002B     		cmp	r3, #0
 2830 0018 0CD0     		beq	.L125
1086:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1087:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *CountDir =
1088:../Dave/Generated/src/PWMSP003/PWMSP003.c ****              (PWMSP003_CountDirectionType)RD_REG(HandlePtr->CC4yRegsPtr->TCST,\
 2831              		.loc 1 1088 0
 2832 001a 7B68     		ldr	r3, [r7, #4]
 2833 001c DB69     		ldr	r3, [r3, #28]
 2834 001e 9B68     		ldr	r3, [r3, #8]
 2835 0020 03F00203 		and	r3, r3, #2
 2836 0024 4FEA5303 		lsr	r3, r3, #1
 2837 0028 DAB2     		uxtb	r2, r3
1087:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *CountDir =
 2838              		.loc 1 1087 0
 2839 002a 3B68     		ldr	r3, [r7, #0]
 2840 002c 1A70     		strb	r2, [r3, #0]
1089:../Dave/Generated/src/PWMSP003/PWMSP003.c ****              CCU4_CC4_TCST_CDIR_Msk,
1090:../Dave/Generated/src/PWMSP003/PWMSP003.c ****              CCU4_CC4_TCST_CDIR_Pos);
1091:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1092:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2841              		.loc 1 1092 0
 2842 002e 4FF00003 		mov	r3, #0
 2843 0032 FB60     		str	r3, [r7, #12]
 2844              	.L125:
1093:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1094:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1095:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2845              		.loc 1 1095 0
 2846 0034 FB68     		ldr	r3, [r7, #12]
1096:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2847              		.loc 1 1096 0
 2848 0036 1846     		mov	r0, r3
 2849 0038 07F11407 		add	r7, r7, #20
 2850 003c BD46     		mov	sp, r7
 2851 003e 80BC     		pop	{r7}
 2852 0040 7047     		bx	lr
 2853              		.cfi_endproc
 2854              	.LFE135:
 2856 0042 00BF     		.section	.text.PWMSP003_RemapInput,"ax",%progbits
 2857              		.align	2
 2858              		.global	PWMSP003_RemapInput
 2859              		.thumb
 2860              		.thumb_func
 2862              	PWMSP003_RemapInput:
 2863              	.LFB136:
1097:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1098:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1099:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function allows user to change the input mapping
1100:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * for the given event.
1101:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1102:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_RemapInput(const PWMSP003_HandleType * HandlePtr,
1103:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                              PWMSP003_InputSelectionType Input,
1104:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                              PWMSP003_ExtEventType ExtEvent)
1105:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2864              		.loc 1 1105 0
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 16
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868              		@ link register save eliminated.
 2869 0000 90B4     		push	{r4, r7}
 2870              	.LCFI72:
 2871              		.cfi_def_cfa_offset 8
 2872              		.cfi_offset 4, -8
 2873              		.cfi_offset 7, -4
 2874 0002 84B0     		sub	sp, sp, #16
 2875              	.LCFI73:
 2876              		.cfi_def_cfa_offset 24
 2877 0004 00AF     		add	r7, sp, #0
 2878              	.LCFI74:
 2879              		.cfi_def_cfa_register 7
 2880 0006 7860     		str	r0, [r7, #4]
 2881 0008 1346     		mov	r3, r2
 2882 000a 0A46     		mov	r2, r1
 2883 000c FA70     		strb	r2, [r7, #3]
 2884 000e BB70     		strb	r3, [r7, #2]
1106:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2885              		.loc 1 1106 0
 2886 0010 4FF00103 		mov	r3, #1
 2887 0014 FB60     		str	r3, [r7, #12]
1107:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1108:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_RUNNING))
 2888              		.loc 1 1108 0
 2889 0016 7B68     		ldr	r3, [r7, #4]
 2890 0018 DB6D     		ldr	r3, [r3, #92]
 2891 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2892 001c 022B     		cmp	r3, #2
 2893 001e 2DD0     		beq	.L128
1109:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1110:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->INS,\
 2894              		.loc 1 1110 0
 2895 0020 7B68     		ldr	r3, [r7, #4]
 2896 0022 DA69     		ldr	r2, [r3, #28]
 2897 0024 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2898 0026 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2899 0028 03F18043 		add	r3, r3, #1073741824
 2900 002c 03F1FF33 		add	r3, r3, #-1
 2901 0030 4FEA8303 		lsl	r3, r3, #2
 2902 0034 01FA03F1 		lsl	r1, r1, r3
 2903 0038 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2904 003a 03F18043 		add	r3, r3, #1073741824
 2905 003e 03F1FF33 		add	r3, r3, #-1
 2906 0042 4FEA8303 		lsl	r3, r3, #2
 2907 0046 4FF00F00 		mov	r0, #15
 2908 004a 00FA03F3 		lsl	r3, r0, r3
 2909 004e 1940     		ands	r1, r1, r3
 2910 0050 7B68     		ldr	r3, [r7, #4]
 2911 0052 DB69     		ldr	r3, [r3, #28]
 2912 0054 1868     		ldr	r0, [r3, #0]
 2913 0056 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2914 0058 03F18043 		add	r3, r3, #1073741824
 2915 005c 03F1FF33 		add	r3, r3, #-1
 2916 0060 4FEA8303 		lsl	r3, r3, #2
 2917 0064 4FF00F04 		mov	r4, #15
 2918 0068 04FA03F3 		lsl	r3, r4, r3
 2919 006c 6FEA0303 		mvn	r3, r3
 2920 0070 0340     		ands	r3, r3, r0
 2921 0072 0B43     		orrs	r3, r3, r1
 2922 0074 1360     		str	r3, [r2, #0]
1111:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           ((uint32_t)CCU4_CC4_INS_EV0IS_Msk <<\
1112:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)(((uint32_t)ExtEvent - 1U) * PWMSP003_NO_OF_SLICES)),\
1113:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           ((uint32_t)CCU4_CC4_INS_EV0IS_Pos +\
1114:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)(((uint32_t)ExtEvent - 1U) * PWMSP003_NO_OF_SLICES)),\
1115:../Dave/Generated/src/PWMSP003/PWMSP003.c ****           (uint32_t)Input);
1116:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1117:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 2923              		.loc 1 1117 0
 2924 0076 4FF00003 		mov	r3, #0
 2925 007a FB60     		str	r3, [r7, #12]
 2926              	.L128:
1118:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1119:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1120:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 2927              		.loc 1 1120 0
 2928 007c FB68     		ldr	r3, [r7, #12]
1121:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 2929              		.loc 1 1121 0
 2930 007e 1846     		mov	r0, r3
 2931 0080 07F11007 		add	r7, r7, #16
 2932 0084 BD46     		mov	sp, r7
 2933 0086 90BC     		pop	{r4, r7}
 2934 0088 7047     		bx	lr
 2935              		.cfi_endproc
 2936              	.LFE136:
 2938 008a 00BF     		.section	.text.PWMSP003_RemapEvent,"ax",%progbits
 2939              		.align	2
 2940              		.global	PWMSP003_RemapEvent
 2941              		.thumb
 2942              		.thumb_func
 2944              	PWMSP003_RemapEvent:
 2945              	.LFB137:
1122:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1123:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1124:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function allows user to change the functionality
1125:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * for the given external event.
1126:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1127:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_RemapEvent(const PWMSP003_HandleType * HandlePtr,
1128:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                              PWMSP003_ExtEventType ExtEvent,
1129:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                              PWMSP003_ExtEventFunctionType Function)
1130:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 2946              		.loc 1 1130 0
 2947              		.cfi_startproc
 2948              		@ args = 0, pretend = 0, frame = 16
 2949              		@ frame_needed = 1, uses_anonymous_args = 0
 2950              		@ link register save eliminated.
 2951 0000 90B4     		push	{r4, r7}
 2952              	.LCFI75:
 2953              		.cfi_def_cfa_offset 8
 2954              		.cfi_offset 4, -8
 2955              		.cfi_offset 7, -4
 2956 0002 84B0     		sub	sp, sp, #16
 2957              	.LCFI76:
 2958              		.cfi_def_cfa_offset 24
 2959 0004 00AF     		add	r7, sp, #0
 2960              	.LCFI77:
 2961              		.cfi_def_cfa_register 7
 2962 0006 7860     		str	r0, [r7, #4]
 2963 0008 1346     		mov	r3, r2
 2964 000a 0A46     		mov	r2, r1
 2965 000c FA70     		strb	r2, [r7, #3]
 2966 000e BB70     		strb	r3, [r7, #2]
1131:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 2967              		.loc 1 1131 0
 2968 0010 4FF00103 		mov	r3, #1
 2969 0014 FB60     		str	r3, [r7, #12]
1132:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1133:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_RUNNING)
 2970              		.loc 1 1133 0
 2971 0016 7B68     		ldr	r3, [r7, #4]
 2972 0018 DB6D     		ldr	r3, [r3, #92]
 2973 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2974 001c 022B     		cmp	r3, #2
 2975 001e 63D0     		beq	.L131
1134:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1135:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Trap can be configured only for event 2 */
1136:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if(((uint32_t)ExtEvent == PWMSP003_EVENT_2) &&
 2976              		.loc 1 1136 0
 2977 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2978 0022 032B     		cmp	r3, #3
 2979 0024 0FD1     		bne	.L132
 2980              		.loc 1 1136 0 is_stmt 0 discriminator 1
 2981 0026 97F90230 		ldrsb	r3, [r7, #2]
 2982 002a 112B     		cmp	r3, #17
 2983 002c 0BD1     		bne	.L132
1137:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                  ((uint32_t)Function == PWMSP003_EXTERNAL_TRAP))
1138:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1139:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->CMC, (uint32_t)CCU4_CC4_CMC_TS_Msk,\
 2984              		.loc 1 1139 0 is_stmt 1
 2985 002e 7B68     		ldr	r3, [r7, #4]
 2986 0030 DB69     		ldr	r3, [r3, #28]
 2987 0032 7A68     		ldr	r2, [r7, #4]
 2988 0034 D269     		ldr	r2, [r2, #28]
 2989 0036 5268     		ldr	r2, [r2, #4]
 2990 0038 42F40032 		orr	r2, r2, #131072
 2991 003c 5A60     		str	r2, [r3, #4]
1140:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                               (uint32_t)CCU4_CC4_CMC_TS_Pos, PWMSP003_EVENT_2);
1141:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1142:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 2992              		.loc 1 1142 0
 2993 003e 4FF00003 		mov	r3, #0
 2994 0042 FB60     		str	r3, [r7, #12]
 2995 0044 50E0     		b	.L131
 2996              	.L132:
1143:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1144:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else if(((uint32_t)ExtEvent!=PWMSP003_EVENT_2) &&
 2997              		.loc 1 1144 0
 2998 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2999 0048 032B     		cmp	r3, #3
 3000 004a 07D0     		beq	.L133
 3001              		.loc 1 1144 0 is_stmt 0 discriminator 1
 3002 004c 97F90230 		ldrsb	r3, [r7, #2]
 3003 0050 112B     		cmp	r3, #17
 3004 0052 03D1     		bne	.L133
1145:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                    ((uint32_t)Function==PWMSP003_EXTERNAL_TRAP))
1146:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1147:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = PWMSP003_INVALID_PARAM_ERROR;
 3005              		.loc 1 1147 0 is_stmt 1
 3006 0054 4FF00203 		mov	r3, #2
 3007 0058 FB60     		str	r3, [r7, #12]
 3008 005a 45E0     		b	.L131
 3009              	.L133:
1148:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1149:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     /* Override can be configured only for event 1 and event 2 */
1150:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else if(((ExtEvent == PWMSP003_EVENT_1)
 3010              		.loc 1 1150 0
 3011 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3012 005e 022B     		cmp	r3, #2
 3013 0060 02D0     		beq	.L134
1151:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             || ((uint32_t)ExtEvent == PWMSP003_EVENT_2))
 3014              		.loc 1 1151 0
 3015 0062 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3016 0064 032B     		cmp	r3, #3
 3017 0066 15D1     		bne	.L135
 3018              	.L134:
1152:../Dave/Generated/src/PWMSP003/PWMSP003.c ****             && ((uint32_t)Function == PWMSP003_EXTERNAL_OVERRIDE))
 3019              		.loc 1 1152 0
 3020 0068 97F90230 		ldrsb	r3, [r7, #2]
 3021 006c 102B     		cmp	r3, #16
 3022 006e 11D1     		bne	.L135
1153:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1154:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->CMC, (uint32_t)CCU4_CC4_CMC_OFS_Msk,\
 3023              		.loc 1 1154 0
 3024 0070 7B68     		ldr	r3, [r7, #4]
 3025 0072 DB69     		ldr	r3, [r3, #28]
 3026 0074 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3027 0076 4FEA0242 		lsl	r2, r2, #16
 3028 007a 02F48031 		and	r1, r2, #65536
 3029 007e 7A68     		ldr	r2, [r7, #4]
 3030 0080 D269     		ldr	r2, [r2, #28]
 3031 0082 5268     		ldr	r2, [r2, #4]
 3032 0084 22F48032 		bic	r2, r2, #65536
 3033 0088 0A43     		orrs	r2, r2, r1
 3034 008a 5A60     		str	r2, [r3, #4]
1155:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                             (uint32_t)CCU4_CC4_CMC_OFS_Pos, (uint32_t)ExtEvent);
1156:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1157:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 3035              		.loc 1 1157 0
 3036 008c 4FF00003 		mov	r3, #0
 3037 0090 FB60     		str	r3, [r7, #12]
 3038 0092 29E0     		b	.L131
 3039              	.L135:
1158:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1159:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else if(((uint32_t)ExtEvent == PWMSP003_EVENT_0) &&\
 3040              		.loc 1 1159 0
 3041 0094 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3042 0096 012B     		cmp	r3, #1
 3043 0098 07D1     		bne	.L136
 3044              		.loc 1 1159 0 is_stmt 0 discriminator 1
 3045 009a 97F90230 		ldrsb	r3, [r7, #2]
 3046 009e 102B     		cmp	r3, #16
 3047 00a0 03D1     		bne	.L136
1160:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                ((uint32_t)Function == PWMSP003_EXTERNAL_OVERRIDE))
1161:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1162:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = PWMSP003_INVALID_PARAM_ERROR;
 3048              		.loc 1 1162 0 is_stmt 1
 3049 00a2 4FF00203 		mov	r3, #2
 3050 00a6 FB60     		str	r3, [r7, #12]
 3051 00a8 1EE0     		b	.L131
 3052              	.L136:
1163:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1164:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     else
1165:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1166:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       WR_REG(HandlePtr->CC4yRegsPtr->CMC,\
 3053              		.loc 1 1166 0
 3054 00aa 7B68     		ldr	r3, [r7, #4]
 3055 00ac DB69     		ldr	r3, [r3, #28]
 3056 00ae F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 3057 00b0 97F90220 		ldrsb	r2, [r7, #2]
 3058 00b4 01FA02F1 		lsl	r1, r1, r2
 3059 00b8 97F90220 		ldrsb	r2, [r7, #2]
 3060 00bc 4FF00300 		mov	r0, #3
 3061 00c0 00FA02F2 		lsl	r2, r0, r2
 3062 00c4 1140     		ands	r1, r1, r2
 3063 00c6 7A68     		ldr	r2, [r7, #4]
 3064 00c8 D269     		ldr	r2, [r2, #28]
 3065 00ca 5068     		ldr	r0, [r2, #4]
 3066 00cc 97F90220 		ldrsb	r2, [r7, #2]
 3067 00d0 4FF00304 		mov	r4, #3
 3068 00d4 04FA02F2 		lsl	r2, r4, r2
 3069 00d8 6FEA0202 		mvn	r2, r2
 3070 00dc 0240     		ands	r2, r2, r0
 3071 00de 0A43     		orrs	r2, r2, r1
 3072 00e0 5A60     		str	r2, [r3, #4]
1167:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                 ((uint32_t)CCU4_CC4_CMC_STRTS_Msk << (uint32_t)Function),\
1168:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                 ((uint32_t)CCU4_CC4_CMC_STRTS_Pos  + (uint32_t)Function),\
1169:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                 (uint32_t)ExtEvent);
1170:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       Status = (uint32_t)DAVEApp_SUCCESS;
 3073              		.loc 1 1170 0
 3074 00e2 4FF00003 		mov	r3, #0
 3075 00e6 FB60     		str	r3, [r7, #12]
 3076              	.L131:
1171:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1172:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1173:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1174:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 3077              		.loc 1 1174 0
 3078 00e8 FB68     		ldr	r3, [r7, #12]
1175:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 3079              		.loc 1 1175 0
 3080 00ea 1846     		mov	r0, r3
 3081 00ec 07F11007 		add	r7, r7, #16
 3082 00f0 BD46     		mov	sp, r7
 3083 00f2 90BC     		pop	{r4, r7}
 3084 00f4 7047     		bx	lr
 3085              		.cfi_endproc
 3086              	.LFE137:
 3088 00f6 00BF     		.section	.text.PWMSP003_ClearTrapFlag,"ax",%progbits
 3089              		.align	2
 3090              		.global	PWMSP003_ClearTrapFlag
 3091              		.thumb
 3092              		.thumb_func
 3094              	PWMSP003_ClearTrapFlag:
 3095              	.LFB138:
1176:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1177:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1178:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function resets the trap flag if trap condition is inactive
1179:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1180:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_ClearTrapFlag(const PWMSP003_HandleType * HandlePtr)
1181:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 3096              		.loc 1 1181 0
 3097              		.cfi_startproc
 3098              		@ args = 0, pretend = 0, frame = 16
 3099              		@ frame_needed = 1, uses_anonymous_args = 0
 3100              		@ link register save eliminated.
 3101 0000 80B4     		push	{r7}
 3102              	.LCFI78:
 3103              		.cfi_def_cfa_offset 4
 3104              		.cfi_offset 7, -4
 3105 0002 85B0     		sub	sp, sp, #20
 3106              	.LCFI79:
 3107              		.cfi_def_cfa_offset 24
 3108 0004 00AF     		add	r7, sp, #0
 3109              	.LCFI80:
 3110              		.cfi_def_cfa_register 7
 3111 0006 7860     		str	r0, [r7, #4]
1182:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 3112              		.loc 1 1182 0
 3113 0008 4FF00103 		mov	r3, #1
 3114 000c FB60     		str	r3, [r7, #12]
1183:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1184:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if ((HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED))
 3115              		.loc 1 1184 0
 3116 000e 7B68     		ldr	r3, [r7, #4]
 3117 0010 DB6D     		ldr	r3, [r3, #92]
 3118 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3119 0014 002B     		cmp	r3, #0
 3120 0016 1AD0     		beq	.L139
1185:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1186:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     if (HandlePtr->kTrapExitControl == (uint8_t)SET)
 3121              		.loc 1 1186 0
 3122 0018 7B68     		ldr	r3, [r7, #4]
 3123 001a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 3124 001c 012B     		cmp	r3, #1
 3125 001e 09D1     		bne	.L140
1187:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     {
1188:../Dave/Generated/src/PWMSP003/PWMSP003.c ****       SET_BIT(HandlePtr->CC4yRegsPtr->SWR, PWMSP003_EXTERNALEVENT_2_INTERRUPT);
 3126              		.loc 1 1188 0
 3127 0020 7B68     		ldr	r3, [r7, #4]
 3128 0022 DB69     		ldr	r3, [r3, #28]
 3129 0024 7A68     		ldr	r2, [r7, #4]
 3130 0026 D269     		ldr	r2, [r2, #28]
 3131 0028 D2F8B020 		ldr	r2, [r2, #176]
 3132 002c 42F48062 		orr	r2, r2, #1024
 3133 0030 C3F8B020 		str	r2, [r3, #176]
 3134              	.L140:
1189:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     }
1190:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     SET_BIT(HandlePtr->CC4yRegsPtr->SWR, PWMSP003_EXTERNALTRAP_INTERRUPT);
 3135              		.loc 1 1190 0
 3136 0034 7B68     		ldr	r3, [r7, #4]
 3137 0036 DB69     		ldr	r3, [r3, #28]
 3138 0038 7A68     		ldr	r2, [r7, #4]
 3139 003a D269     		ldr	r2, [r2, #28]
 3140 003c D2F8B020 		ldr	r2, [r2, #176]
 3141 0040 42F40062 		orr	r2, r2, #2048
 3142 0044 C3F8B020 		str	r2, [r3, #176]
1191:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1192:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 3143              		.loc 1 1192 0
 3144 0048 4FF00003 		mov	r3, #0
 3145 004c FB60     		str	r3, [r7, #12]
 3146              	.L139:
1193:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1194:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 3147              		.loc 1 1194 0
 3148 004e FB68     		ldr	r3, [r7, #12]
1195:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 3149              		.loc 1 1195 0
 3150 0050 1846     		mov	r0, r3
 3151 0052 07F11407 		add	r7, r7, #20
 3152 0056 BD46     		mov	sp, r7
 3153 0058 80BC     		pop	{r7}
 3154 005a 7047     		bx	lr
 3155              		.cfi_endproc
 3156              	.LFE138:
 3158              		.section	.text.PWMSP003_GetInterruptStatus,"ax",%progbits
 3159              		.align	2
 3160              		.global	PWMSP003_GetInterruptStatus
 3161              		.thumb
 3162              		.thumb_func
 3164              	PWMSP003_GetInterruptStatus:
 3165              	.LFB139:
1196:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1197:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1198:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  *  This function reads the requested event status for the given slice
1199:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1200:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_GetInterruptStatus(const PWMSP003_HandleType * HandlePtr,
1201:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                      PWMSP003_InterruptType Event,
1202:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                      uint8_t * InterruptStatus)
1203:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 3166              		.loc 1 1203 0
 3167              		.cfi_startproc
 3168              		@ args = 0, pretend = 0, frame = 24
 3169              		@ frame_needed = 1, uses_anonymous_args = 0
 3170              		@ link register save eliminated.
 3171 0000 80B4     		push	{r7}
 3172              	.LCFI81:
 3173              		.cfi_def_cfa_offset 4
 3174              		.cfi_offset 7, -4
 3175 0002 87B0     		sub	sp, sp, #28
 3176              	.LCFI82:
 3177              		.cfi_def_cfa_offset 32
 3178 0004 00AF     		add	r7, sp, #0
 3179              	.LCFI83:
 3180              		.cfi_def_cfa_register 7
 3181 0006 F860     		str	r0, [r7, #12]
 3182 0008 0B46     		mov	r3, r1
 3183 000a 7A60     		str	r2, [r7, #4]
 3184 000c FB72     		strb	r3, [r7, #11]
1204:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 3185              		.loc 1 1204 0
 3186 000e 4FF00103 		mov	r3, #1
 3187 0012 7B61     		str	r3, [r7, #20]
1205:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1206:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 3188              		.loc 1 1206 0
 3189 0014 FB68     		ldr	r3, [r7, #12]
 3190 0016 DB6D     		ldr	r3, [r3, #92]
 3191 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3192 001a 002B     		cmp	r3, #0
 3193 001c 12D0     		beq	.L143
1207:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1208:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     *InterruptStatus = (uint32_t) RD_REG(HandlePtr->CC4yRegsPtr->INTS,\
 3194              		.loc 1 1208 0
 3195 001e FB68     		ldr	r3, [r7, #12]
 3196 0020 DB69     		ldr	r3, [r3, #28]
 3197 0022 D3F8A020 		ldr	r2, [r3, #160]
 3198 0026 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3199 0028 4FF00101 		mov	r1, #1
 3200 002c 01FA03F3 		lsl	r3, r1, r3
 3201 0030 1A40     		ands	r2, r2, r3
 3202 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3203 0034 22FA03F3 		lsr	r3, r2, r3
 3204 0038 DAB2     		uxtb	r2, r3
 3205 003a 7B68     		ldr	r3, [r7, #4]
 3206 003c 1A70     		strb	r2, [r3, #0]
1209:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                           (CCU4_CC4_INTS_PMUS_Msk << (uint32_t)Event),\
1210:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                           (CCU4_CC4_INTS_PMUS_Pos + (uint32_t)Event));
1211:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1212:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 3207              		.loc 1 1212 0
 3208 003e 4FF00003 		mov	r3, #0
 3209 0042 7B61     		str	r3, [r7, #20]
 3210              	.L143:
1213:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1214:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1215:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 3211              		.loc 1 1215 0
 3212 0044 7B69     		ldr	r3, [r7, #20]
1216:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 3213              		.loc 1 1216 0
 3214 0046 1846     		mov	r0, r3
 3215 0048 07F11C07 		add	r7, r7, #28
 3216 004c BD46     		mov	sp, r7
 3217 004e 80BC     		pop	{r7}
 3218 0050 7047     		bx	lr
 3219              		.cfi_endproc
 3220              	.LFE139:
 3222 0052 00BF     		.section	.text.PWMSP003_TriggerInterrupt,"ax",%progbits
 3223              		.align	2
 3224              		.global	PWMSP003_TriggerInterrupt
 3225              		.thumb
 3226              		.thumb_func
 3228              	PWMSP003_TriggerInterrupt:
 3229              	.LFB140:
1217:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1218:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1219:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function triggers the requested event for the given slice
1220:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1221:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_TriggerInterrupt(const PWMSP003_HandleType * HandlePtr,
1222:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                    PWMSP003_InterruptType Event)
1223:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 3230              		.loc 1 1223 0
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 16
 3233              		@ frame_needed = 1, uses_anonymous_args = 0
 3234              		@ link register save eliminated.
 3235 0000 90B4     		push	{r4, r7}
 3236              	.LCFI84:
 3237              		.cfi_def_cfa_offset 8
 3238              		.cfi_offset 4, -8
 3239              		.cfi_offset 7, -4
 3240 0002 84B0     		sub	sp, sp, #16
 3241              	.LCFI85:
 3242              		.cfi_def_cfa_offset 24
 3243 0004 00AF     		add	r7, sp, #0
 3244              	.LCFI86:
 3245              		.cfi_def_cfa_register 7
 3246 0006 7860     		str	r0, [r7, #4]
 3247 0008 0B46     		mov	r3, r1
 3248 000a FB70     		strb	r3, [r7, #3]
1224:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 3249              		.loc 1 1224 0
 3250 000c 4FF00103 		mov	r3, #1
 3251 0010 FB60     		str	r3, [r7, #12]
1225:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1226:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 3252              		.loc 1 1226 0
 3253 0012 7B68     		ldr	r3, [r7, #4]
 3254 0014 DB6D     		ldr	r3, [r3, #92]
 3255 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3256 0018 002B     		cmp	r3, #0
 3257 001a 18D0     		beq	.L146
1227:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1228:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->SWS,\
 3258              		.loc 1 1228 0
 3259 001c 7B68     		ldr	r3, [r7, #4]
 3260 001e DB69     		ldr	r3, [r3, #28]
 3261 0020 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3262 0022 4FF00101 		mov	r1, #1
 3263 0026 01FA02F1 		lsl	r1, r1, r2
 3264 002a 7A68     		ldr	r2, [r7, #4]
 3265 002c D269     		ldr	r2, [r2, #28]
 3266 002e D2F8AC00 		ldr	r0, [r2, #172]
 3267 0032 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3268 0034 4FF00104 		mov	r4, #1
 3269 0038 04FA02F2 		lsl	r2, r4, r2
 3270 003c 6FEA0202 		mvn	r2, r2
 3271 0040 0240     		ands	r2, r2, r0
 3272 0042 0A43     		orrs	r2, r2, r1
 3273 0044 C3F8AC20 		str	r2, [r3, #172]
1229:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (CCU4_CC4_SWS_SPM_Msk << (uint32_t)Event),\
1230:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (CCU4_CC4_SWS_SPM_Pos + (uint32_t)Event),\
1231:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (uint32_t)0x1U);
1232:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1233:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 3274              		.loc 1 1233 0
 3275 0048 4FF00003 		mov	r3, #0
 3276 004c FB60     		str	r3, [r7, #12]
 3277              	.L146:
1234:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1235:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1236:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 3278              		.loc 1 1236 0
 3279 004e FB68     		ldr	r3, [r7, #12]
1237:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 3280              		.loc 1 1237 0
 3281 0050 1846     		mov	r0, r3
 3282 0052 07F11007 		add	r7, r7, #16
 3283 0056 BD46     		mov	sp, r7
 3284 0058 90BC     		pop	{r4, r7}
 3285 005a 7047     		bx	lr
 3286              		.cfi_endproc
 3287              	.LFE140:
 3289              		.section	.text.PWMSP003_AcknowledgeInterrupt,"ax",%progbits
 3290              		.align	2
 3291              		.global	PWMSP003_AcknowledgeInterrupt
 3292              		.thumb
 3293              		.thumb_func
 3295              	PWMSP003_AcknowledgeInterrupt:
 3296              	.LFB141:
1238:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1239:../Dave/Generated/src/PWMSP003/PWMSP003.c **** /**
1240:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  * This function clear the requested event flag for the given slice
1241:../Dave/Generated/src/PWMSP003/PWMSP003.c ****  */
1242:../Dave/Generated/src/PWMSP003/PWMSP003.c **** status_t PWMSP003_AcknowledgeInterrupt(const PWMSP003_HandleType * HandlePtr,
1243:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                                        PWMSP003_InterruptType Event)
1244:../Dave/Generated/src/PWMSP003/PWMSP003.c **** {
 3297              		.loc 1 1244 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 16
 3300              		@ frame_needed = 1, uses_anonymous_args = 0
 3301              		@ link register save eliminated.
 3302 0000 90B4     		push	{r4, r7}
 3303              	.LCFI87:
 3304              		.cfi_def_cfa_offset 8
 3305              		.cfi_offset 4, -8
 3306              		.cfi_offset 7, -4
 3307 0002 84B0     		sub	sp, sp, #16
 3308              	.LCFI88:
 3309              		.cfi_def_cfa_offset 24
 3310 0004 00AF     		add	r7, sp, #0
 3311              	.LCFI89:
 3312              		.cfi_def_cfa_register 7
 3313 0006 7860     		str	r0, [r7, #4]
 3314 0008 0B46     		mov	r3, r1
 3315 000a FB70     		strb	r3, [r7, #3]
1245:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   status_t Status = (uint32_t)PWMSP003_OPER_NOT_ALLOWED_ERROR;
 3316              		.loc 1 1245 0
 3317 000c 4FF00103 		mov	r3, #1
 3318 0010 FB60     		str	r3, [r7, #12]
1246:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1247:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   if (HandlePtr->DynamicDataType->StateType != PWMSP003_UNINITIALIZED)
 3319              		.loc 1 1247 0
 3320 0012 7B68     		ldr	r3, [r7, #4]
 3321 0014 DB6D     		ldr	r3, [r3, #92]
 3322 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3323 0018 002B     		cmp	r3, #0
 3324 001a 18D0     		beq	.L149
1248:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   {
1249:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     WR_REG(HandlePtr->CC4yRegsPtr->SWR,\
 3325              		.loc 1 1249 0
 3326 001c 7B68     		ldr	r3, [r7, #4]
 3327 001e DB69     		ldr	r3, [r3, #28]
 3328 0020 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3329 0022 4FF00101 		mov	r1, #1
 3330 0026 01FA02F1 		lsl	r1, r1, r2
 3331 002a 7A68     		ldr	r2, [r7, #4]
 3332 002c D269     		ldr	r2, [r2, #28]
 3333 002e D2F8B000 		ldr	r0, [r2, #176]
 3334 0032 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3335 0034 4FF00104 		mov	r4, #1
 3336 0038 04FA02F2 		lsl	r2, r4, r2
 3337 003c 6FEA0202 		mvn	r2, r2
 3338 0040 0240     		ands	r2, r2, r0
 3339 0042 0A43     		orrs	r2, r2, r1
 3340 0044 C3F8B020 		str	r2, [r3, #176]
1250:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (CCU4_CC4_SWR_RPM_Msk << (uint32_t)Event),\
1251:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (CCU4_CC4_SWR_RPM_Pos + (uint32_t)Event),\
1252:../Dave/Generated/src/PWMSP003/PWMSP003.c ****                        (uint32_t)0x1U);
1253:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1254:../Dave/Generated/src/PWMSP003/PWMSP003.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 3341              		.loc 1 1254 0
 3342 0048 4FF00003 		mov	r3, #0
 3343 004c FB60     		str	r3, [r7, #12]
 3344              	.L149:
1255:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   }
1256:../Dave/Generated/src/PWMSP003/PWMSP003.c **** 
1257:../Dave/Generated/src/PWMSP003/PWMSP003.c ****   return Status;
 3345              		.loc 1 1257 0
 3346 004e FB68     		ldr	r3, [r7, #12]
1258:../Dave/Generated/src/PWMSP003/PWMSP003.c **** }
 3347              		.loc 1 1258 0
 3348 0050 1846     		mov	r0, r3
 3349 0052 07F11007 		add	r7, r7, #16
 3350 0056 BD46     		mov	sp, r7
 3351 0058 90BC     		pop	{r4, r7}
 3352 005a 7047     		bx	lr
 3353              		.cfi_endproc
 3354              	.LFE141:
 3356              		.text
 3357              	.Letext0:
 3358              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 3359              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3360              		.file 4 "../Dave/Generated/src/PWMSP003/../../inc/PWMSP003/../../inc/LIBS/types.h"
 3361              		.file 5 "../Dave/Generated/src/PWMSP003/../../inc/PWMSP003/PWMSP003.h"
 3362              		.file 6 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 3363              		.file 7 "../Dave/Generated/src/PWMSP003/../../inc/PWMSP003/PWMSP003_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 PWMSP003.c
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:20     .text.PWMSP003_lSetCompareEdgeAlign:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:25     .text.PWMSP003_lSetCompareEdgeAlign:00000000 PWMSP003_lSetCompareEdgeAlign
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:83     .text.PWMSP003_lSetCompareCenterAlign:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:88     .text.PWMSP003_lSetCompareCenterAlign:00000000 PWMSP003_lSetCompareCenterAlign
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:143    .text.PWMSP003_lSetDutyEdgeAlign:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:148    .text.PWMSP003_lSetDutyEdgeAlign:00000000 PWMSP003_lSetDutyEdgeAlign
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:231    .text.PWMSP003_lSetDutyEdgeAlign:00000098 $d
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:236    .text.PWMSP003_lSetDutyCenterAlign:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:241    .text.PWMSP003_lSetDutyCenterAlign:00000000 PWMSP003_lSetDutyCenterAlign
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:322    .text.PWMSP003_lSetDutyCenterAlign:00000094 $d
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:327    .text.PWMSP003_Init:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:332    .text.PWMSP003_Init:00000000 PWMSP003_Init
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:408    .text.PWMSP003_lInit:00000000 PWMSP003_lInit
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1415   .text.PWMSP003_Start:00000000 PWMSP003_Start
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:403    .text.PWMSP003_lInit:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1410   .text.PWMSP003_Start:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1539   .text.PWMSP003_Deinit:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1544   .text.PWMSP003_Deinit:00000000 PWMSP003_Deinit
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1662   .text.PWMSP003_Stop:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1667   .text.PWMSP003_Stop:00000000 PWMSP003_Stop
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1745   .text.PWMSP003_GetSliceIdleStatus:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1750   .text.PWMSP003_GetSliceIdleStatus:00000000 PWMSP003_GetSliceIdleStatus
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1808   .text.PWMSP003_SetSliceIdleState:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1813   .text.PWMSP003_SetSliceIdleState:00000000 PWMSP003_SetSliceIdleState
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1870   .text.PWMSP003_RemoveSliceIdleState:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1875   .text.PWMSP003_RemoveSliceIdleState:00000000 PWMSP003_RemoveSliceIdleState
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1932   .text.PWMSP003_StartTimer:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1937   .text.PWMSP003_StartTimer:00000000 PWMSP003_StartTimer
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1988   .text.PWMSP003_StopTimer:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:1993   .text.PWMSP003_StopTimer:00000000 PWMSP003_StopTimer
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2044   .text.PWMSP003_GetTimerValue:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2049   .text.PWMSP003_GetTimerValue:00000000 PWMSP003_GetTimerValue
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2114   .text.PWMSP003_GetTimerStatus:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2119   .text.PWMSP003_GetTimerStatus:00000000 PWMSP003_GetTimerStatus
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2170   .text.PWMSP003_GetCompareMatchStatus:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2175   .text.PWMSP003_GetCompareMatchStatus:00000000 PWMSP003_GetCompareMatchStatus
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2235   .text.PWMSP003_UpdatePeriod:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2240   .text.PWMSP003_UpdatePeriod:00000000 PWMSP003_UpdatePeriod
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2353   .text.PWMSP003_UpdateCompare:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2358   .text.PWMSP003_UpdateCompare:00000000 PWMSP003_UpdateCompare
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2451   .text.PWMSP003_SetDutyCycle:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2456   .text.PWMSP003_SetDutyCycle:00000000 PWMSP003_SetDutyCycle
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2521   .text.PWMSP003_SetDutyCycle:00000060 $d
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2526   .text.PWMSP003_UpdateFloatingPrescaler:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2531   .text.PWMSP003_UpdateFloatingPrescaler:00000000 PWMSP003_UpdateFloatingPrescaler
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2635   .text.PWMSP003_UpdateDither:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2640   .text.PWMSP003_UpdateDither:00000000 PWMSP003_UpdateDither
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2734   .text.PWMSP003_GetShadowTransferStatus:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2739   .text.PWMSP003_GetShadowTransferStatus:00000000 PWMSP003_GetShadowTransferStatus
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2798   .text.PWMSP003_GetCountingDirection:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2803   .text.PWMSP003_GetCountingDirection:00000000 PWMSP003_GetCountingDirection
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2857   .text.PWMSP003_RemapInput:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2862   .text.PWMSP003_RemapInput:00000000 PWMSP003_RemapInput
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2939   .text.PWMSP003_RemapEvent:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:2944   .text.PWMSP003_RemapEvent:00000000 PWMSP003_RemapEvent
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3089   .text.PWMSP003_ClearTrapFlag:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3094   .text.PWMSP003_ClearTrapFlag:00000000 PWMSP003_ClearTrapFlag
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3159   .text.PWMSP003_GetInterruptStatus:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3164   .text.PWMSP003_GetInterruptStatus:00000000 PWMSP003_GetInterruptStatus
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3223   .text.PWMSP003_TriggerInterrupt:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3228   .text.PWMSP003_TriggerInterrupt:00000000 PWMSP003_TriggerInterrupt
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3290   .text.PWMSP003_AcknowledgeInterrupt:00000000 $t
C:\Users\Herbert\AppData\Local\Temp\ccui1K6Z.s:3295   .text.PWMSP003_AcknowledgeInterrupt:00000000 PWMSP003_AcknowledgeInterrupt
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.uc_id.h.35.91819d6149ee56f9404d69053d48d018
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.851ac7a1268528f4d6739384c2f248a5
                           .group:00000000 wm4.CCU4Global_Conf.h.63.3185b28f5d60dcacb47ae61d590330d9
                           .group:00000000 wm4.PWMSP003_Conf.h.49.d7c9ed31921edf4893f02e6f1d6268b4
                           .group:00000000 wm4.PWMSP003.h.103.903071678b9af5683776405c5b299fbb

UNDEFINED SYMBOLS
PWMSP003_HandleArr
